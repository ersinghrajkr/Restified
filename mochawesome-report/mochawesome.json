{
  "stats": {
    "suites": 33,
    "tests": 85,
    "passes": 68,
    "pending": 1,
    "failures": 16,
    "start": "2025-08-21T07:41:20.503Z",
    "end": "2025-08-21T07:42:23.355Z",
    "duration": 62852,
    "testsRegistered": 85,
    "passPercent": 80.95238095238095,
    "pendingPercent": 1.1764705882352942,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "16625a79-fe4f-49ae-b3bf-5d7f8c873867",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook: Before in \"{root}\"",
          "fullTitle": "\"before all\" hook: Before in \"{root}\"",
          "timedOut": false,
          "duration": 6091,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "this.timeout(30000); // Allow time for setup\nconsole.log('\\nüöÄ === GLOBAL SETUP: Initializing Restified ===');\n// Step 1: Load configuration\nconsole.log('üìã Loading configuration...');\ntry {\n    const configLoader = ConfigLoader_1.ConfigLoader.getInstance();\n    config = await configLoader.loadConfig();\n    // Validate configuration\n    const validation = configLoader.validateConfig(config);\n    if (!validation.valid) {\n        console.log('‚ö†Ô∏è  Configuration validation warnings:');\n        validation.errors.forEach(error => console.log(`   - ${error}`));\n    }\n    console.log('‚úÖ Configuration loaded');\n}\ncatch (error) {\n    console.log('‚ö†Ô∏è  Error loading configuration:', error.message);\n    console.log('üìã Using default configuration');\n    config = {}; // Will use defaults\n}\n// Step 2: Setup reporting infrastructure (only when needed)\nif (isReportingEnabled && config.reporting?.enabled !== false) {\n    console.log('üìä Setting up reporting infrastructure...');\n    const reportsDir = path.join(process.cwd(), config.reporting?.outputDir || 'reports');\n    try {\n        if (!fs.existsSync(reportsDir)) {\n            fs.mkdirSync(reportsDir, { recursive: true });\n        }\n        const reportMetadata = {\n            executionId: `restified-${Date.now()}`,\n            timestamp: new Date().toISOString(),\n            environment: config.environment?.name || 'development',\n            framework: 'Restified v1.0.0',\n            reportType: 'User-Generated Report'\n        };\n        fs.writeFileSync(path.join(reportsDir, 'report-info.json'), JSON.stringify(reportMetadata, null, 2));\n        console.log('‚úÖ Reporting ready');\n        console.log(`   üìÅ Reports will be saved to: ${reportsDir}/`);\n    }\n    catch (error) {\n        console.log('‚ö†Ô∏è  Warning: Could not setup reporting:', error.message);\n    }\n}\n// Step 3: Configure HTTP clients from config\nconsole.log('üîß Setting up HTTP clients...');\nif (config.clients) {\n    for (const [clientName, clientConfig] of Object.entries(config.clients)) {\n        // Merge global headers with client-specific headers\n        const headers = {\n            ...config.globalHeaders,\n            ...clientConfig.headers\n        };\n        src_1.restified.createClient(clientName, {\n            ...clientConfig,\n            headers\n        });\n    }\n    console.log(`‚úÖ ${Object.keys(config.clients).length} HTTP clients configured`);\n}\nelse {\n    console.log('‚ö†Ô∏è  No HTTP clients configured');\n}\n// Step 4: Perform authentication\nif (config.authentication) {\n    console.log('üîê Performing authentication...');\n    try {\n        const authResponse = await src_1.restified\n            .given()\n            .useClient(config.authentication.client)\n            .when()[config.authentication.method.toLowerCase()](config.authentication.endpoint)\n            .execute();\n        await authResponse\n            .statusCode(200)\n            .extract(config.authentication.extractors.token, 'globalAuthToken')\n            .extract(config.authentication.extractors.userEmail, 'globalUserEmail')\n            .extract(config.authentication.extractors.userId, 'globalUserId')\n            .execute();\n        // Automatically add auth token to configured HTTP clients\n        const authToken = src_1.restified.getVariable('globalAuthToken');\n        if (authToken) {\n            const authHeaderName = config.authentication.authHeaderName || 'Authorization';\n            const autoApplyToClients = config.authentication.autoApplyToClients || 'all';\n            if (autoApplyToClients === 'all') {\n                src_1.restified.addAuthTokenToAllClients(authToken, authHeaderName);\n                console.log('‚úÖ Authentication successful - Auth token added to all clients');\n            }\n            else if (Array.isArray(autoApplyToClients)) {\n                for (const clientName of autoApplyToClients) {\n                    const headerValue = authHeaderName === 'Authorization' ? `Bearer ${authToken}` : authToken;\n                    src_1.restified.updateClientHeaders(clientName, { [authHeaderName]: headerValue });\n                }\n                console.log(`‚úÖ Authentication successful - Auth token added to clients: ${autoApplyToClients.join(', ')}`);\n            }\n            console.log('   üìß User Email:', src_1.restified.getVariable('globalUserEmail'));\n            console.log('   üÜî User ID:', src_1.restified.getVariable('globalUserId'));\n            console.log(`   üîê Auth token automatically applied using header: ${authHeaderName}`);\n        }\n    }\n    catch (error) {\n        console.log('‚ö†Ô∏è  Authentication failed, using fallback values');\n        if (config.authentication.fallback) {\n            src_1.restified.setGlobalVariable('globalAuthToken', config.authentication.fallback.token);\n            src_1.restified.setGlobalVariable('globalUserEmail', config.authentication.fallback.userEmail);\n            src_1.restified.setGlobalVariable('globalUserId', config.authentication.fallback.userId);\n            // Add fallback auth token to configured clients\n            const authHeaderName = config.authentication.authHeaderName || 'Authorization';\n            const autoApplyToClients = config.authentication.autoApplyToClients || 'all';\n            if (autoApplyToClients === 'all') {\n                src_1.restified.addAuthTokenToAllClients(config.authentication.fallback.token, authHeaderName);\n                console.log('   üîê Fallback auth token added to all clients');\n            }\n            else if (Array.isArray(autoApplyToClients)) {\n                for (const clientName of autoApplyToClients) {\n                    const headerValue = authHeaderName === 'Authorization'\n                        ? `Bearer ${config.authentication.fallback.token}`\n                        : config.authentication.fallback.token;\n                    src_1.restified.updateClientHeaders(clientName, { [authHeaderName]: headerValue });\n                }\n                console.log(`   üîê Fallback auth token added to clients: ${autoApplyToClients.join(', ')}`);\n            }\n        }\n    }\n}\n// Step 5: Set up global variables from config\nif (config.globalVariables) {\n    console.log('üìã Setting up global variables...');\n    src_1.restified.setGlobalVariables(config.globalVariables);\n    console.log(`‚úÖ ${Object.keys(config.globalVariables).length} global variables configured`);\n}\n// Step 6: Set up environment variables from config\nif (config.environmentVariables) {\n    for (const [key, value] of Object.entries(config.environmentVariables)) {\n        process.env[key] = value;\n    }\n    console.log(`‚úÖ ${Object.keys(config.environmentVariables).length} environment variables set`);\n}\n// Step 7: Verify connectivity with health checks\nif (config.healthChecks && config.healthChecks.length > 0) {\n    console.log('üîç Verifying service connectivity...');\n    for (const healthCheck of config.healthChecks) {\n        try {\n            const response = await src_1.restified\n                .given()\n                .useClient(healthCheck.client)\n                .when()\n                .get(healthCheck.endpoint)\n                .execute();\n            await response.statusCode(healthCheck.expectedStatus).execute();\n            console.log(`   ‚úÖ ${healthCheck.name}: OK`);\n        }\n        catch (error) {\n            console.log(`   ‚ö†Ô∏è  ${healthCheck.name}: Failed`);\n        }\n    }\n}\nconsole.log('üéØ === GLOBAL SETUP COMPLETE ===\\n');",
          "err": {},
          "uuid": "d6c0e7b2-2275-48ee-9a76-991877a5cd5e",
          "parentUUID": "16625a79-fe4f-49ae-b3bf-5d7f8c873867",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": "[\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts\",\n        \"headers\": {},\n        \"body\": {\n          \"title\": \"My Test Post\",\n          \"body\": \"Created using global auth by {{globalUserEmail}}\",\n          \"userId\": \"1\"\n        },\n        \"timestamp\": \"2025-08-21T07:41:26.881Z\"\n      },\n      \"response\": {\n        \"status\": 201,\n        \"statusText\": \"Created\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:26 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"content-length\": \"121\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"access-control-expose-headers\": \"Location\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"79-jb7Ct/F0CRBC7SLwRvKLt5VtCmo\\\"\",\n          \"expires\": \"-1\",\n          \"location\": \"https://jsonplaceholder.typicode.com/posts/101\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=xO1CCy4gbvdPcRNJ6Su%2B7fZo4W5e2OuoiyBp0J4JxuY%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762086\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=xO1CCy4gbvdPcRNJ6Su%2B7fZo4W5e2OuoiyBp0J4JxuY%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762086\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"997\",\n          \"x-ratelimit-reset\": \"1755762097\",\n          \"cf-cache-status\": \"DYNAMIC\",\n          \"cf-ray\": \"97287cf1cae1cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"title\": \"My Test Post\",\n          \"body\": \"Created using global auth by {{globalUserEmail}}\",\n          \"userId\": \"1\",\n          \"id\": 101\n        },\n        \"responseTime\": \"282ms\",\n        \"timestamp\": \"2025-08-21T07:41:26.881Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 201, got 201\",\n          \"expected\": 201,\n          \"actual\": 201\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.title' expected 'My Test Post', got 'My Test Post'\",\n          \"expected\": \"My Test Post\",\n          \"actual\": \"My Test Post\"\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.userId' expected '1', got '1'\",\n          \"expected\": \"1\",\n          \"actual\": \"1\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:27.064Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:26 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17073\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287cf38e2bcfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"180ms\",\n        \"timestamp\": \"2025-08-21T07:41:27.064Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.userId' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.title' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Should have access to global test environment\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:26 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1754072526\",\n              \"age\": \"17073\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287cf38e2bcfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            \"responseTime\": 180,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 10000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v1\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Client-ID\": \"restified-test-suite\",\n                \"X-Correlation-ID\": \"{{$random.uuid}}\",\n                \"X-Source\": \"enterprise-testing\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Author\": \"test@enterprise.com\",\n                \"X-Requested-By\": \"test@enterprise.com\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 5,\n      \"passed\": 5,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:27.254Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:27 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5735\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287cf4b81bcfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"185ms\",\n        \"timestamp\": \"2025-08-21T07:41:27.254Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://httpbin.org/post\",\n        \"headers\": {},\n        \"body\": {\n          \"extractedData\": \"Multi-layered client-server neural-net\",\n          \"globalUser\": \"test@enterprise.com\",\n          \"testSuite\": \"enterprise-api-tests\"\n        },\n        \"timestamp\": \"2025-08-21T07:41:28.929Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:28 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"1401\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"args\": {},\n          \"data\": \"{\\\"extractedData\\\":\\\"Multi-layered client-server neural-net\\\",\\\"globalUser\\\":\\\"test@enterprise.com\\\",\\\"testSuite\\\":\\\"enterprise-api-tests\\\"}\",\n          \"files\": {},\n          \"form\": {},\n          \"headers\": {\n            \"Accept\": \"application/json\",\n            \"Accept-Encoding\": \"gzip, compress, deflate, br\",\n            \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n            \"Content-Length\": \"128\",\n            \"Content-Type\": \"application/json\",\n            \"Host\": \"httpbin.org\",\n            \"User-Agent\": \"axios/1.11.0\",\n            \"X-Amzn-Trace-Id\": \"Root=1-68a6cda7-55b1e626417f48772d80911e\",\n            \"X-Api-Version\": \"v1\",\n            \"X-Client-Version\": \"1.0.0\",\n            \"X-Compliance-Mode\": \"strict\",\n            \"X-Data-Classification\": \"internal\",\n            \"X-Environment\": \"development\",\n            \"X-Framework\": \"RestifiedTS\",\n            \"X-Node-Version\": \"v22.17.1\",\n            \"X-Organization\": \"enterprise-corp\",\n            \"X-Platform\": \"win32\",\n            \"X-Security-Level\": \"enterprise\",\n            \"X-Service\": \"test-utilities\",\n            \"X-Session-Id\": \"{{$random.uuid}}\",\n            \"X-Span-Id\": \"{{$random.uuid}}\",\n            \"X-Tenant-Id\": \"default-tenant\",\n            \"X-Test-Suite\": \"enterprise-api-tests\",\n            \"X-Trace-Id\": \"{{$random.uuid}}\"\n          },\n          \"json\": {\n            \"extractedData\": \"Multi-layered client-server neural-net\",\n            \"globalUser\": \"test@enterprise.com\",\n            \"testSuite\": \"enterprise-api-tests\"\n          },\n          \"origin\": \"152.59.146.53\",\n          \"url\": \"https://httpbin.org/post\"\n        },\n        \"responseTime\": \"1673ms\",\n        \"timestamp\": \"2025-08-21T07:41:28.929Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.json.globalUser' expected 'test@enterprise.com', got 'test@enterprise.com'\",\n          \"expected\": \"test@enterprise.com\",\n          \"actual\": \"test@enterprise.com\"\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.json.testSuite' expected 'enterprise-api-tests', got 'enterprise-api-tests'\",\n          \"expected\": \"enterprise-api-tests\",\n          \"actual\": \"enterprise-api-tests\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:29.120Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17075\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d006cf8cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"186ms\",\n        \"timestamp\": \"2025-08-21T07:41:29.120Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"header\",\n          \"passed\": true,\n          \"message\": \"Expected header 'content-type' to be present\",\n          \"expected\": \"present\",\n          \"actual\": \"application/json; charset=utf-8\"\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.title' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 4,\n      \"passed\": 4,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:29.311Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17075\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d019ee0cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"187ms\",\n        \"timestamp\": \"2025-08-21T07:41:29.311Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.userId' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.title' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.body' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Post ID should be a number\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1754072526\",\n              \"age\": \"17075\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d019ee0cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            \"responseTime\": 187,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 10000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v1\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Client-ID\": \"restified-test-suite\",\n                \"X-Correlation-ID\": \"{{$random.uuid}}\",\n                \"X-Source\": \"enterprise-testing\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Author\": \"test@enterprise.com\",\n                \"X-Requested-By\": \"test@enterprise.com\",\n                \"X-Test-Environment\": \"development\",\n                \"X-Global-User\": \"test@enterprise.com\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Should be running in expected test environment\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1754072526\",\n              \"age\": \"17075\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d019ee0cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            \"responseTime\": 187,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 10000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v1\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Client-ID\": \"restified-test-suite\",\n                \"X-Correlation-ID\": \"{{$random.uuid}}\",\n                \"X-Source\": \"enterprise-testing\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Author\": \"test@enterprise.com\",\n                \"X-Requested-By\": \"test@enterprise.com\",\n                \"X-Test-Environment\": \"development\",\n                \"X-Global-User\": \"test@enterprise.com\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 6,\n      \"passed\": 6,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:29.506Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5738\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d02c908cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"192ms\",\n        \"timestamp\": \"2025-08-21T07:41:29.506Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.name' expected 'Leanne Graham', got 'Leanne Graham'\",\n          \"expected\": \"Leanne Graham\",\n          \"actual\": \"Leanne Graham\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/2\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:29.690Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-XTG63SYhaP/Uo6/vgmARnL3rpBk\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755151077\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755151077\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755151090\",\n          \"age\": \"5312\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d03fb16cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 2,\n          \"name\": \"Ervin Howell\",\n          \"username\": \"Antonette\",\n          \"email\": \"Shanna@melissa.tv\",\n          \"address\": {\n            \"street\": \"Victor Plains\",\n            \"suite\": \"Suite 879\",\n            \"city\": \"Wisokyburgh\",\n            \"zipcode\": \"90566-7771\",\n            \"geo\": {\n              \"lat\": \"-43.9509\",\n              \"lng\": \"-34.4618\"\n            }\n          },\n          \"phone\": \"010-692-6593 x09125\",\n          \"website\": \"anastasia.net\",\n          \"company\": {\n            \"name\": \"Deckow-Crist\",\n            \"catchPhrase\": \"Proactive didactic contingency\",\n            \"bs\": \"synergize scalable supply-chains\"\n          }\n        },\n        \"responseTime\": \"183ms\",\n        \"timestamp\": \"2025-08-21T07:41:29.690Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '2', got '2'\",\n          \"expected\": 2,\n          \"actual\": 2\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.name' expected 'Ervin Howell', got 'Ervin Howell'\",\n          \"expected\": \"Ervin Howell\",\n          \"actual\": \"Ervin Howell\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/3\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:29.882Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"208-uuwhfwQMzFzbJr9Pg6DKXae0SXA\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=79x2jAcHlCuvrpQpZs7Z1kzivPPOHmlvcBDP9iWbf%2Fs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755756777\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=79x2jAcHlCuvrpQpZs7Z1kzivPPOHmlvcBDP9iWbf%2Fs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755756777\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"992\",\n          \"x-ratelimit-reset\": \"1755756817\",\n          \"age\": \"5312\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d052cd3cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 3,\n          \"name\": \"Clementine Bauch\",\n          \"username\": \"Samantha\",\n          \"email\": \"Nathan@yesenia.net\",\n          \"address\": {\n            \"street\": \"Douglas Extension\",\n            \"suite\": \"Suite 847\",\n            \"city\": \"McKenziehaven\",\n            \"zipcode\": \"59590-4157\",\n            \"geo\": {\n              \"lat\": \"-68.6102\",\n              \"lng\": \"-47.0653\"\n            }\n          },\n          \"phone\": \"1-463-123-4447\",\n          \"website\": \"ramiro.info\",\n          \"company\": {\n            \"name\": \"Romaguera-Jacobson\",\n            \"catchPhrase\": \"Face to face bifurcated interface\",\n            \"bs\": \"e-enable strategic applications\"\n          }\n        },\n        \"responseTime\": \"188ms\",\n        \"timestamp\": \"2025-08-21T07:41:29.882Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '3', got '3'\",\n          \"expected\": 3,\n          \"actual\": 3\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.name' expected 'Clementine Bauch', got 'Clementine Bauch'\",\n          \"expected\": \"Clementine Bauch\",\n          \"actual\": \"Clementine Bauch\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:30.069Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755577811\",\n          \"age\": \"12514\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d064ee9cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"qui est esse\",\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"eum et est occaecati\",\n            \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"nesciunt quas odio\",\n            \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 6,\n            \"title\": \"dolorem eum magni eos aperiam quia\",\n            \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 7,\n            \"title\": \"magnam facilis autem\",\n            \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 8,\n            \"title\": \"dolorem dolore est ipsam\",\n            \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 9,\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n            \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 10,\n            \"title\": \"optio molestias id quia eum\",\n            \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n          }\n        ],\n        \"responseTime\": \"185ms\",\n        \"timestamp\": \"2025-08-21T07:41:30.069Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"User 1 should have 10-15 posts\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755577811\",\n              \"age\": \"12514\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d064ee9cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              }\n            ],\n            \"responseTime\": 185,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"All posts should belong to user 1\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:29 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755577811\",\n              \"age\": \"12514\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d064ee9cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              }\n            ],\n            \"responseTime\": 185,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=2\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:30.249Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"add-8VKPUO46clThjTS9/JNMO2KqAMY\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755453011\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755453011\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755453030\",\n          \"age\": \"8522\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d07798ecfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 2,\n            \"id\": 11,\n            \"title\": \"et ea vero quia laudantium autem\",\n            \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 12,\n            \"title\": \"in quibusdam tempore odit est dolorem\",\n            \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 13,\n            \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n            \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 14,\n            \"title\": \"voluptatem eligendi optio\",\n            \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 15,\n            \"title\": \"eveniet quod temporibus\",\n            \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 16,\n            \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n            \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 17,\n            \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n            \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 18,\n            \"title\": \"voluptate et itaque vero tempora molestiae\",\n            \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 19,\n            \"title\": \"adipisci placeat illum aut reiciendis qui\",\n            \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 20,\n            \"title\": \"doloribus ad provident suscipit at\",\n            \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n          }\n        ],\n        \"responseTime\": \"178ms\",\n        \"timestamp\": \"2025-08-21T07:41:30.249Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"User 2 should have 8-12 posts\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"add-8VKPUO46clThjTS9/JNMO2KqAMY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755453011\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755453011\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755453030\",\n              \"age\": \"8522\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d07798ecfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 2,\n                \"id\": 11,\n                \"title\": \"et ea vero quia laudantium autem\",\n                \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 12,\n                \"title\": \"in quibusdam tempore odit est dolorem\",\n                \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 13,\n                \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n                \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 14,\n                \"title\": \"voluptatem eligendi optio\",\n                \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 15,\n                \"title\": \"eveniet quod temporibus\",\n                \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 16,\n                \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n                \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 17,\n                \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n                \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 18,\n                \"title\": \"voluptate et itaque vero tempora molestiae\",\n                \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 19,\n                \"title\": \"adipisci placeat illum aut reiciendis qui\",\n                \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 20,\n                \"title\": \"doloribus ad provident suscipit at\",\n                \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n              }\n            ],\n            \"responseTime\": 178,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=2\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"All posts should belong to user 2\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"add-8VKPUO46clThjTS9/JNMO2KqAMY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755453011\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=QwC8oJEpNT016TGhhOR5r3bJJH%2FlKXrIna4uWP9mQfA%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755453011\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755453030\",\n              \"age\": \"8522\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287d07798ecfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 2,\n                \"id\": 11,\n                \"title\": \"et ea vero quia laudantium autem\",\n                \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 12,\n                \"title\": \"in quibusdam tempore odit est dolorem\",\n                \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 13,\n                \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n                \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 14,\n                \"title\": \"voluptatem eligendi optio\",\n                \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 15,\n                \"title\": \"eveniet quod temporibus\",\n                \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 16,\n                \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n                \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 17,\n                \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n                \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 18,\n                \"title\": \"voluptate et itaque vero tempora molestiae\",\n                \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 19,\n                \"title\": \"adipisci placeat illum aut reiciendis qui\",\n                \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 20,\n                \"title\": \"doloribus ad provident suscipit at\",\n                \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n              }\n            ],\n            \"responseTime\": 178,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=2\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=3\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:30.580Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"a65-1/mRNOhrr+3bFpMuWj+OXmTpWLs\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762090\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762090\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"996\",\n          \"x-ratelimit-reset\": \"1755762097\",\n          \"cf-cache-status\": \"MISS\",\n          \"cf-ray\": \"97287d089b84cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 3,\n            \"id\": 21,\n            \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n            \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 22,\n            \"title\": \"dolor sint quo a velit explicabo quia nam\",\n            \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 23,\n            \"title\": \"maxime id vitae nihil numquam\",\n            \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 24,\n            \"title\": \"autem hic labore sunt dolores incidunt\",\n            \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 25,\n            \"title\": \"rem alias distinctio quo quis\",\n            \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 26,\n            \"title\": \"est et quae odit qui non\",\n            \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 27,\n            \"title\": \"quasi id et eos tenetur aut quo autem\",\n            \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 28,\n            \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n            \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 29,\n            \"title\": \"iusto eius quod necessitatibus culpa ea\",\n            \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 30,\n            \"title\": \"a quo magni similique perferendis\",\n            \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n          }\n        ],\n        \"responseTime\": \"328ms\",\n        \"timestamp\": \"2025-08-21T07:41:30.580Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"User 3 should have 5-15 posts\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"a65-1/mRNOhrr+3bFpMuWj+OXmTpWLs\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762090\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762090\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"996\",\n              \"x-ratelimit-reset\": \"1755762097\",\n              \"cf-cache-status\": \"MISS\",\n              \"cf-ray\": \"97287d089b84cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 3,\n                \"id\": 21,\n                \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n                \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 22,\n                \"title\": \"dolor sint quo a velit explicabo quia nam\",\n                \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 23,\n                \"title\": \"maxime id vitae nihil numquam\",\n                \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 24,\n                \"title\": \"autem hic labore sunt dolores incidunt\",\n                \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 25,\n                \"title\": \"rem alias distinctio quo quis\",\n                \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 26,\n                \"title\": \"est et quae odit qui non\",\n                \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 27,\n                \"title\": \"quasi id et eos tenetur aut quo autem\",\n                \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 28,\n                \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n                \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 29,\n                \"title\": \"iusto eius quod necessitatibus culpa ea\",\n                \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 30,\n                \"title\": \"a quo magni similique perferendis\",\n                \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n              }\n            ],\n            \"responseTime\": 328,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=3\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"All posts should belong to user 3\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"a65-1/mRNOhrr+3bFpMuWj+OXmTpWLs\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762090\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=cfw0Y5Fb9gUjOTtRXMx693oQ7XAavtgW%2FberqRn0Law%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762090\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"996\",\n              \"x-ratelimit-reset\": \"1755762097\",\n              \"cf-cache-status\": \"MISS\",\n              \"cf-ray\": \"97287d089b84cfa3-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 3,\n                \"id\": 21,\n                \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n                \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 22,\n                \"title\": \"dolor sint quo a velit explicabo quia nam\",\n                \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 23,\n                \"title\": \"maxime id vitae nihil numquam\",\n                \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 24,\n                \"title\": \"autem hic labore sunt dolores incidunt\",\n                \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 25,\n                \"title\": \"rem alias distinctio quo quis\",\n                \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 26,\n                \"title\": \"est et quae odit qui non\",\n                \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 27,\n                \"title\": \"quasi id et eos tenetur aut quo autem\",\n                \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 28,\n                \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n                \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 29,\n                \"title\": \"iusto eius quod necessitatibus culpa ea\",\n                \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 30,\n                \"title\": \"a quo magni similique perferendis\",\n                \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n              }\n            ],\n            \"responseTime\": 328,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=3\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:30.766Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17076\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d0aaf6ecfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"185ms\",\n        \"timestamp\": \"2025-08-21T07:41:30.766Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/999\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:30.948Z\"\n      },\n      \"response\": {\n        \"status\": 404,\n        \"statusText\": \"Not Found\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:30 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=soyrhZYcVBnYVeIlA%2BQCgp481N%2ByMXWlvMIE5edAUP0%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755756307\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=soyrhZYcVBnYVeIlA%2BQCgp481N%2ByMXWlvMIE5edAUP0%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755756307\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"998\",\n          \"x-ratelimit-reset\": \"1755756337\",\n          \"age\": \"5783\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d0bd97bcfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {},\n        \"responseTime\": \"179ms\",\n        \"timestamp\": \"2025-08-21T07:41:30.948Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 404, got 404\",\n          \"expected\": 404,\n          \"actual\": 404\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:31.128Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:31 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5739\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d0cfb73cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"175ms\",\n        \"timestamp\": \"2025-08-21T07:41:31.128Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/999\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:31.311Z\"\n      },\n      \"response\": {\n        \"status\": 404,\n        \"statusText\": \"Not Found\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:31 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=yFQgw%2BbCe7enBUbeuxemkpp%2FYTgLasQnHNxNBtmKJr8%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755755813\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=yFQgw%2BbCe7enBUbeuxemkpp%2FYTgLasQnHNxNBtmKJr8%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755755813\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755755857\",\n          \"age\": \"6278\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d0e1d1dcfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {},\n        \"responseTime\": \"181ms\",\n        \"timestamp\": \"2025-08-21T07:41:31.311Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 404, got 404\",\n          \"expected\": 404,\n          \"actual\": 404\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users\",\n        \"headers\": {},\n        \"body\": {\n          \"name\": \"Database Test User\",\n          \"email\": \"dbtest@example.com\",\n          \"username\": \"dbtestuser\"\n        },\n        \"timestamp\": \"2025-08-21T07:41:31.599Z\"\n      },\n      \"response\": {\n        \"status\": 201,\n        \"statusText\": \"Created\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:31 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"content-length\": \"107\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"access-control-expose-headers\": \"Location\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"6b-mXOvDcDrPC2wJ/7f5p8PzHCDw8w\\\"\",\n          \"expires\": \"-1\",\n          \"location\": \"https://jsonplaceholder.typicode.com/users/11\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=pDv1s46CjN3bItngkKZRzA6Z9pChCBC%2Beer6l8KtUhM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762091\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=pDv1s46CjN3bItngkKZRzA6Z9pChCBC%2Beer6l8KtUhM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762091\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"995\",\n          \"x-ratelimit-reset\": \"1755762097\",\n          \"cf-cache-status\": \"DYNAMIC\",\n          \"cf-ray\": \"97287d0f4f35cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"name\": \"Database Test User\",\n          \"email\": \"dbtest@example.com\",\n          \"username\": \"dbtestuser\",\n          \"id\": 11\n        },\n        \"responseTime\": \"277ms\",\n        \"timestamp\": \"2025-08-21T07:41:31.599Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 201, got 201\",\n          \"expected\": 201,\n          \"actual\": 201\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/9999\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:32.106Z\"\n      },\n      \"response\": {\n        \"status\": 404,\n        \"statusText\": \"Not Found\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:32 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=pDv1s46CjN3bItngkKZRzA6Z9pChCBC%2Beer6l8KtUhM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762091\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=pDv1s46CjN3bItngkKZRzA6Z9pChCBC%2Beer6l8KtUhM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762091\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"994\",\n          \"x-ratelimit-reset\": \"1755762097\",\n          \"cf-cache-status\": \"EXPIRED\",\n          \"cf-ray\": \"97287d114a92cfa3-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {},\n        \"responseTime\": \"467ms\",\n        \"timestamp\": \"2025-08-21T07:41:32.106Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 404, got 404\",\n          \"expected\": 404,\n          \"actual\": 404\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/status/500\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:36.678Z\"\n      },\n      \"response\": {\n        \"status\": 500,\n        \"statusText\": \"INTERNAL SERVER ERROR\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:36 GMT\",\n          \"content-type\": \"text/html; charset=utf-8\",\n          \"content-length\": \"0\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": \"\",\n        \"responseTime\": \"3550ms\",\n        \"timestamp\": \"2025-08-21T07:41:36.678Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 500, got 500\",\n          \"expected\": 500,\n          \"actual\": 500\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/html\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:37.622Z\"\n      },\n      \"response\": {\n        \"status\": 502,\n        \"statusText\": \"Bad Gateway\",\n        \"headers\": {\n          \"server\": \"awselb/2.0\",\n          \"date\": \"Thu, 21 Aug 2025 07:41:37 GMT\",\n          \"content-type\": \"text/html\",\n          \"content-length\": \"122\",\n          \"connection\": \"keep-alive\"\n        },\n        \"body\": \"<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n\",\n        \"responseTime\": \"942ms\",\n        \"timestamp\": \"2025-08-21T07:41:37.622Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": false,\n          \"message\": \"Expected status code 200, got 502\",\n          \"expected\": 200,\n          \"actual\": 502\n        },\n        {\n          \"type\": \"header\",\n          \"passed\": true,\n          \"message\": \"Expected header 'content-type' to be present\",\n          \"expected\": \"present\",\n          \"actual\": \"text/html\"\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Response should be HTML\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 502,\n            \"statusText\": \"Bad Gateway\",\n            \"headers\": {\n              \"server\": \"awselb/2.0\",\n              \"date\": \"Thu, 21 Aug 2025 07:41:37 GMT\",\n              \"content-type\": \"text/html\",\n              \"content-length\": \"122\",\n              \"connection\": \"keep-alive\"\n            },\n            \"data\": \"<html>\\r\\n<head><title>502 Bad Gateway</title></head>\\r\\n<body>\\r\\n<center><h1>502 Bad Gateway</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n\",\n            \"responseTime\": 942,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://httpbin.org/html\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 2,\n      \"failed\": 1,\n      \"details\": [\n        \"Expected status code 200, got 502\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:38 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=Eeo9F9lvohUP3G51lHijKJtiQ9YQsp1DiLhKzGsQ4KU%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755525675\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=Eeo9F9lvohUP3G51lHijKJtiQ9YQsp1DiLhKzGsQ4KU%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755525675\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755525730\",\n          \"age\": \"6012\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d39eaed81bc-SIN\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"657ms\",\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:38 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17084\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d390993e285-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"560ms\",\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:38 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17084\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287d393a0ee221-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"574ms\",\n        \"timestamp\": \"2025-08-21T07:41:38.289Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/bearer\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:39.097Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:38 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"57\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"authenticated\": true,\n          \"token\": \"invalid-token\"\n        },\n        \"responseTime\": \"808ms\",\n        \"timestamp\": \"2025-08-21T07:41:39.097Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts\",\n        \"headers\": {},\n        \"body\": {\n          \"invalidField\": \"test\"\n        },\n        \"timestamp\": \"2025-08-21T07:41:39.918Z\"\n      },\n      \"response\": {\n        \"status\": 201,\n        \"statusText\": \"Created\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:39 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"content-length\": \"41\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"access-control-expose-headers\": \"Location\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"29-6kDiAVFfNFqp2wHSlEsXXhuw9Lo\\\"\",\n          \"expires\": \"-1\",\n          \"location\": \"https://jsonplaceholder.typicode.com/posts/101\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=AILh%2FexJ1mrs8NUFpS02mP2JgF5zWm6A1fzCji104sM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762099\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=AILh%2FexJ1mrs8NUFpS02mP2JgF5zWm6A1fzCji104sM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762099\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755762157\",\n          \"cf-cache-status\": \"DYNAMIC\",\n          \"cf-ray\": \"97287d3fc88881bc-SIN\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"invalidField\": \"test\",\n          \"id\": 101\n        },\n        \"responseTime\": \"820ms\",\n        \"timestamp\": \"2025-08-21T07:41:39.918Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 201, got 201\",\n          \"expected\": 201,\n          \"actual\": 201\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users\",\n        \"headers\": {},\n        \"body\": {\n          \"name\": \"\",\n          \"email\": \"Donna_Hettinger65@yahoo.com\",\n          \"age\": \"30\",\n          \"preferences\": {\n            \"theme\": \"dark\",\n            \"language\": \"en-US\"\n          }\n        },\n        \"timestamp\": \"2025-08-21T07:41:56.906Z\"\n      },\n      \"response\": {\n        \"status\": 201,\n        \"statusText\": \"Created\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:56 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"content-length\": \"154\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"access-control-expose-headers\": \"Location\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"9a-9E46mAX1oFVpHHf4yzbSniPEQF4\\\"\",\n          \"expires\": \"-1\",\n          \"location\": \"https://jsonplaceholder.typicode.com/users/11\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=3AIAqNE5irfYI9buzfoSUmru4TyDEj9I3JNS2yO0Lfk%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762116\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=3AIAqNE5irfYI9buzfoSUmru4TyDEj9I3JNS2yO0Lfk%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762116\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"998\",\n          \"x-ratelimit-reset\": \"1755762157\",\n          \"cf-cache-status\": \"DYNAMIC\",\n          \"cf-ray\": \"97287dad7dd1f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"name\": \"\",\n          \"email\": \"Donna_Hettinger65@yahoo.com\",\n          \"age\": \"30\",\n          \"preferences\": {\n            \"theme\": \"dark\",\n            \"language\": \"en-US\"\n          },\n          \"id\": 11\n        },\n        \"responseTime\": \"628ms\",\n        \"timestamp\": \"2025-08-21T07:41:56.906Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 201, got 201\",\n          \"expected\": 201,\n          \"actual\": 201\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:57.197Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:57 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5765\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dafea3df4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"176ms\",\n        \"timestamp\": \"2025-08-21T07:41:57.197Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": false,\n          \"message\": \"JSONPath '$.email' expected 'test@enterprise.com', got 'Sincere@april.biz'\",\n          \"expected\": \"test@enterprise.com\",\n          \"actual\": \"Sincere@april.biz\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 2,\n      \"failed\": 1,\n      \"details\": [\n        \"JSONPath '$.email' expected 'test@enterprise.com', got 'Sincere@april.biz'\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/headers\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:58.551Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:58 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"999\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"headers\": {\n            \"Accept\": \"application/json\",\n            \"Accept-Encoding\": \"gzip, compress, deflate, br\",\n            \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n            \"Content-Type\": \"application/json\",\n            \"Host\": \"httpbin.org\",\n            \"User-Agent\": \"axios/1.11.0\",\n            \"X-Amzn-Trace-Id\": \"Root=1-68a6cdc6-227d18520b19e6196c77781a\",\n            \"X-Api-Version\": \"v1\",\n            \"X-Client-Version\": \"1.0.0\",\n            \"X-Compliance-Mode\": \"strict\",\n            \"X-Data-Classification\": \"internal\",\n            \"X-Environment\": \"development\",\n            \"X-Framework\": \"RestifiedTS\",\n            \"X-Global-Auth-Token\": \"enterprise-fallback-token-123\",\n            \"X-Node-Version\": \"v22.17.1\",\n            \"X-Organization\": \"enterprise-corp\",\n            \"X-Platform\": \"win32\",\n            \"X-Security-Level\": \"enterprise\",\n            \"X-Service\": \"test-utilities\",\n            \"X-Session-Id\": \"{{$random.uuid}}\",\n            \"X-Span-Id\": \"{{$random.uuid}}\",\n            \"X-Tenant-Id\": \"default-tenant\",\n            \"X-Test-Suite\": \"enterprise-api-tests\",\n            \"X-Trace-Id\": \"{{$random.uuid}}\"\n          }\n        },\n        \"responseTime\": \"1350ms\",\n        \"timestamp\": \"2025-08-21T07:41:58.551Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": false,\n          \"message\": \"JSONPath '$.headers.X-Test-Suite' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\\n$.headers.X-Test-Suite\\n-----------^\",\n          \"expected\": \"valid JSONPath\",\n          \"actual\": {}\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": false,\n          \"message\": \"JSONPath '$.headers.X-Environment' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\\n$.headers.X-Environment\\n-----------^\",\n          \"expected\": \"valid JSONPath\",\n          \"actual\": {}\n        },\n        {\n          \"type\": \"header\",\n          \"passed\": true,\n          \"message\": \"Should have correct global auth token in headers\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:41:58 GMT\",\n              \"content-type\": \"application/json\",\n              \"content-length\": \"999\",\n              \"connection\": \"keep-alive\",\n              \"server\": \"gunicorn/19.9.0\",\n              \"access-control-allow-origin\": \"*\",\n              \"access-control-allow-credentials\": \"true\"\n            },\n            \"data\": {\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"Content-Type\": \"application/json\",\n                \"Host\": \"httpbin.org\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"X-Amzn-Trace-Id\": \"Root=1-68a6cdc6-227d18520b19e6196c77781a\",\n                \"X-Api-Version\": \"v1\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Environment\": \"development\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Global-Auth-Token\": \"enterprise-fallback-token-123\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Platform\": \"win32\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Service\": \"test-utilities\",\n                \"X-Session-Id\": \"{{$random.uuid}}\",\n                \"X-Span-Id\": \"{{$random.uuid}}\",\n                \"X-Tenant-Id\": \"default-tenant\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Trace-Id\": \"{{$random.uuid}}\"\n              }\n            },\n            \"responseTime\": 1350,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 15000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v1\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Service\": \"test-utilities\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Global-Auth-Token\": \"enterprise-fallback-token-123\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://httpbin.org/headers\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 4,\n      \"passed\": 2,\n      \"failed\": 2,\n      \"details\": [\n        \"JSONPath '$.headers.X-Test-Suite' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\\n$.headers.X-Test-Suite\\n-----------^\",\n        \"JSONPath '$.headers.X-Environment' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\\n$.headers.X-Environment\\n-----------^\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/2\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:41:58.728Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:41:58 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-XTG63SYhaP/Uo6/vgmARnL3rpBk\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755151077\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755151077\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755151090\",\n          \"age\": \"5341\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287db979f9f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 2,\n          \"name\": \"Ervin Howell\",\n          \"username\": \"Antonette\",\n          \"email\": \"Shanna@melissa.tv\",\n          \"address\": {\n            \"street\": \"Victor Plains\",\n            \"suite\": \"Suite 879\",\n            \"city\": \"Wisokyburgh\",\n            \"zipcode\": \"90566-7771\",\n            \"geo\": {\n              \"lat\": \"-43.9509\",\n              \"lng\": \"-34.4618\"\n            }\n          },\n          \"phone\": \"010-692-6593 x09125\",\n          \"website\": \"anastasia.net\",\n          \"company\": {\n            \"name\": \"Deckow-Crist\",\n            \"catchPhrase\": \"Proactive didactic contingency\",\n            \"bs\": \"synergize scalable supply-chains\"\n          }\n        },\n        \"responseTime\": \"175ms\",\n        \"timestamp\": \"2025-08-21T07:41:58.728Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://httpbin.org/post\",\n        \"headers\": {},\n        \"body\": {\n          \"message\": \"User Ervin Howell from anastasia.net\",\n          \"globalUser\": \"test@enterprise.com\",\n          \"environment\": \"development\",\n          \"timestamp\": \"2025-08-21T07:41:58.728Z\"\n        },\n        \"timestamp\": \"2025-08-21T07:42:01.635Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:01 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"1521\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"args\": {},\n          \"data\": \"{\\\"message\\\":\\\"User Ervin Howell from anastasia.net\\\",\\\"globalUser\\\":\\\"test@enterprise.com\\\",\\\"environment\\\":\\\"development\\\",\\\"timestamp\\\":\\\"2025-08-21T07:41:58.728Z\\\"}\",\n          \"files\": {},\n          \"form\": {},\n          \"headers\": {\n            \"Accept\": \"application/json\",\n            \"Accept-Encoding\": \"gzip, compress, deflate, br\",\n            \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n            \"Content-Length\": \"152\",\n            \"Content-Type\": \"application/json\",\n            \"Host\": \"httpbin.org\",\n            \"User-Agent\": \"axios/1.11.0\",\n            \"X-Amzn-Trace-Id\": \"Root=1-68a6cdc6-73f0e36e50c5a34a7a4a8fdd\",\n            \"X-Api-Version\": \"v1\",\n            \"X-Client-Version\": \"1.0.0\",\n            \"X-Compliance-Mode\": \"strict\",\n            \"X-Data-Classification\": \"internal\",\n            \"X-Environment\": \"development\",\n            \"X-Framework\": \"RestifiedTS\",\n            \"X-Global-Auth-Token\": \"enterprise-fallback-token-123\",\n            \"X-Node-Version\": \"v22.17.1\",\n            \"X-Organization\": \"enterprise-corp\",\n            \"X-Platform\": \"win32\",\n            \"X-Security-Level\": \"enterprise\",\n            \"X-Service\": \"test-utilities\",\n            \"X-Session-Id\": \"{{$random.uuid}}\",\n            \"X-Span-Id\": \"{{$random.uuid}}\",\n            \"X-Tenant-Id\": \"default-tenant\",\n            \"X-Test-Suite\": \"enterprise-api-tests\",\n            \"X-Trace-Id\": \"{{$random.uuid}}\"\n          },\n          \"json\": {\n            \"environment\": \"development\",\n            \"globalUser\": \"test@enterprise.com\",\n            \"message\": \"User Ervin Howell from anastasia.net\",\n            \"timestamp\": \"2025-08-21T07:41:58.728Z\"\n          },\n          \"origin\": \"152.59.146.53\",\n          \"url\": \"https://httpbin.org/post\"\n        },\n        \"responseTime\": \"2905ms\",\n        \"timestamp\": \"2025-08-21T07:42:01.636Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.json.globalUser' expected 'test@enterprise.com', got 'test@enterprise.com'\",\n          \"expected\": \"test@enterprise.com\",\n          \"actual\": \"test@enterprise.com\"\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.json.environment' expected 'development', got 'development'\",\n          \"expected\": \"development\",\n          \"actual\": \"development\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/99999\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:02.112Z\"\n      },\n      \"response\": {\n        \"status\": 404,\n        \"statusText\": \"Not Found\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=aE5BJ%2FRFOlcZ%2BY%2B42KgJYlBvJFfuDJrzuE82G0hvQLo%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762121\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=aE5BJ%2FRFOlcZ%2BY%2B42KgJYlBvJFfuDJrzuE82G0hvQLo%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762121\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"997\",\n          \"x-ratelimit-reset\": \"1755762157\",\n          \"cf-cache-status\": \"BYPASS\",\n          \"cf-ray\": \"97287dcccbc0f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {},\n        \"responseTime\": \"472ms\",\n        \"timestamp\": \"2025-08-21T07:42:02.112Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 404, got 404\",\n          \"expected\": 404,\n          \"actual\": 404\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/status/500\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:02.390Z\"\n      },\n      \"response\": {\n        \"status\": 500,\n        \"statusText\": \"INTERNAL SERVER ERROR\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n          \"content-type\": \"text/html; charset=utf-8\",\n          \"content-length\": \"0\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": \"\",\n        \"responseTime\": \"276ms\",\n        \"timestamp\": \"2025-08-21T07:42:02.390Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 500, got 500\",\n          \"expected\": 500,\n          \"actual\": 500\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:02.576Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17108\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd18c22f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"183ms\",\n        \"timestamp\": \"2025-08-21T07:42:02.576Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Response should have expected structure for all environments\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1754072526\",\n              \"age\": \"17108\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287dd18c22f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            \"responseTime\": 183,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 10000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v2\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Client-ID\": \"restified-test-suite\",\n                \"X-Correlation-ID\": \"{{$random.uuid}}\",\n                \"X-Source\": \"enterprise-testing\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Author\": \"test@enterprise.com\",\n                \"X-Requested-By\": \"test@enterprise.com\",\n                \"X-Test-Environment\": \"development\",\n                \"X-Global-User\": \"test@enterprise.com\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:02.767Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5771\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd2be5ff4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"186ms\",\n        \"timestamp\": \"2025-08-21T07:42:02.767Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:02.946Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5771\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd3d837f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"177ms\",\n        \"timestamp\": \"2025-08-21T07:42:02.946Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Current response should match stored response ID\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:02 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1752362903\",\n              \"age\": \"5771\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287dd3d837f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"id\": 1,\n              \"name\": \"Leanne Graham\",\n              \"username\": \"Bret\",\n              \"email\": \"Sincere@april.biz\",\n              \"address\": {\n                \"street\": \"Kulas Light\",\n                \"suite\": \"Apt. 556\",\n                \"city\": \"Gwenborough\",\n                \"zipcode\": \"92998-3874\",\n                \"geo\": {\n                  \"lat\": \"-37.3159\",\n                  \"lng\": \"81.1496\"\n                }\n              },\n              \"phone\": \"1-770-736-8031 x56442\",\n              \"website\": \"hildegard.org\",\n              \"company\": {\n                \"name\": \"Romaguera-Crona\",\n                \"catchPhrase\": \"Multi-layered client-server neural-net\",\n                \"bs\": \"harness real-time e-markets\"\n              }\n            },\n            \"responseTime\": 177,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 2,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.125Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5771\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd4fa07f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"176ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.125Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/2\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.305Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-XTG63SYhaP/Uo6/vgmARnL3rpBk\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755151077\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=GKoMcKub8aVPCtWQEC24K7KEfkC%2FZT6C352bwO0tNyk%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755151077\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755151090\",\n          \"age\": \"5345\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd61bd6f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 2,\n          \"name\": \"Ervin Howell\",\n          \"username\": \"Antonette\",\n          \"email\": \"Shanna@melissa.tv\",\n          \"address\": {\n            \"street\": \"Victor Plains\",\n            \"suite\": \"Suite 879\",\n            \"city\": \"Wisokyburgh\",\n            \"zipcode\": \"90566-7771\",\n            \"geo\": {\n              \"lat\": \"-43.9509\",\n              \"lng\": \"-34.4618\"\n            }\n          },\n          \"phone\": \"010-692-6593 x09125\",\n          \"website\": \"anastasia.net\",\n          \"company\": {\n            \"name\": \"Deckow-Crist\",\n            \"catchPhrase\": \"Proactive didactic contingency\",\n            \"bs\": \"synergize scalable supply-chains\"\n          }\n        },\n        \"responseTime\": \"179ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.305Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/3\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.490Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"208-uuwhfwQMzFzbJr9Pg6DKXae0SXA\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=79x2jAcHlCuvrpQpZs7Z1kzivPPOHmlvcBDP9iWbf%2Fs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755756777\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=79x2jAcHlCuvrpQpZs7Z1kzivPPOHmlvcBDP9iWbf%2Fs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755756777\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"992\",\n          \"x-ratelimit-reset\": \"1755756817\",\n          \"age\": \"5346\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd73df1f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 3,\n          \"name\": \"Clementine Bauch\",\n          \"username\": \"Samantha\",\n          \"email\": \"Nathan@yesenia.net\",\n          \"address\": {\n            \"street\": \"Douglas Extension\",\n            \"suite\": \"Suite 847\",\n            \"city\": \"McKenziehaven\",\n            \"zipcode\": \"59590-4157\",\n            \"geo\": {\n              \"lat\": \"-68.6102\",\n              \"lng\": \"-47.0653\"\n            }\n          },\n          \"phone\": \"1-463-123-4447\",\n          \"website\": \"ramiro.info\",\n          \"company\": {\n            \"name\": \"Romaguera-Jacobson\",\n            \"catchPhrase\": \"Face to face bifurcated interface\",\n            \"bs\": \"e-enable strategic applications\"\n          }\n        },\n        \"responseTime\": \"185ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.490Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.671Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5772\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd85fd8f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"177ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.671Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.850Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5772\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd979bbf4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"177ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.850Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:03.850Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5772\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dd979bbf4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"177ms\",\n        \"timestamp\": \"2025-08-21T07:42:03.850Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Current response should match stored response\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:03 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1752362903\",\n              \"age\": \"5772\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287dd979bbf4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": {\n              \"id\": 1,\n              \"name\": \"Leanne Graham\",\n              \"username\": \"Bret\",\n              \"email\": \"Sincere@april.biz\",\n              \"address\": {\n                \"street\": \"Kulas Light\",\n                \"suite\": \"Apt. 556\",\n                \"city\": \"Gwenborough\",\n                \"zipcode\": \"92998-3874\",\n                \"geo\": {\n                  \"lat\": \"-37.3159\",\n                  \"lng\": \"81.1496\"\n                }\n              },\n              \"phone\": \"1-770-736-8031 x56442\",\n              \"website\": \"hildegard.org\",\n              \"company\": {\n                \"name\": \"Romaguera-Crona\",\n                \"catchPhrase\": \"Multi-layered client-server neural-net\",\n                \"bs\": \"harness real-time e-markets\"\n              }\n            },\n            \"responseTime\": 177,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 2,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"POST\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts\",\n        \"headers\": {},\n        \"body\": {\n          \"title\": \"Test Post for Response Store\",\n          \"body\": \"This post is used to demonstrate response store functionality\",\n          \"userId\": 1\n        },\n        \"timestamp\": \"2025-08-21T07:42:04.308Z\"\n      },\n      \"response\": {\n        \"status\": 201,\n        \"statusText\": \"Created\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:04 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"content-length\": \"148\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"access-control-expose-headers\": \"Location\",\n          \"cache-control\": \"no-cache\",\n          \"etag\": \"W/\\\"94-hum81vDooSQmfCJHd4zExUInB/4\\\"\",\n          \"expires\": \"-1\",\n          \"location\": \"https://jsonplaceholder.typicode.com/posts/101\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=p4%2FxDjbCLL3jCO2Rr1NtCnFNQQAdAb525pDGlaRoGhI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762124\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=p4%2FxDjbCLL3jCO2Rr1NtCnFNQQAdAb525pDGlaRoGhI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762124\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, X-HTTP-Method-Override, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"996\",\n          \"x-ratelimit-reset\": \"1755762157\",\n          \"cf-cache-status\": \"DYNAMIC\",\n          \"cf-ray\": \"97287dda9b80f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"title\": \"Test Post for Response Store\",\n          \"body\": \"This post is used to demonstrate response store functionality\",\n          \"userId\": 1,\n          \"id\": 101\n        },\n        \"responseTime\": \"455ms\",\n        \"timestamp\": \"2025-08-21T07:42:04.308Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 201, got 201\",\n          \"expected\": 201,\n          \"actual\": 201\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:04.486Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:04 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17110\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287ddd785ff4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"176ms\",\n        \"timestamp\": \"2025-08-21T07:42:04.486Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/2\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:04.670Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:04 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"116-jnDuMpjju89+9j7e0BqkdFsVRjs\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qu%2FIEMk81sVnAb%2FQDwHxzHreX8sjoa%2B0ZHwzlTsoVRY%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755726446\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qu%2FIEMk81sVnAb%2FQDwHxzHreX8sjoa%2B0ZHwzlTsoVRY%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755726446\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755726457\",\n          \"age\": \"6763\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dde9b29f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 2,\n          \"title\": \"qui est esse\",\n          \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n        },\n        \"responseTime\": \"182ms\",\n        \"timestamp\": \"2025-08-21T07:42:04.670Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/3\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:04.858Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:04 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"11b-USacuIw5a/iXAGdNKBvqr/TbMTc\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=Lg0h4pYAAJjIQNLihAE17EFGId4WyPpE%2FVMxZhgRFCA%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755432131\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=Lg0h4pYAAJjIQNLihAE17EFGId4WyPpE%2FVMxZhgRFCA%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755432131\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755432150\",\n          \"age\": \"6763\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287ddfcd4df4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 3,\n          \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n          \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n        },\n        \"responseTime\": \"188ms\",\n        \"timestamp\": \"2025-08-21T07:42:04.858Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:05.085Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:04 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5773\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de0ef0ff4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"180ms\",\n        \"timestamp\": \"2025-08-21T07:42:05.085Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Response matches JSON schema\",\n          \"expected\": \"valid against schema\",\n          \"actual\": {\n            \"id\": 1,\n            \"name\": \"Leanne Graham\",\n            \"username\": \"Bret\",\n            \"email\": \"Sincere@april.biz\",\n            \"address\": {\n              \"street\": \"Kulas Light\",\n              \"suite\": \"Apt. 556\",\n              \"city\": \"Gwenborough\",\n              \"zipcode\": \"92998-3874\",\n              \"geo\": {\n                \"lat\": \"-37.3159\",\n                \"lng\": \"81.1496\"\n              }\n            },\n            \"phone\": \"1-770-736-8031 x56442\",\n            \"website\": \"hildegard.org\",\n            \"company\": {\n              \"name\": \"Romaguera-Crona\",\n              \"catchPhrase\": \"Multi-layered client-server neural-net\",\n              \"bs\": \"harness real-time e-markets\"\n            }\n          }\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.name' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.email' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 4,\n      \"passed\": 4,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:05.308Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=EwwNI5c%2F6Cze7N7EmlCXtDdGrcaES6QS3i%2FpyWSnYWE%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752116626\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=EwwNI5c%2F6Cze7N7EmlCXtDdGrcaES6QS3i%2FpyWSnYWE%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752116626\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"990\",\n          \"x-ratelimit-reset\": \"1752116677\",\n          \"age\": \"16444\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de279a4f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"qui est esse\",\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"eum et est occaecati\",\n            \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"nesciunt quas odio\",\n            \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 6,\n            \"title\": \"dolorem eum magni eos aperiam quia\",\n            \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 7,\n            \"title\": \"magnam facilis autem\",\n            \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 8,\n            \"title\": \"dolorem dolore est ipsam\",\n            \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 9,\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n            \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 10,\n            \"title\": \"optio molestias id quia eum\",\n            \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 11,\n            \"title\": \"et ea vero quia laudantium autem\",\n            \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 12,\n            \"title\": \"in quibusdam tempore odit est dolorem\",\n            \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 13,\n            \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n            \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 14,\n            \"title\": \"voluptatem eligendi optio\",\n            \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 15,\n            \"title\": \"eveniet quod temporibus\",\n            \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 16,\n            \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n            \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 17,\n            \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n            \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 18,\n            \"title\": \"voluptate et itaque vero tempora molestiae\",\n            \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 19,\n            \"title\": \"adipisci placeat illum aut reiciendis qui\",\n            \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n          },\n          {\n            \"userId\": 2,\n            \"id\": 20,\n            \"title\": \"doloribus ad provident suscipit at\",\n            \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 21,\n            \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n            \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 22,\n            \"title\": \"dolor sint quo a velit explicabo quia nam\",\n            \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 23,\n            \"title\": \"maxime id vitae nihil numquam\",\n            \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 24,\n            \"title\": \"autem hic labore sunt dolores incidunt\",\n            \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 25,\n            \"title\": \"rem alias distinctio quo quis\",\n            \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 26,\n            \"title\": \"est et quae odit qui non\",\n            \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 27,\n            \"title\": \"quasi id et eos tenetur aut quo autem\",\n            \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 28,\n            \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n            \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 29,\n            \"title\": \"iusto eius quod necessitatibus culpa ea\",\n            \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n          },\n          {\n            \"userId\": 3,\n            \"id\": 30,\n            \"title\": \"a quo magni similique perferendis\",\n            \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 31,\n            \"title\": \"ullam ut quidem id aut vel consequuntur\",\n            \"body\": \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 32,\n            \"title\": \"doloremque illum aliquid sunt\",\n            \"body\": \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 33,\n            \"title\": \"qui explicabo molestiae dolorem\",\n            \"body\": \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 34,\n            \"title\": \"magnam ut rerum iure\",\n            \"body\": \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 35,\n            \"title\": \"id nihil consequatur molestias animi provident\",\n            \"body\": \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 36,\n            \"title\": \"fuga nam accusamus voluptas reiciendis itaque\",\n            \"body\": \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 37,\n            \"title\": \"provident vel ut sit ratione est\",\n            \"body\": \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 38,\n            \"title\": \"explicabo et eos deleniti nostrum ab id repellendus\",\n            \"body\": \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 39,\n            \"title\": \"eos dolorem iste accusantium est eaque quam\",\n            \"body\": \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\"\n          },\n          {\n            \"userId\": 4,\n            \"id\": 40,\n            \"title\": \"enim quo cumque\",\n            \"body\": \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 41,\n            \"title\": \"non est facere\",\n            \"body\": \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 42,\n            \"title\": \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n            \"body\": \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 43,\n            \"title\": \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n            \"body\": \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 44,\n            \"title\": \"optio dolor molestias sit\",\n            \"body\": \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 45,\n            \"title\": \"ut numquam possimus omnis eius suscipit laudantium iure\",\n            \"body\": \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 46,\n            \"title\": \"aut quo modi neque nostrum ducimus\",\n            \"body\": \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 47,\n            \"title\": \"quibusdam cumque rem aut deserunt\",\n            \"body\": \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 48,\n            \"title\": \"ut voluptatem illum ea doloribus itaque eos\",\n            \"body\": \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 49,\n            \"title\": \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n            \"body\": \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\"\n          },\n          {\n            \"userId\": 5,\n            \"id\": 50,\n            \"title\": \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n            \"body\": \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 51,\n            \"title\": \"soluta aliquam aperiam consequatur illo quis voluptas\",\n            \"body\": \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 52,\n            \"title\": \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n            \"body\": \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 53,\n            \"title\": \"ut quo aut ducimus alias\",\n            \"body\": \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 54,\n            \"title\": \"sit asperiores ipsam eveniet odio non quia\",\n            \"body\": \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 55,\n            \"title\": \"sit vel voluptatem et non libero\",\n            \"body\": \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 56,\n            \"title\": \"qui et at rerum necessitatibus\",\n            \"body\": \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 57,\n            \"title\": \"sed ab est est\",\n            \"body\": \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 58,\n            \"title\": \"voluptatum itaque dolores nisi et quasi\",\n            \"body\": \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 59,\n            \"title\": \"qui commodi dolor at maiores et quis id accusantium\",\n            \"body\": \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\"\n          },\n          {\n            \"userId\": 6,\n            \"id\": 60,\n            \"title\": \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n            \"body\": \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 61,\n            \"title\": \"voluptatem doloribus consectetur est ut ducimus\",\n            \"body\": \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 62,\n            \"title\": \"beatae enim quia vel\",\n            \"body\": \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 63,\n            \"title\": \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n            \"body\": \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 64,\n            \"title\": \"et fugit quas eum in in aperiam quod\",\n            \"body\": \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 65,\n            \"title\": \"consequatur id enim sunt et et\",\n            \"body\": \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 66,\n            \"title\": \"repudiandae ea animi iusto\",\n            \"body\": \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 67,\n            \"title\": \"aliquid eos sed fuga est maxime repellendus\",\n            \"body\": \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 68,\n            \"title\": \"odio quis facere architecto reiciendis optio\",\n            \"body\": \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 69,\n            \"title\": \"fugiat quod pariatur odit minima\",\n            \"body\": \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\"\n          },\n          {\n            \"userId\": 7,\n            \"id\": 70,\n            \"title\": \"voluptatem laborum magni\",\n            \"body\": \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 71,\n            \"title\": \"et iusto veniam et illum aut fuga\",\n            \"body\": \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 72,\n            \"title\": \"sint hic doloribus consequatur eos non id\",\n            \"body\": \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 73,\n            \"title\": \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n            \"body\": \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 74,\n            \"title\": \"enim unde ratione doloribus quas enim ut sit sapiente\",\n            \"body\": \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 75,\n            \"title\": \"dignissimos eum dolor ut enim et delectus in\",\n            \"body\": \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 76,\n            \"title\": \"doloremque officiis ad et non perferendis\",\n            \"body\": \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 77,\n            \"title\": \"necessitatibus quasi exercitationem odio\",\n            \"body\": \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 78,\n            \"title\": \"quam voluptatibus rerum veritatis\",\n            \"body\": \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 79,\n            \"title\": \"pariatur consequatur quia magnam autem omnis non amet\",\n            \"body\": \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\"\n          },\n          {\n            \"userId\": 8,\n            \"id\": 80,\n            \"title\": \"labore in ex et explicabo corporis aut quas\",\n            \"body\": \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 81,\n            \"title\": \"tempora rem veritatis voluptas quo dolores vero\",\n            \"body\": \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 82,\n            \"title\": \"laudantium voluptate suscipit sunt enim enim\",\n            \"body\": \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 83,\n            \"title\": \"odit et voluptates doloribus alias odio et\",\n            \"body\": \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 84,\n            \"title\": \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n            \"body\": \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 85,\n            \"title\": \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n            \"body\": \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 86,\n            \"title\": \"placeat quia et porro iste\",\n            \"body\": \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 87,\n            \"title\": \"nostrum quis quasi placeat\",\n            \"body\": \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 88,\n            \"title\": \"sapiente omnis fugit eos\",\n            \"body\": \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 89,\n            \"title\": \"sint soluta et vel magnam aut ut sed qui\",\n            \"body\": \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\"\n          },\n          {\n            \"userId\": 9,\n            \"id\": 90,\n            \"title\": \"ad iusto omnis odit dolor voluptatibus\",\n            \"body\": \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 91,\n            \"title\": \"aut amet sed\",\n            \"body\": \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 92,\n            \"title\": \"ratione ex tenetur perferendis\",\n            \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 93,\n            \"title\": \"beatae soluta recusandae\",\n            \"body\": \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 94,\n            \"title\": \"qui qui voluptates illo iste minima\",\n            \"body\": \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 95,\n            \"title\": \"id minus libero illum nam ad officiis\",\n            \"body\": \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 96,\n            \"title\": \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n            \"body\": \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 97,\n            \"title\": \"quas fugiat ut perspiciatis vero provident\",\n            \"body\": \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 98,\n            \"title\": \"laboriosam dolor voluptates\",\n            \"body\": \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 99,\n            \"title\": \"temporibus sit alias delectus eligendi possimus magni\",\n            \"body\": \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\"\n          },\n          {\n            \"userId\": 10,\n            \"id\": 100,\n            \"title\": \"at nam consequatur ea labore ea harum\",\n            \"body\": \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\"\n          }\n        ],\n        \"responseTime\": \"203ms\",\n        \"timestamp\": \"2025-08-21T07:42:05.308Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Response matches JSON schema\",\n          \"expected\": \"valid against schema\",\n          \"actual\": [\n            {\n              \"userId\": 1,\n              \"id\": 1,\n              \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n              \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 2,\n              \"title\": \"qui est esse\",\n              \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 3,\n              \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n              \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 4,\n              \"title\": \"eum et est occaecati\",\n              \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 5,\n              \"title\": \"nesciunt quas odio\",\n              \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 6,\n              \"title\": \"dolorem eum magni eos aperiam quia\",\n              \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 7,\n              \"title\": \"magnam facilis autem\",\n              \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 8,\n              \"title\": \"dolorem dolore est ipsam\",\n              \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 9,\n              \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n              \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n            },\n            {\n              \"userId\": 1,\n              \"id\": 10,\n              \"title\": \"optio molestias id quia eum\",\n              \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 11,\n              \"title\": \"et ea vero quia laudantium autem\",\n              \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 12,\n              \"title\": \"in quibusdam tempore odit est dolorem\",\n              \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 13,\n              \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n              \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 14,\n              \"title\": \"voluptatem eligendi optio\",\n              \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 15,\n              \"title\": \"eveniet quod temporibus\",\n              \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 16,\n              \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n              \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 17,\n              \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n              \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 18,\n              \"title\": \"voluptate et itaque vero tempora molestiae\",\n              \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 19,\n              \"title\": \"adipisci placeat illum aut reiciendis qui\",\n              \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n            },\n            {\n              \"userId\": 2,\n              \"id\": 20,\n              \"title\": \"doloribus ad provident suscipit at\",\n              \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 21,\n              \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n              \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 22,\n              \"title\": \"dolor sint quo a velit explicabo quia nam\",\n              \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 23,\n              \"title\": \"maxime id vitae nihil numquam\",\n              \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 24,\n              \"title\": \"autem hic labore sunt dolores incidunt\",\n              \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 25,\n              \"title\": \"rem alias distinctio quo quis\",\n              \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 26,\n              \"title\": \"est et quae odit qui non\",\n              \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 27,\n              \"title\": \"quasi id et eos tenetur aut quo autem\",\n              \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 28,\n              \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n              \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 29,\n              \"title\": \"iusto eius quod necessitatibus culpa ea\",\n              \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n            },\n            {\n              \"userId\": 3,\n              \"id\": 30,\n              \"title\": \"a quo magni similique perferendis\",\n              \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 31,\n              \"title\": \"ullam ut quidem id aut vel consequuntur\",\n              \"body\": \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 32,\n              \"title\": \"doloremque illum aliquid sunt\",\n              \"body\": \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 33,\n              \"title\": \"qui explicabo molestiae dolorem\",\n              \"body\": \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 34,\n              \"title\": \"magnam ut rerum iure\",\n              \"body\": \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 35,\n              \"title\": \"id nihil consequatur molestias animi provident\",\n              \"body\": \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 36,\n              \"title\": \"fuga nam accusamus voluptas reiciendis itaque\",\n              \"body\": \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 37,\n              \"title\": \"provident vel ut sit ratione est\",\n              \"body\": \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 38,\n              \"title\": \"explicabo et eos deleniti nostrum ab id repellendus\",\n              \"body\": \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 39,\n              \"title\": \"eos dolorem iste accusantium est eaque quam\",\n              \"body\": \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\"\n            },\n            {\n              \"userId\": 4,\n              \"id\": 40,\n              \"title\": \"enim quo cumque\",\n              \"body\": \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 41,\n              \"title\": \"non est facere\",\n              \"body\": \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 42,\n              \"title\": \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n              \"body\": \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 43,\n              \"title\": \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n              \"body\": \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 44,\n              \"title\": \"optio dolor molestias sit\",\n              \"body\": \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 45,\n              \"title\": \"ut numquam possimus omnis eius suscipit laudantium iure\",\n              \"body\": \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 46,\n              \"title\": \"aut quo modi neque nostrum ducimus\",\n              \"body\": \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 47,\n              \"title\": \"quibusdam cumque rem aut deserunt\",\n              \"body\": \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 48,\n              \"title\": \"ut voluptatem illum ea doloribus itaque eos\",\n              \"body\": \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 49,\n              \"title\": \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n              \"body\": \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\"\n            },\n            {\n              \"userId\": 5,\n              \"id\": 50,\n              \"title\": \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n              \"body\": \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 51,\n              \"title\": \"soluta aliquam aperiam consequatur illo quis voluptas\",\n              \"body\": \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 52,\n              \"title\": \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n              \"body\": \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 53,\n              \"title\": \"ut quo aut ducimus alias\",\n              \"body\": \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 54,\n              \"title\": \"sit asperiores ipsam eveniet odio non quia\",\n              \"body\": \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 55,\n              \"title\": \"sit vel voluptatem et non libero\",\n              \"body\": \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 56,\n              \"title\": \"qui et at rerum necessitatibus\",\n              \"body\": \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 57,\n              \"title\": \"sed ab est est\",\n              \"body\": \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 58,\n              \"title\": \"voluptatum itaque dolores nisi et quasi\",\n              \"body\": \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 59,\n              \"title\": \"qui commodi dolor at maiores et quis id accusantium\",\n              \"body\": \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\"\n            },\n            {\n              \"userId\": 6,\n              \"id\": 60,\n              \"title\": \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n              \"body\": \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 61,\n              \"title\": \"voluptatem doloribus consectetur est ut ducimus\",\n              \"body\": \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 62,\n              \"title\": \"beatae enim quia vel\",\n              \"body\": \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 63,\n              \"title\": \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n              \"body\": \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 64,\n              \"title\": \"et fugit quas eum in in aperiam quod\",\n              \"body\": \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 65,\n              \"title\": \"consequatur id enim sunt et et\",\n              \"body\": \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 66,\n              \"title\": \"repudiandae ea animi iusto\",\n              \"body\": \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 67,\n              \"title\": \"aliquid eos sed fuga est maxime repellendus\",\n              \"body\": \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 68,\n              \"title\": \"odio quis facere architecto reiciendis optio\",\n              \"body\": \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 69,\n              \"title\": \"fugiat quod pariatur odit minima\",\n              \"body\": \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\"\n            },\n            {\n              \"userId\": 7,\n              \"id\": 70,\n              \"title\": \"voluptatem laborum magni\",\n              \"body\": \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 71,\n              \"title\": \"et iusto veniam et illum aut fuga\",\n              \"body\": \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 72,\n              \"title\": \"sint hic doloribus consequatur eos non id\",\n              \"body\": \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 73,\n              \"title\": \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n              \"body\": \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 74,\n              \"title\": \"enim unde ratione doloribus quas enim ut sit sapiente\",\n              \"body\": \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 75,\n              \"title\": \"dignissimos eum dolor ut enim et delectus in\",\n              \"body\": \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 76,\n              \"title\": \"doloremque officiis ad et non perferendis\",\n              \"body\": \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 77,\n              \"title\": \"necessitatibus quasi exercitationem odio\",\n              \"body\": \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 78,\n              \"title\": \"quam voluptatibus rerum veritatis\",\n              \"body\": \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 79,\n              \"title\": \"pariatur consequatur quia magnam autem omnis non amet\",\n              \"body\": \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\"\n            },\n            {\n              \"userId\": 8,\n              \"id\": 80,\n              \"title\": \"labore in ex et explicabo corporis aut quas\",\n              \"body\": \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 81,\n              \"title\": \"tempora rem veritatis voluptas quo dolores vero\",\n              \"body\": \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 82,\n              \"title\": \"laudantium voluptate suscipit sunt enim enim\",\n              \"body\": \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 83,\n              \"title\": \"odit et voluptates doloribus alias odio et\",\n              \"body\": \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 84,\n              \"title\": \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n              \"body\": \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 85,\n              \"title\": \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n              \"body\": \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 86,\n              \"title\": \"placeat quia et porro iste\",\n              \"body\": \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 87,\n              \"title\": \"nostrum quis quasi placeat\",\n              \"body\": \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 88,\n              \"title\": \"sapiente omnis fugit eos\",\n              \"body\": \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 89,\n              \"title\": \"sint soluta et vel magnam aut ut sed qui\",\n              \"body\": \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\"\n            },\n            {\n              \"userId\": 9,\n              \"id\": 90,\n              \"title\": \"ad iusto omnis odit dolor voluptatibus\",\n              \"body\": \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 91,\n              \"title\": \"aut amet sed\",\n              \"body\": \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 92,\n              \"title\": \"ratione ex tenetur perferendis\",\n              \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 93,\n              \"title\": \"beatae soluta recusandae\",\n              \"body\": \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 94,\n              \"title\": \"qui qui voluptates illo iste minima\",\n              \"body\": \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 95,\n              \"title\": \"id minus libero illum nam ad officiis\",\n              \"body\": \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 96,\n              \"title\": \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n              \"body\": \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 97,\n              \"title\": \"quas fugiat ut perspiciatis vero provident\",\n              \"body\": \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 98,\n              \"title\": \"laboriosam dolor voluptates\",\n              \"body\": \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 99,\n              \"title\": \"temporibus sit alias delectus eligendi possimus magni\",\n              \"body\": \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\"\n            },\n            {\n              \"userId\": 10,\n              \"id\": 100,\n              \"title\": \"at nam consequatur ea labore ea harum\",\n              \"body\": \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\"\n            }\n          ]\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$[0].id' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$[0].title' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 1\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Response should be a non-empty array\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"6b80-Ybsq/K6GwwqrYkAsFxqDXGC7DoM\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=EwwNI5c%2F6Cze7N7EmlCXtDdGrcaES6QS3i%2FpyWSnYWE%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752116626\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=EwwNI5c%2F6Cze7N7EmlCXtDdGrcaES6QS3i%2FpyWSnYWE%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752116626\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"990\",\n              \"x-ratelimit-reset\": \"1752116677\",\n              \"age\": \"16444\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287de279a4f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 11,\n                \"title\": \"et ea vero quia laudantium autem\",\n                \"body\": \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 12,\n                \"title\": \"in quibusdam tempore odit est dolorem\",\n                \"body\": \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 13,\n                \"title\": \"dolorum ut in voluptas mollitia et saepe quo animi\",\n                \"body\": \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 14,\n                \"title\": \"voluptatem eligendi optio\",\n                \"body\": \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 15,\n                \"title\": \"eveniet quod temporibus\",\n                \"body\": \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 16,\n                \"title\": \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n                \"body\": \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 17,\n                \"title\": \"fugit voluptas sed molestias voluptatem provident\",\n                \"body\": \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 18,\n                \"title\": \"voluptate et itaque vero tempora molestiae\",\n                \"body\": \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 19,\n                \"title\": \"adipisci placeat illum aut reiciendis qui\",\n                \"body\": \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\"\n              },\n              {\n                \"userId\": 2,\n                \"id\": 20,\n                \"title\": \"doloribus ad provident suscipit at\",\n                \"body\": \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 21,\n                \"title\": \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n                \"body\": \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 22,\n                \"title\": \"dolor sint quo a velit explicabo quia nam\",\n                \"body\": \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 23,\n                \"title\": \"maxime id vitae nihil numquam\",\n                \"body\": \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 24,\n                \"title\": \"autem hic labore sunt dolores incidunt\",\n                \"body\": \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 25,\n                \"title\": \"rem alias distinctio quo quis\",\n                \"body\": \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 26,\n                \"title\": \"est et quae odit qui non\",\n                \"body\": \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 27,\n                \"title\": \"quasi id et eos tenetur aut quo autem\",\n                \"body\": \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 28,\n                \"title\": \"delectus ullam et corporis nulla voluptas sequi\",\n                \"body\": \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 29,\n                \"title\": \"iusto eius quod necessitatibus culpa ea\",\n                \"body\": \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\"\n              },\n              {\n                \"userId\": 3,\n                \"id\": 30,\n                \"title\": \"a quo magni similique perferendis\",\n                \"body\": \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 31,\n                \"title\": \"ullam ut quidem id aut vel consequuntur\",\n                \"body\": \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 32,\n                \"title\": \"doloremque illum aliquid sunt\",\n                \"body\": \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 33,\n                \"title\": \"qui explicabo molestiae dolorem\",\n                \"body\": \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 34,\n                \"title\": \"magnam ut rerum iure\",\n                \"body\": \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 35,\n                \"title\": \"id nihil consequatur molestias animi provident\",\n                \"body\": \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 36,\n                \"title\": \"fuga nam accusamus voluptas reiciendis itaque\",\n                \"body\": \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 37,\n                \"title\": \"provident vel ut sit ratione est\",\n                \"body\": \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 38,\n                \"title\": \"explicabo et eos deleniti nostrum ab id repellendus\",\n                \"body\": \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 39,\n                \"title\": \"eos dolorem iste accusantium est eaque quam\",\n                \"body\": \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\"\n              },\n              {\n                \"userId\": 4,\n                \"id\": 40,\n                \"title\": \"enim quo cumque\",\n                \"body\": \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 41,\n                \"title\": \"non est facere\",\n                \"body\": \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 42,\n                \"title\": \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n                \"body\": \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 43,\n                \"title\": \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n                \"body\": \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 44,\n                \"title\": \"optio dolor molestias sit\",\n                \"body\": \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 45,\n                \"title\": \"ut numquam possimus omnis eius suscipit laudantium iure\",\n                \"body\": \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 46,\n                \"title\": \"aut quo modi neque nostrum ducimus\",\n                \"body\": \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 47,\n                \"title\": \"quibusdam cumque rem aut deserunt\",\n                \"body\": \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 48,\n                \"title\": \"ut voluptatem illum ea doloribus itaque eos\",\n                \"body\": \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 49,\n                \"title\": \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n                \"body\": \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\"\n              },\n              {\n                \"userId\": 5,\n                \"id\": 50,\n                \"title\": \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n                \"body\": \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 51,\n                \"title\": \"soluta aliquam aperiam consequatur illo quis voluptas\",\n                \"body\": \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 52,\n                \"title\": \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n                \"body\": \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 53,\n                \"title\": \"ut quo aut ducimus alias\",\n                \"body\": \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 54,\n                \"title\": \"sit asperiores ipsam eveniet odio non quia\",\n                \"body\": \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 55,\n                \"title\": \"sit vel voluptatem et non libero\",\n                \"body\": \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 56,\n                \"title\": \"qui et at rerum necessitatibus\",\n                \"body\": \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 57,\n                \"title\": \"sed ab est est\",\n                \"body\": \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 58,\n                \"title\": \"voluptatum itaque dolores nisi et quasi\",\n                \"body\": \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 59,\n                \"title\": \"qui commodi dolor at maiores et quis id accusantium\",\n                \"body\": \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\"\n              },\n              {\n                \"userId\": 6,\n                \"id\": 60,\n                \"title\": \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n                \"body\": \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 61,\n                \"title\": \"voluptatem doloribus consectetur est ut ducimus\",\n                \"body\": \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 62,\n                \"title\": \"beatae enim quia vel\",\n                \"body\": \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 63,\n                \"title\": \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n                \"body\": \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 64,\n                \"title\": \"et fugit quas eum in in aperiam quod\",\n                \"body\": \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 65,\n                \"title\": \"consequatur id enim sunt et et\",\n                \"body\": \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 66,\n                \"title\": \"repudiandae ea animi iusto\",\n                \"body\": \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 67,\n                \"title\": \"aliquid eos sed fuga est maxime repellendus\",\n                \"body\": \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 68,\n                \"title\": \"odio quis facere architecto reiciendis optio\",\n                \"body\": \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 69,\n                \"title\": \"fugiat quod pariatur odit minima\",\n                \"body\": \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\"\n              },\n              {\n                \"userId\": 7,\n                \"id\": 70,\n                \"title\": \"voluptatem laborum magni\",\n                \"body\": \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 71,\n                \"title\": \"et iusto veniam et illum aut fuga\",\n                \"body\": \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 72,\n                \"title\": \"sint hic doloribus consequatur eos non id\",\n                \"body\": \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 73,\n                \"title\": \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n                \"body\": \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 74,\n                \"title\": \"enim unde ratione doloribus quas enim ut sit sapiente\",\n                \"body\": \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 75,\n                \"title\": \"dignissimos eum dolor ut enim et delectus in\",\n                \"body\": \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 76,\n                \"title\": \"doloremque officiis ad et non perferendis\",\n                \"body\": \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 77,\n                \"title\": \"necessitatibus quasi exercitationem odio\",\n                \"body\": \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 78,\n                \"title\": \"quam voluptatibus rerum veritatis\",\n                \"body\": \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 79,\n                \"title\": \"pariatur consequatur quia magnam autem omnis non amet\",\n                \"body\": \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\"\n              },\n              {\n                \"userId\": 8,\n                \"id\": 80,\n                \"title\": \"labore in ex et explicabo corporis aut quas\",\n                \"body\": \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 81,\n                \"title\": \"tempora rem veritatis voluptas quo dolores vero\",\n                \"body\": \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 82,\n                \"title\": \"laudantium voluptate suscipit sunt enim enim\",\n                \"body\": \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 83,\n                \"title\": \"odit et voluptates doloribus alias odio et\",\n                \"body\": \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 84,\n                \"title\": \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n                \"body\": \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 85,\n                \"title\": \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n                \"body\": \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 86,\n                \"title\": \"placeat quia et porro iste\",\n                \"body\": \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 87,\n                \"title\": \"nostrum quis quasi placeat\",\n                \"body\": \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 88,\n                \"title\": \"sapiente omnis fugit eos\",\n                \"body\": \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 89,\n                \"title\": \"sint soluta et vel magnam aut ut sed qui\",\n                \"body\": \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\"\n              },\n              {\n                \"userId\": 9,\n                \"id\": 90,\n                \"title\": \"ad iusto omnis odit dolor voluptatibus\",\n                \"body\": \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 91,\n                \"title\": \"aut amet sed\",\n                \"body\": \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 92,\n                \"title\": \"ratione ex tenetur perferendis\",\n                \"body\": \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 93,\n                \"title\": \"beatae soluta recusandae\",\n                \"body\": \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 94,\n                \"title\": \"qui qui voluptates illo iste minima\",\n                \"body\": \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 95,\n                \"title\": \"id minus libero illum nam ad officiis\",\n                \"body\": \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 96,\n                \"title\": \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n                \"body\": \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 97,\n                \"title\": \"quas fugiat ut perspiciatis vero provident\",\n                \"body\": \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 98,\n                \"title\": \"laboriosam dolor voluptates\",\n                \"body\": \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 99,\n                \"title\": \"temporibus sit alias delectus eligendi possimus magni\",\n                \"body\": \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\"\n              },\n              {\n                \"userId\": 10,\n                \"id\": 100,\n                \"title\": \"at nam consequatur ea labore ea harum\",\n                \"body\": \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\"\n              }\n            ],\n            \"responseTime\": 203,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 5,\n      \"passed\": 5,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:05.502Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5774\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de3bbd8f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"178ms\",\n        \"timestamp\": \"2025-08-21T07:42:05.502Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": false,\n          \"message\": \"Schema validation failed: data must have required property 'nonExistentField'\",\n          \"expected\": \"valid against schema\",\n          \"actual\": {\n            \"id\": 1,\n            \"name\": \"Leanne Graham\",\n            \"username\": \"Bret\",\n            \"email\": \"Sincere@april.biz\",\n            \"address\": {\n              \"street\": \"Kulas Light\",\n              \"suite\": \"Apt. 556\",\n              \"city\": \"Gwenborough\",\n              \"zipcode\": \"92998-3874\",\n              \"geo\": {\n                \"lat\": \"-37.3159\",\n                \"lng\": \"81.1496\"\n              }\n            },\n            \"phone\": \"1-770-736-8031 x56442\",\n            \"website\": \"hildegard.org\",\n            \"company\": {\n              \"name\": \"Romaguera-Crona\",\n              \"catchPhrase\": \"Multi-layered client-server neural-net\",\n              \"bs\": \"harness real-time e-markets\"\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"enterprise-api-tests\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 1,\n      \"failed\": 1,\n      \"details\": [\n        \"Schema validation failed: data must have required property 'nonExistentField'\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:05.694Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5774\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de50e1df4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"178ms\",\n        \"timestamp\": \"2025-08-21T07:42:05.694Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 2,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:05.873Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17112\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de62fbbf4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"176ms\",\n        \"timestamp\": \"2025-08-21T07:42:05.873Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:06.045Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:05 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5774\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de73924f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"169ms\",\n        \"timestamp\": \"2025-08-21T07:42:06.045Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:06.226Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755577811\",\n          \"age\": \"12550\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287de85af7f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"qui est esse\",\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"eum et est occaecati\",\n            \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"nesciunt quas odio\",\n            \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 6,\n            \"title\": \"dolorem eum magni eos aperiam quia\",\n            \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 7,\n            \"title\": \"magnam facilis autem\",\n            \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 8,\n            \"title\": \"dolorem dolore est ipsam\",\n            \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 9,\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n            \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 10,\n            \"title\": \"optio molestias id quia eum\",\n            \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n          }\n        ],\n        \"responseTime\": \"180ms\",\n        \"timestamp\": \"2025-08-21T07:42:06.226Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Should have posts for the user\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755577811\",\n              \"age\": \"12550\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287de85af7f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              }\n            ],\n            \"responseTime\": 180,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"X-User-Id\": \"1\",\n                \"X-User-Name\": \"Leanne Graham\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"All posts should belong to the extracted user ID\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755577811\",\n              \"age\": \"12550\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287de85af7f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              }\n            ],\n            \"responseTime\": 180,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"X-User-Id\": \"1\",\n                \"X-User-Name\": \"Leanne Graham\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/{{$env.TEST_USER_ID}}\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:06.694Z\"\n      },\n      \"response\": {\n        \"status\": 404,\n        \"statusText\": \"Not Found\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=HAQBjyoL%2BKCoDldkk8GbDkCS7a5tBQcb4YDXGo8Kke0%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755762126\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=HAQBjyoL%2BKCoDldkk8GbDkCS7a5tBQcb4YDXGo8Kke0%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755762126\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"995\",\n          \"x-ratelimit-reset\": \"1755762157\",\n          \"cf-cache-status\": \"MISS\",\n          \"cf-ray\": \"97287de97cf5f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {},\n        \"responseTime\": \"465ms\",\n        \"timestamp\": \"2025-08-21T07:42:06.694Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": false,\n          \"message\": \"Expected status code 200, got 404\",\n          \"expected\": 200,\n          \"actual\": 404\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": false,\n          \"message\": \"JSONPath '$.id' expected '2', got 'undefined'\",\n          \"expected\": 2\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": false,\n          \"message\": \"JSONPath '$.name' should match at least one element\",\n          \"expected\": \">0\",\n          \"actual\": 0\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 0,\n      \"failed\": 3,\n      \"details\": [\n        \"Expected status code 200, got 404\",\n        \"JSONPath '$.id' expected '2', got 'undefined'\",\n        \"JSONPath '$.name' should match at least one element\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:06.876Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5775\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287dec6a14f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"177ms\",\n        \"timestamp\": \"2025-08-21T07:42:06.876Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:07.053Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:06 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"124-yiKdLzqO5gfBrJFrcdJ8Yq0LGnU\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1754072508\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=qmF%2B0RYtDk6ARVLbocBZfggycY9qc4JYDhd2rZIgWGs%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1754072508\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1754072526\",\n          \"age\": \"17113\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287ded8bcdf4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"userId\": 1,\n          \"id\": 1,\n          \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n          \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n        },\n        \"responseTime\": \"175ms\",\n        \"timestamp\": \"2025-08-21T07:42:07.053Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"variable-management\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:07.231Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:07 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5775\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287deeadaaf4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"176ms\",\n        \"timestamp\": \"2025-08-21T07:42:07.231Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:07.415Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:07 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1755577811\",\n          \"age\": \"12551\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287defcf50f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": [\n          {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n            \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"qui est esse\",\n            \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n            \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"eum et est occaecati\",\n            \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"nesciunt quas odio\",\n            \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 6,\n            \"title\": \"dolorem eum magni eos aperiam quia\",\n            \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 7,\n            \"title\": \"magnam facilis autem\",\n            \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 8,\n            \"title\": \"dolorem dolore est ipsam\",\n            \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 9,\n            \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n            \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n          },\n          {\n            \"userId\": 1,\n            \"id\": 10,\n            \"title\": \"optio molestias id quia eum\",\n            \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n          }\n        ],\n        \"responseTime\": \"182ms\",\n        \"timestamp\": \"2025-08-21T07:42:07.415Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Should retrieve posts for the user\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:07 GMT\",\n              \"content-type\": \"application/json; charset=utf-8\",\n              \"transfer-encoding\": \"chunked\",\n              \"connection\": \"keep-alive\",\n              \"access-control-allow-credentials\": \"true\",\n              \"cache-control\": \"max-age=43200\",\n              \"etag\": \"W/\\\"aa6-j2NSH739l9uq40OywFMn7Y0C/iY\\\"\",\n              \"expires\": \"-1\",\n              \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n              \"pragma\": \"no-cache\",\n              \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1755577776\\\"}],\\\"max_age\\\":3600}\",\n              \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=CqpzWhICLVU%2FK6%2BID4NGXtPztcNHe7ps912sgh3SvFM%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1755577776\\\"\",\n              \"server\": \"cloudflare\",\n              \"vary\": \"Origin, Accept-Encoding\",\n              \"via\": \"2.0 heroku-router\",\n              \"x-content-type-options\": \"nosniff\",\n              \"x-powered-by\": \"Express\",\n              \"x-ratelimit-limit\": \"1000\",\n              \"x-ratelimit-remaining\": \"999\",\n              \"x-ratelimit-reset\": \"1755577811\",\n              \"age\": \"12551\",\n              \"cf-cache-status\": \"HIT\",\n              \"cf-ray\": \"97287defcf50f4f6-MRS\",\n              \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n            },\n            \"data\": [\n              {\n                \"userId\": 1,\n                \"id\": 1,\n                \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n                \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 2,\n                \"title\": \"qui est esse\",\n                \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 3,\n                \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n                \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 4,\n                \"title\": \"eum et est occaecati\",\n                \"body\": \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 5,\n                \"title\": \"nesciunt quas odio\",\n                \"body\": \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 6,\n                \"title\": \"dolorem eum magni eos aperiam quia\",\n                \"body\": \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 7,\n                \"title\": \"magnam facilis autem\",\n                \"body\": \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 8,\n                \"title\": \"dolorem dolore est ipsam\",\n                \"body\": \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 9,\n                \"title\": \"nesciunt iure omnis dolorem tempora et accusantium\",\n                \"body\": \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\"\n              },\n              {\n                \"userId\": 1,\n                \"id\": 10,\n                \"title\": \"optio molestias id quia eum\",\n                \"body\": \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\"\n              }\n            ],\n            \"responseTime\": 182,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 30000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json, text/plain, */*\",\n                \"X-User-Name\": \"Leanne Graham\",\n                \"X-Company\": \"Romaguera-Crona\",\n                \"X-Suite\": \"comprehensive-variables\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://jsonplaceholder.typicode.com/posts?userId=1\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 2,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:07.591Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:07 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5776\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287df0e906f4f6-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"169ms\",\n        \"timestamp\": \"2025-08-21T07:42:07.591Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 1,\n      \"passed\": 1,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/bearer\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:21.084Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:20 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"73\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"authenticated\": true,\n          \"token\": \"enterprise-fallback-token-123\"\n        },\n        \"responseTime\": \"1737ms\",\n        \"timestamp\": \"2025-08-21T07:42:21.084Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.authenticated' expected 'true', got 'true'\",\n          \"expected\": true,\n          \"actual\": true\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.token' expected 'enterprise-fallback-token-123', got 'enterprise-fallback-token-123'\",\n          \"expected\": \"enterprise-fallback-token-123\",\n          \"actual\": \"enterprise-fallback-token-123\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/bearer\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:22.115Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:21 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"62\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"authenticated\": true,\n          \"token\": \"demo-api-key-12345\"\n        },\n        \"responseTime\": \"1028ms\",\n        \"timestamp\": \"2025-08-21T07:42:22.115Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.authenticated' expected 'true', got 'true'\",\n          \"expected\": true,\n          \"actual\": true\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.token' expected 'demo-api-key-12345', got 'demo-api-key-12345'\",\n          \"expected\": \"demo-api-key-12345\",\n          \"actual\": \"demo-api-key-12345\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://jsonplaceholder.typicode.com/users/1\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:22.783Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:22 GMT\",\n          \"content-type\": \"application/json; charset=utf-8\",\n          \"transfer-encoding\": \"chunked\",\n          \"connection\": \"keep-alive\",\n          \"access-control-allow-credentials\": \"true\",\n          \"cache-control\": \"max-age=43200\",\n          \"etag\": \"W/\\\"1fd-+2Y3G3w049iSZtw5t1mzSnunngE\\\"\",\n          \"expires\": \"-1\",\n          \"nel\": \"{\\\"report_to\\\":\\\"heroku-nel\\\",\\\"response_headers\\\":[\\\"Via\\\"],\\\"max_age\\\":3600,\\\"success_fraction\\\":0.01,\\\"failure_fraction\\\":0.1}\",\n          \"pragma\": \"no-cache\",\n          \"report-to\": \"{\\\"group\\\":\\\"heroku-nel\\\",\\\"endpoints\\\":[{\\\"url\\\":\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D\\\\u0026sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d\\\\u0026ts=1752362852\\\"}],\\\"max_age\\\":3600}\",\n          \"reporting-endpoints\": \"heroku-nel=\\\"https://nel.heroku.com/reports?s=%2FTDRtIzMoIfbIOjaBRVi2Qtkll9%2BVziG%2FH5xwLilckI%3D&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&ts=1752362852\\\"\",\n          \"server\": \"cloudflare\",\n          \"vary\": \"Origin, Accept-Encoding\",\n          \"via\": \"2.0 heroku-router\",\n          \"x-content-type-options\": \"nosniff\",\n          \"x-powered-by\": \"Express\",\n          \"x-ratelimit-limit\": \"1000\",\n          \"x-ratelimit-remaining\": \"999\",\n          \"x-ratelimit-reset\": \"1752362903\",\n          \"age\": \"5791\",\n          \"cf-cache-status\": \"HIT\",\n          \"cf-ray\": \"97287e4f8915bccd-MRS\",\n          \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\"\n        },\n        \"body\": {\n          \"id\": 1,\n          \"name\": \"Leanne Graham\",\n          \"username\": \"Bret\",\n          \"email\": \"Sincere@april.biz\",\n          \"address\": {\n            \"street\": \"Kulas Light\",\n            \"suite\": \"Apt. 556\",\n            \"city\": \"Gwenborough\",\n            \"zipcode\": \"92998-3874\",\n            \"geo\": {\n              \"lat\": \"-37.3159\",\n              \"lng\": \"81.1496\"\n            }\n          },\n          \"phone\": \"1-770-736-8031 x56442\",\n          \"website\": \"hildegard.org\",\n          \"company\": {\n            \"name\": \"Romaguera-Crona\",\n            \"catchPhrase\": \"Multi-layered client-server neural-net\",\n            \"bs\": \"harness real-time e-markets\"\n          }\n        },\n        \"responseTime\": \"664ms\",\n        \"timestamp\": \"2025-08-21T07:42:22.783Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.id' expected '1', got '1'\",\n          \"expected\": 1,\n          \"actual\": 1\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 2,\n      \"passed\": 2,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/bearer\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:23.067Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:22 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"73\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"authenticated\": true,\n          \"token\": \"enterprise-fallback-token-123\"\n        },\n        \"responseTime\": \"282ms\",\n        \"timestamp\": \"2025-08-21T07:42:23.067Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.authenticated' expected 'true', got 'true'\",\n          \"expected\": true,\n          \"actual\": true\n        },\n        {\n          \"type\": \"custom\",\n          \"passed\": true,\n          \"message\": \"Token should match global auth token\",\n          \"expected\": \"custom condition\",\n          \"actual\": {\n            \"status\": 200,\n            \"statusText\": \"OK\",\n            \"headers\": {\n              \"date\": \"Thu, 21 Aug 2025 07:42:22 GMT\",\n              \"content-type\": \"application/json\",\n              \"content-length\": \"73\",\n              \"connection\": \"keep-alive\",\n              \"server\": \"gunicorn/19.9.0\",\n              \"access-control-allow-origin\": \"*\",\n              \"access-control-allow-credentials\": \"true\"\n            },\n            \"data\": {\n              \"authenticated\": true,\n              \"token\": \"enterprise-fallback-token-123\"\n            },\n            \"responseTime\": 282,\n            \"config\": {\n              \"transitional\": {\n                \"silentJSONParsing\": true,\n                \"forcedJSONParsing\": true,\n                \"clarifyTimeoutError\": false\n              },\n              \"adapter\": [\n                \"xhr\",\n                \"http\",\n                \"fetch\"\n              ],\n              \"transformRequest\": [\n                null\n              ],\n              \"transformResponse\": [\n                null\n              ],\n              \"timeout\": 15000,\n              \"xsrfCookieName\": \"XSRF-TOKEN\",\n              \"xsrfHeaderName\": \"X-XSRF-TOKEN\",\n              \"maxContentLength\": -1,\n              \"maxBodyLength\": -1,\n              \"env\": {},\n              \"headers\": {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\",\n                \"X-Test-Suite\": \"enterprise-api-tests\",\n                \"X-Environment\": \"development\",\n                \"X-API-Version\": \"v1\",\n                \"X-Tenant-ID\": \"default-tenant\",\n                \"X-Organization\": \"enterprise-corp\",\n                \"X-Request-ID\": \"{{$random.uuid}}\",\n                \"X-Session-ID\": \"{{$random.uuid}}\",\n                \"X-Trace-ID\": \"{{$random.uuid}}\",\n                \"X-Span-ID\": \"{{$random.uuid}}\",\n                \"X-Compliance-Mode\": \"strict\",\n                \"X-Security-Level\": \"enterprise\",\n                \"X-Data-Classification\": \"internal\",\n                \"X-Client-Version\": \"1.0.0\",\n                \"X-Framework\": \"RestifiedTS\",\n                \"X-Platform\": \"win32\",\n                \"X-Node-Version\": \"v22.17.1\",\n                \"X-Service\": \"test-utilities\",\n                \"Authorization\": \"Bearer enterprise-fallback-token-123\",\n                \"X-Global-Auth-Token\": \"enterprise-fallback-token-123\",\n                \"X-User-Phone\": \"1-770-736-8031 x56442\",\n                \"X-Global-User\": \"test@enterprise.com\",\n                \"User-Agent\": \"axios/1.11.0\",\n                \"Accept-Encoding\": \"gzip, compress, deflate, br\"\n              },\n              \"method\": \"get\",\n              \"url\": \"https://httpbin.org/bearer\",\n              \"allowAbsoluteUrls\": true\n            }\n          }\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  },\n  {\n    \"title\": \"üìä Restified Request/Response Details\",\n    \"value\": {\n      \"request\": {\n        \"method\": \"GET\",\n        \"url\": \"https://httpbin.org/bearer\",\n        \"headers\": {},\n        \"timestamp\": \"2025-08-21T07:42:23.339Z\"\n      },\n      \"response\": {\n        \"status\": 200,\n        \"statusText\": \"OK\",\n        \"headers\": {\n          \"date\": \"Thu, 21 Aug 2025 07:42:23 GMT\",\n          \"content-type\": \"application/json\",\n          \"content-length\": \"64\",\n          \"connection\": \"keep-alive\",\n          \"server\": \"gunicorn/19.9.0\",\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-credentials\": \"true\"\n        },\n        \"body\": {\n          \"authenticated\": true,\n          \"token\": \"invalid-global-token\"\n        },\n        \"responseTime\": \"267ms\",\n        \"timestamp\": \"2025-08-21T07:42:23.339Z\"\n      },\n      \"assertions\": [\n        {\n          \"type\": \"statusCode\",\n          \"passed\": true,\n          \"message\": \"Expected status code 200, got 200\",\n          \"expected\": 200,\n          \"actual\": 200\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.authenticated' expected 'true', got 'true'\",\n          \"expected\": true,\n          \"actual\": true\n        },\n        {\n          \"type\": \"jsonPath\",\n          \"passed\": true,\n          \"message\": \"JSONPath '$.token' expected 'invalid-global-token', got 'invalid-global-token'\",\n          \"expected\": \"invalid-global-token\",\n          \"actual\": \"invalid-global-token\"\n        }\n      ],\n      \"framework\": {\n        \"name\": \"Restified\",\n        \"version\": \"1.0.0\",\n        \"nodeVersion\": \"v22.17.1\",\n        \"platform\": \"win32\",\n        \"testSuite\": \"comprehensive-variables\"\n      }\n    }\n  },\n  {\n    \"title\": \"‚úÖ Assertion Summary\",\n    \"value\": {\n      \"total\": 3,\n      \"passed\": 3,\n      \"failed\": 0,\n      \"details\": [\n        \"All assertions passed\"\n      ]\n    }\n  }\n]",
          "code": "currentTestContext = this;\n// Store globally for access from RestifiedTS\nglobal.__RESTIFIED_TEST_CONTEXT__ = this;",
          "err": {},
          "uuid": "e01fb138-8713-459a-a2e1-11f9b9ce67c3",
          "parentUUID": "16625a79-fe4f-49ae-b3bf-5d7f8c873867",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: After in \"{root}\"",
          "fullTitle": "\"after all\" hook: After in \"{root}\"",
          "timedOut": false,
          "duration": 14,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "this.timeout(10000);\nconsole.log('\\nüßπ === GLOBAL TEARDOWN: Cleaning Up ===');\nglobalTestMetrics.endTime = new Date();\nconst executionDuration = globalTestMetrics.endTime.getTime() - globalTestMetrics.startTime.getTime();\n// Simple execution summary for end users\nconst globalVars = src_1.restified.getGlobalVariables();\nconsole.log('\\nüìä Test Execution Summary:');\nconsole.log(`   ‚è±Ô∏è  Duration: ${(executionDuration / 1000).toFixed(2)}s`);\nconsole.log(`   üåç Environment: ${src_1.restified.getVariable('testEnvironment')}`);\nconsole.log(`   üîê Authentication: ${src_1.restified.getVariable('globalUserEmail') ? 'Success' : 'Failed'}`);\nconsole.log(`   üåê HTTP Clients: 3 pre-configured (api, testUtils, auth)`);\n// Generate detailed report only when reporting is enabled\nif (isReportingEnabled) {\n    console.log('\\nüìä Generating detailed test report...');\n    try {\n        const reportsDir = path.join(process.cwd(), 'reports');\n        // Simple summary for end users\n        const reportSummary = {\n            framework: 'Restified v1.0.0',\n            executionTime: new Date().toISOString(),\n            duration: `${(executionDuration / 1000).toFixed(2)}s`,\n            environment: src_1.restified.getVariable('testEnvironment') || 'development',\n            authentication: {\n                status: src_1.restified.getVariable('globalUserEmail') ? 'success' : 'failed',\n                user: src_1.restified.getVariable('globalUserEmail') || 'unknown'\n            },\n            clients: {\n                api: 'https://jsonplaceholder.typicode.com',\n                testUtils: 'https://httpbin.org',\n                auth: 'configured'\n            },\n            variables: {\n                global: Object.keys(globalVars).length,\n                extracted: src_1.restified.getVariable('globalAuthToken') ? 'available' : 'none'\n            }\n        };\n        fs.writeFileSync(path.join(reportsDir, 'test-summary.json'), JSON.stringify(reportSummary, null, 2));\n        console.log('‚úÖ Test report generated');\n        console.log(`   üìÅ Reports directory: ${reportsDir}/`);\n        console.log(`   üìÑ Summary: test-summary.json`);\n        console.log(`   üåê HTML Report: test-report.html (if using Mochawesome)`);\n    }\n    catch (error) {\n        console.log('‚ö†Ô∏è  Warning: Could not generate detailed report:', error.message);\n    }\n}\n// Perform cleanup\nconsole.log('\\nüßΩ Performing cleanup...');\nawait src_1.restified.cleanup();\nconsole.log('\\n‚úÖ === GLOBAL TEARDOWN COMPLETE ===');\nif (isReportingEnabled) {\n    const reportDir = process.env.REPORT_OUTPUT_DIR || 'reports';\n    const reportFile = process.env.REPORT_FILENAME || 'test-report.html';\n    console.log(`üìä View your test report: ${reportDir}/${reportFile}`);\n}\nelse {\n    console.log('üí° Want a detailed HTML report? Run: npm run report');\n}\nconsole.log('');",
          "err": {},
          "uuid": "05f51a14-23c0-48c9-892d-492116032de1",
          "parentUUID": "16625a79-fe4f-49ae-b3bf-5d7f8c873867",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "currentTestContext = null;\nglobal.__RESTIFIED_TEST_CONTEXT__ = null;",
          "err": {},
          "uuid": "8883959d-ea33-4698-a519-c624d91550d0",
          "parentUUID": "16625a79-fe4f-49ae-b3bf-5d7f8c873867",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "f52b45c0-6272-412d-ac15-b7eeb3fac3b2",
          "title": "POST Request with Variables Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\basic\\post-with-variables.ts",
          "file": "\\examples\\basic\\post-with-variables.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"POST Request with Variables Example\"",
              "fullTitle": "POST Request with Variables Example \"before each\" hook in \"POST Request with Variables Example\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set up test-specific data (global auth data already available from setup)\nsrc_1.restified.setLocalVariable('postTitle', 'My Test Post');\nsrc_1.restified.setLocalVariable('postBody', 'Created using global auth by {{globalUserEmail}}');",
              "err": {},
              "uuid": "cdaa2183-d590-48f7-ba49-710bd761b50e",
              "parentUUID": "f52b45c0-6272-412d-ac15-b7eeb3fac3b2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a post using global client and variables",
              "fullTitle": "POST Request with Variables Example should create a post using global client and variables",
              "timedOut": false,
              "duration": 284,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('POST Variables', 'Create Post');\n// Use pre-configured API client from global setup\n// Common headers are already included in the client configuration\nconst createResponse = await src_1.restified\n    .given()\n    .useClient('api') // Global client with pre-configured headers\n    .header('X-Author', '{{globalUserEmail}}')\n    .when()\n    .post('/posts', {\n    title: '{{postTitle}}',\n    body: '{{postBody}}',\n    userId: '{{globalUserId}}' // Using global user ID from auth\n})\n    .execute();\n// Verify creation and extract the ID\nawait createResponse\n    .statusCode(201)\n    .jsonPath('$.title', 'My Test Post')\n    .jsonPath('$.userId', '1') // JSONPlaceholder returns userId as string\n    .extract('$.id', 'createdPostId')\n    .execute();\nconsole.log('üìù Post created with ID:', src_1.restified.getVariable('createdPostId'));",
              "err": {},
              "uuid": "3a651f98-48cd-4687-8198-ccd3f7dddc16",
              "parentUUID": "f52b45c0-6272-412d-ac15-b7eeb3fac3b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retrieve post using global client and extracted variables",
              "fullTitle": "POST Request with Variables Example should retrieve post using global client and extracted variables",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('POST Variables', 'Retrieve Post');\n// Use the globalUserId that was set during global authentication\n// Common headers are already included in the client configuration\nconst getResponse = await src_1.restified\n    .given()\n    .useClient('api') // Pre-configured API client\n    .header('X-Requested-By', '{{globalUserEmail}}')\n    .when()\n    .get('/posts/{{globalUserId}}') // Using global user ID\n    .execute();\nawait getResponse\n    .statusCode(200)\n    .jsonPath('$.id', src_1.restified.getVariable('globalUserId'))\n    .jsonPath('$.userId', src_1.restified.getVariable('globalUserId'))\n    .jsonPath('$.title')\n    .custom((response) => {\n    // Verify we can access global variables in custom assertions\n    return src_1.restified.getVariable('testEnvironment') === 'development';\n}, 'Should have access to global test environment')\n    .execute();",
              "err": {},
              "uuid": "25b404b8-0288-4d94-975b-55274db9fdec",
              "parentUUID": "f52b45c0-6272-412d-ac15-b7eeb3fac3b2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate cross-client variable usage",
              "fullTitle": "POST Request with Variables Example should demonstrate cross-client variable usage",
              "timedOut": false,
              "duration": 1864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('POST Variables', 'Cross-Client');\n// First, create data using API client\n// Common headers are already included in the client configuration\nconst apiResponse = await src_1.restified\n    .given()\n    .useClient('api')\n    .when()\n    .get('/users/{{globalUserId}}')\n    .execute();\nawait apiResponse\n    .statusCode(200)\n    .extract('$.company.catchPhrase', 'companyCatchPhrase')\n    .execute();\n// Then use testUtils client to validate the extracted data\n// Common headers are already included in the client configuration\nconst testResponse = await src_1.restified\n    .given()\n    .useClient('testUtils') // Different client from global setup\n    .when()\n    .post('/post', {\n    extractedData: '{{companyCatchPhrase}}',\n    globalUser: '{{globalUserEmail}}',\n    testSuite: '{{testSuite}}'\n})\n    .execute();\nawait testResponse\n    .statusCode(200)\n    .jsonPath('$.json.globalUser', src_1.restified.getVariable('globalUserEmail'))\n    .jsonPath('$.json.testSuite', src_1.restified.getVariable('testSuite'))\n    .execute();\nconsole.log('üåê Cross-client variable sharing successful');",
              "err": {},
              "uuid": "b9f09365-3092-447e-8e16-904f03b52017",
              "parentUUID": "f52b45c0-6272-412d-ac15-b7eeb3fac3b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a651f98-48cd-4687-8198-ccd3f7dddc16",
            "25b404b8-0288-4d94-975b-55274db9fdec",
            "b9f09365-3092-447e-8e16-904f03b52017"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "90f49824-3606-4d00-96b7-f445f99a6af9",
          "title": "Simple GET Request Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\basic\\simple-get.ts",
          "file": "\\examples\\basic\\simple-get.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Simple GET in \"Simple GET Request Example\"",
              "fullTitle": "Simple GET Request Example \"before all\" hook: Simple GET in \"Simple GET Request Example\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "7fd14a8e-1744-4bde-b4b1-2db68455b388",
              "parentUUID": "90f49824-3606-4d00-96b7-f445f99a6af9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Simple GET in \"Simple GET Request Example\"",
              "fullTitle": "Simple GET Request Example \"after all\" hook: Simple GET in \"Simple GET Request Example\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "8f4bb86b-b7b3-4a93-a2b9-2ffb4fa72f81",
              "parentUUID": "90f49824-3606-4d00-96b7-f445f99a6af9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should successfully get a post using pre-configured API client",
              "fullTitle": "Simple GET Request Example should successfully get a post using pre-configured API client",
              "timedOut": false,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"üéØ Test Objective\",\n    \"value\": \"Verify basic GET request functionality with enterprise headers and automatic context capture\"\n  },\n  {\n    \"title\": \"üìã Manual Test Context\",\n    \"value\": {\n      \"testType\": \"Basic GET Request\",\n      \"expectedBehavior\": \"Should return post data with ID 1\",\n      \"actualResult\": {\n        \"status\": 200,\n        \"responseTime\": \"186ms\",\n        \"dataReceived\": true\n      },\n      \"notes\": \"This test demonstrates RestifiedTS automatic context capture\"\n    }\n  }\n]",
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Basic API Request');\n// üìä Add test context for enterprise reporting using mochawesome/addContext\nif (addContext) {\n    addContext(this, {\n        title: 'üéØ Test Objective',\n        value: 'Verify basic GET request functionality with enterprise headers and automatic context capture'\n    });\n}\n// Use the pre-configured 'api' client from global setup\n// Common headers are already included in the client configuration\nconst response = await src_1.restified\n    .given()\n    .useClient('api') // Using global client with pre-configured headers\n    .when()\n    .get('/posts/1')\n    .execute();\n// Note: RestifiedTS now automatically captures request/response details\n// in the .execute() method, but we can still add manual context if needed\n// Get response details for additional manual context (optional)\nconst httpResponse = response.getResponse();\n// üìä Add supplementary test information\nif (addContext) {\n    addContext(this, {\n        title: 'üìã Manual Test Context',\n        value: {\n            testType: 'Basic GET Request',\n            expectedBehavior: 'Should return post data with ID 1',\n            actualResult: {\n                status: httpResponse.status,\n                responseTime: `${httpResponse.responseTime}ms`,\n                dataReceived: !!httpResponse.data\n            },\n            notes: 'This test demonstrates RestifiedTS automatic context capture'\n        }\n    });\n}\nawait response\n    .statusCode(200)\n    .header('content-type')\n    .jsonPath('$.id', 1)\n    .jsonPath('$.title')\n    .execute();",
              "err": {},
              "uuid": "09ba45cb-19f8-41c9-a0c6-6182bda3feed",
              "parentUUID": "90f49824-3606-4d00-96b7-f445f99a6af9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify post has required fields using global configuration",
              "fullTitle": "Simple GET Request Example should verify post has required fields using global configuration",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Field Validation');\n// Use global client and add environment-specific headers\nconst response = await src_1.restified\n    .given()\n    .useClient('api') // Pre-configured API client\n    .header('X-Test-Environment', '{{testEnvironment}}')\n    .header('X-Global-User', '{{globalUserEmail}}')\n    .when()\n    .get('/posts/1')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.userId')\n    .jsonPath('$.title')\n    .jsonPath('$.body')\n    .custom((response) => {\n    return typeof response.data.id === 'number';\n}, 'Post ID should be a number')\n    .custom((response) => {\n    // Verify we're running in the expected environment\n    return src_1.restified.getVariable('testEnvironment') === 'development';\n}, 'Should be running in expected test environment')\n    .execute();",
              "err": {},
              "uuid": "087dfafc-38f3-415e-8669-d6693bb76347",
              "parentUUID": "90f49824-3606-4d00-96b7-f445f99a6af9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09ba45cb-19f8-41c9-a0c6-6182bda3feed",
            "087dfafc-38f3-415e-8669-d6693bb76347"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
          "title": "Data-Driven Testing Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\data-driven-testing.ts",
          "file": "\\examples\\advanced\\data-driven-testing.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Data-Driven Testing Example\"",
              "fullTitle": "Data-Driven Testing Example \"after all\" hook in \"Data-Driven Testing Example\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await src_1.restified.cleanup();",
              "err": {},
              "uuid": "8b16ed20-c8e2-44da-b570-2a83b35592df",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate user 1 has correct name: Leanne Graham",
              "fullTitle": "Data-Driven Testing Example should validate user 1 has correct name: Leanne Graham",
              "timedOut": false,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/users/${id}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.id', id)\n    .jsonPath('$.name', expectedName)\n    .execute();",
              "err": {},
              "uuid": "f2eed74d-a80f-4c28-a518-e013a4d3cbc6",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate user 2 has correct name: Ervin Howell",
              "fullTitle": "Data-Driven Testing Example should validate user 2 has correct name: Ervin Howell",
              "timedOut": false,
              "duration": 184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/users/${id}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.id', id)\n    .jsonPath('$.name', expectedName)\n    .execute();",
              "err": {},
              "uuid": "f0b19767-ea13-4619-a225-5b54d653acd3",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate user 3 has correct name: Clementine Bauch",
              "fullTitle": "Data-Driven Testing Example should validate user 3 has correct name: Clementine Bauch",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/users/${id}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.id', id)\n    .jsonPath('$.name', expectedName)\n    .execute();",
              "err": {},
              "uuid": "e4924a12-6807-49be-b103-bb3cedc15de5",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate user 1 has posts within expected range",
              "fullTitle": "Data-Driven Testing Example should validate user 1 has posts within expected range",
              "timedOut": false,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/posts?userId=${userId}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .custom((response) => {\n    const posts = response.data;\n    return Array.isArray(posts) &&\n        posts.length >= expectedPostCount.min &&\n        posts.length <= expectedPostCount.max;\n}, `User ${userId} should have ${expectedPostCount.min}-${expectedPostCount.max} posts`)\n    .custom((response) => {\n    return response.data.every(post => post.userId === userId);\n}, `All posts should belong to user ${userId}`)\n    .execute();",
              "err": {},
              "uuid": "21ba4ae0-7513-488b-b075-fe07476993d9",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate user 2 has posts within expected range",
              "fullTitle": "Data-Driven Testing Example should validate user 2 has posts within expected range",
              "timedOut": false,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/posts?userId=${userId}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .custom((response) => {\n    const posts = response.data;\n    return Array.isArray(posts) &&\n        posts.length >= expectedPostCount.min &&\n        posts.length <= expectedPostCount.max;\n}, `User ${userId} should have ${expectedPostCount.min}-${expectedPostCount.max} posts`)\n    .custom((response) => {\n    return response.data.every(post => post.userId === userId);\n}, `All posts should belong to user ${userId}`)\n    .execute();",
              "err": {},
              "uuid": "959b85c7-3c87-409a-9518-dcbb21e1caec",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate user 3 has posts within expected range",
              "fullTitle": "Data-Driven Testing Example should validate user 3 has posts within expected range",
              "timedOut": false,
              "duration": 330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(`/posts?userId=${userId}`)\n    .execute();\nawait response\n    .statusCode(200)\n    .custom((response) => {\n    const posts = response.data;\n    return Array.isArray(posts) &&\n        posts.length >= expectedPostCount.min &&\n        posts.length <= expectedPostCount.max;\n}, `User ${userId} should have ${expectedPostCount.min}-${expectedPostCount.max} posts`)\n    .custom((response) => {\n    return response.data.every(post => post.userId === userId);\n}, `All posts should belong to user ${userId}`)\n    .execute();",
              "err": {},
              "uuid": "9769cdbe-2c17-4335-94dc-7e9023af52a3",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for /posts/1",
              "fullTitle": "Data-Driven Testing Example should return 200 for /posts/1",
              "timedOut": false,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(endpoint)\n    .execute();\nawait response\n    .statusCode(expectedStatus)\n    .execute();",
              "err": {},
              "uuid": "ee6beecc-8208-48f6-83d8-faf5929780d4",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for /posts/999",
              "fullTitle": "Data-Driven Testing Example should return 404 for /posts/999",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(endpoint)\n    .execute();\nawait response\n    .statusCode(expectedStatus)\n    .execute();",
              "err": {},
              "uuid": "002067a2-f56d-4569-ad45-9fa96cf56ba0",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for /users/1",
              "fullTitle": "Data-Driven Testing Example should return 200 for /users/1",
              "timedOut": false,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(endpoint)\n    .execute();\nawait response\n    .statusCode(expectedStatus)\n    .execute();",
              "err": {},
              "uuid": "bcbff4b4-e4ac-436e-8609-feb0b86baf34",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 404 for /users/999",
              "fullTitle": "Data-Driven Testing Example should return 404 for /users/999",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get(endpoint)\n    .execute();\nawait response\n    .statusCode(expectedStatus)\n    .execute();",
              "err": {},
              "uuid": "7b217ef9-bc69-4718-89e9-610e2f1ccadc",
              "parentUUID": "4fab5df7-2ae5-445e-87b8-de5d401666ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2eed74d-a80f-4c28-a518-e013a4d3cbc6",
            "f0b19767-ea13-4619-a225-5b54d653acd3",
            "e4924a12-6807-49be-b103-bb3cedc15de5",
            "21ba4ae0-7513-488b-b075-fe07476993d9",
            "959b85c7-3c87-409a-9518-dcbb21e1caec",
            "9769cdbe-2c17-4335-94dc-7e9023af52a3",
            "ee6beecc-8208-48f6-83d8-faf5929780d4",
            "002067a2-f56d-4569-ad45-9fa96cf56ba0",
            "bcbff4b4-e4ac-436e-8609-feb0b86baf34",
            "7b217ef9-bc69-4718-89e9-610e2f1ccadc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1987,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c475bd9b-86c6-4210-91f1-b75bcbacb621",
          "title": "Database Integration Testing",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
          "file": "\\examples\\advanced\\database-testing.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Database Integration Testing\"",
              "fullTitle": "Database Integration Testing \"before all\" hook in \"Database Integration Testing\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup database connections (using mock/test databases)\n// PostgreSQL connection (if available)\nif (process.env.POSTGRES_CONNECTION_STRING || process.env.POSTGRES_HOST) {\n    await index_1.restified.createDatabaseClient('postgres', {\n        type: 'postgresql',\n        host: process.env.POSTGRES_HOST || 'localhost',\n        port: parseInt(process.env.POSTGRES_PORT || '5432'),\n        username: process.env.POSTGRES_USER || 'test',\n        password: process.env.POSTGRES_PASSWORD || 'test',\n        database: process.env.POSTGRES_DB || 'testdb',\n        connectionString: process.env.POSTGRES_CONNECTION_STRING,\n        timeout: 10000\n    });\n}\n// MongoDB connection (if available)\nif (process.env.MONGODB_CONNECTION_STRING || process.env.MONGODB_HOST) {\n    await index_1.restified.createDatabaseClient('mongodb', {\n        type: 'mongodb',\n        host: process.env.MONGODB_HOST || 'localhost',\n        port: parseInt(process.env.MONGODB_PORT || '27017'),\n        database: process.env.MONGODB_DB || 'testdb',\n        connectionString: process.env.MONGODB_CONNECTION_STRING,\n        timeout: 10000\n    });\n}",
              "err": {},
              "uuid": "4423a256-cac4-44fc-8fa5-3258cca770ef",
              "parentUUID": "c475bd9b-86c6-4210-91f1-b75bcbacb621",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Database Integration Testing\"",
              "fullTitle": "Database Integration Testing \"after all\" hook in \"Database Integration Testing\"",
              "timedOut": false,
              "duration": 7,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await index_1.restified.cleanup();",
              "err": {},
              "uuid": "e0a788b9-2509-4c5d-b1c5-09f27cf99ce2",
              "parentUUID": "c475bd9b-86c6-4210-91f1-b75bcbacb621",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
              "title": "PostgreSQL Integration",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
              "file": "\\examples\\advanced\\database-testing.ts",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"PostgreSQL Integration\"",
                  "fullTitle": "Database Integration Testing PostgreSQL Integration \"before each\" hook in \"PostgreSQL Integration\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (!index_1.restified.getDatabaseClient) {\n    this.skip();\n}\ntry {\n    index_1.restified.getDatabaseClient('postgres');\n}\ncatch {\n    this.skip();\n}",
                  "err": {},
                  "uuid": "9100693d-fcc7-4dd7-89fb-9ff8a64af3c4",
                  "parentUUID": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate user creation via API and database",
                  "fullTitle": "Database Integration Testing PostgreSQL Integration should validate user creation via API and database",
                  "timedOut": false,
                  "duration": 282,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('postgres');\n// Create snapshot before test\nawait dbClient.createSnapshot('before-user-test', ['users']);\n// Create user via API\nconst response = await index_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .post('/users', {\n    name: 'Database Test User',\n    email: 'dbtest@example.com',\n    username: 'dbtestuser'\n})\n    .execute();\nawait response\n    .statusCode(201)\n    .extract('$.id', 'createdUserId')\n    .execute();\n// Simulate database state validation\n// In real scenario, this would check if user was actually created in database\nconst userId = index_1.restified.getVariable('createdUserId');\n// Mock database query result\nconst queryResult = await dbClient.executeQuery('SELECT * FROM users WHERE external_id = $1', [userId]);\n// In a real test, you would validate the user exists in database\nconsole.log(`Created user with ID: ${userId}`);\n(0, chai_1.expect)(queryResult.executionTime).to.be.a('number');",
                  "err": {
                    "message": "AssertionError: expected undefined to be a number",
                    "estack": "AssertionError: expected undefined to be a number\n    at Context.<anonymous> (examples\\advanced\\database-testing.ts:95:47)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "c49ab1f5-4c24-458d-9c3d-0ffd5bb0a052",
                  "parentUUID": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate data consistency across API and database",
                  "fullTitle": "Database Integration Testing PostgreSQL Integration should validate data consistency across API and database",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('postgres');\n// Test data consistency validation\nconst validationResult = await index_1.restified.validateDatabaseState([\n    {\n        client: 'postgres',\n        table: 'users',\n        conditions: { active: true },\n        expectedCount: 5\n    },\n    {\n        client: 'postgres',\n        table: 'orders',\n        conditions: { status: 'pending' },\n        expectedCount: { min: 1 }\n    }\n]);\n// In real scenario, this would validate actual database state\n(0, chai_1.expect)(validationResult).to.have.property('success');\n(0, chai_1.expect)(validationResult).to.have.property('results');",
                  "err": {},
                  "uuid": "fb6e5a59-ef2b-4db3-96dd-c0bbc4a1d5e1",
                  "parentUUID": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle database transactions",
                  "fullTitle": "Database Integration Testing PostgreSQL Integration should handle database transactions",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('postgres');\ntry {\n    // Begin transaction\n    await dbClient.beginTransaction();\n    // Execute test operations\n    await dbClient.executeQuery('INSERT INTO test_table (name, value) VALUES ($1, $2)', ['transaction-test', 42]);\n    // Validate data exists in transaction\n    const result = await dbClient.executeQuery('SELECT * FROM test_table WHERE name = $1', ['transaction-test']);\n    // Rollback transaction (cleanup)\n    await dbClient.rollback();\n    console.log('Transaction test completed successfully');\n}\ncatch (error) {\n    await dbClient.rollback();\n    throw error;\n}",
                  "err": {},
                  "uuid": "03200037-7a4d-4a14-af3e-7cda8859ad48",
                  "parentUUID": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should measure database query performance",
                  "fullTitle": "Database Integration Testing PostgreSQL Integration should measure database query performance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('postgres');\nconst startTime = Date.now();\nconst result = await dbClient.executeQuery('SELECT COUNT(*) as total FROM information_schema.tables');\n(0, chai_1.expect)(result.executionTime).to.be.a('number');\n(0, chai_1.expect)(result.executionTime).to.be.lessThan(5000); // Less than 5 seconds\nconsole.log(`Database query executed in ${result.executionTime}ms`);",
                  "err": {
                    "message": "AssertionError: expected undefined to be a number",
                    "estack": "AssertionError: expected undefined to be a number\n    at Context.<anonymous> (examples\\advanced\\database-testing.ts:160:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "22edb925-b203-45e7-b33e-a49925074fa9",
                  "parentUUID": "bb98dce6-d409-4ff9-ba4d-89e3d46dcd4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb6e5a59-ef2b-4db3-96dd-c0bbc4a1d5e1",
                "03200037-7a4d-4a14-af3e-7cda8859ad48"
              ],
              "failures": [
                "c49ab1f5-4c24-458d-9c3d-0ffd5bb0a052",
                "22edb925-b203-45e7-b33e-a49925074fa9"
              ],
              "pending": [],
              "skipped": [],
              "duration": 286,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "efb50e83-f50d-4666-8fc2-f81e658b1add",
              "title": "MongoDB Integration",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
              "file": "\\examples\\advanced\\database-testing.ts",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"MongoDB Integration\"",
                  "fullTitle": "Database Integration Testing MongoDB Integration \"before each\" hook in \"MongoDB Integration\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    index_1.restified.getDatabaseClient('mongodb');\n}\ncatch {\n    this.skip();\n}",
                  "err": {},
                  "uuid": "43c0ebd8-45c3-4026-88f1-99f288b2435d",
                  "parentUUID": "efb50e83-f50d-4666-8fc2-f81e658b1add",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate document creation and retrieval",
                  "fullTitle": "Database Integration Testing MongoDB Integration should validate document creation and retrieval",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('mongodb');\n// Insert document\nconst insertOperation = JSON.stringify({\n    collection: 'users',\n    method: 'insertOne',\n    document: {\n        name: 'MongoDB Test User',\n        email: 'mongotest@example.com',\n        createdAt: new Date(),\n        metadata: {\n            source: 'restifiedts-test',\n            version: '1.0.0'\n        }\n    }\n});\nconst insertResult = await dbClient.executeQuery(insertOperation);\n(0, chai_1.expect)(insertResult.insertId).to.exist;\nconst documentId = insertResult.insertId;\nindex_1.restified.setGlobalVariable('mongoDocumentId', documentId.toString());\n// Retrieve document\nconst findOperation = JSON.stringify({\n    collection: 'users',\n    method: 'findOne',\n    query: { _id: documentId }\n});\nconst findResult = await dbClient.executeQuery(findOperation);\n(0, chai_1.expect)(findResult.rows).to.have.length(1);\n(0, chai_1.expect)(findResult.rows[0].name).to.equal('MongoDB Test User');\n(0, chai_1.expect)(findResult.rows[0].metadata.source).to.equal('restifiedts-test');",
                  "err": {
                    "message": "AssertionError: expected undefined to exist",
                    "estack": "AssertionError: expected undefined to exist\n    at Context.<anonymous> (examples\\advanced\\database-testing.ts:195:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "d4e5a13f-d555-46cd-b787-41d50ede5c5d",
                  "parentUUID": "efb50e83-f50d-4666-8fc2-f81e658b1add",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate document updates",
                  "fullTitle": "Database Integration Testing MongoDB Integration should validate document updates",
                  "timedOut": false,
                  "duration": 1,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('mongodb');\nconst documentId = index_1.restified.getVariable('mongoDocumentId');\nif (!documentId) {\n    this.skip();\n}\n// Update document\nconst updateOperation = JSON.stringify({\n    collection: 'users',\n    method: 'updateOne',\n    query: { _id: { $oid: documentId } },\n    document: {\n        $set: {\n            name: 'Updated MongoDB User',\n            updatedAt: new Date()\n        }\n    }\n});\nconst updateResult = await dbClient.executeQuery(updateOperation);\n(0, chai_1.expect)(updateResult.affectedRows).to.equal(1);\n// Verify update\nconst findOperation = JSON.stringify({\n    collection: 'users',\n    method: 'findOne',\n    query: { _id: { $oid: documentId } }\n});\nconst findResult = await dbClient.executeQuery(findOperation);\n(0, chai_1.expect)(findResult.rows[0].name).to.equal('Updated MongoDB User');\n(0, chai_1.expect)(findResult.rows[0].updatedAt).to.exist;",
                  "err": {},
                  "uuid": "7b4e475e-c6a8-4320-8368-4fc9ff460ceb",
                  "parentUUID": "efb50e83-f50d-4666-8fc2-f81e658b1add",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle aggregation queries",
                  "fullTitle": "Database Integration Testing MongoDB Integration should handle aggregation queries",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dbClient = index_1.restified.getDatabaseClient('mongodb');\nconst aggregationOperation = JSON.stringify({\n    collection: 'users',\n    method: 'aggregate',\n    query: [\n        { $match: { name: { $regex: 'MongoDB', $options: 'i' } } },\n        { $group: { _id: '$metadata.source', count: { $sum: 1 } } },\n        { $sort: { count: -1 } }\n    ]\n});\nconst result = await dbClient.executeQuery(aggregationOperation);\n(0, chai_1.expect)(result.rows).to.be.an('array');\n(0, chai_1.expect)(result.executionTime).to.be.a('number');\nconsole.log(`Aggregation completed in ${result.executionTime}ms`);",
                  "err": {
                    "message": "AssertionError: expected undefined to be an array",
                    "estack": "AssertionError: expected undefined to be an array\n    at Context.<anonymous> (examples\\advanced\\database-testing.ts:263:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "30368131-ada8-4aff-8edd-f7ca73981afc",
                  "parentUUID": "efb50e83-f50d-4666-8fc2-f81e658b1add",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d4e5a13f-d555-46cd-b787-41d50ede5c5d",
                "30368131-ada8-4aff-8edd-f7ca73981afc"
              ],
              "pending": [
                "7b4e475e-c6a8-4320-8368-4fc9ff460ceb"
              ],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "a968e261-1958-4a3b-a341-ddb06619c43c",
              "title": "Cross-Database Validation",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
              "file": "\\examples\\advanced\\database-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate data consistency across multiple databases",
                  "fullTitle": "Database Integration Testing Cross-Database Validation should validate data consistency across multiple databases",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// This would test scenarios where data must be consistent across different databases\n// For example, user data in PostgreSQL and session data in MongoDB\nconst validations = [\n    {\n        client: 'postgres',\n        table: 'users',\n        conditions: { active: true },\n        expectedCount: 3\n    }\n];\n// Add MongoDB validation if available\ntry {\n    index_1.restified.getDatabaseClient('mongodb');\n    validations.push({\n        client: 'mongodb',\n        table: 'sessions', // collection\n        conditions: { active: true },\n        expectedCount: 3\n    });\n}\ncatch {\n    // MongoDB not available, skip\n}\nif (validations.length > 1) {\n    const result = await index_1.restified.validateDatabaseState(validations);\n    (0, chai_1.expect)(result.success).to.be.a('boolean');\n    (0, chai_1.expect)(result.results).to.have.length(validations.length);\n}",
                  "err": {},
                  "uuid": "50d2edbe-7998-419b-9acc-83d25bfd2043",
                  "parentUUID": "a968e261-1958-4a3b-a341-ddb06619c43c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50d2edbe-7998-419b-9acc-83d25bfd2043"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "566dfcee-c38c-4319-9d42-379d7e37be35",
              "title": "Database Health Checks",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
              "file": "\\examples\\advanced\\database-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should perform health checks on all database connections",
                  "fullTitle": "Database Integration Testing Database Health Checks should perform health checks on all database connections",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const connections = ['postgres', 'mongodb'];\nfor (const connectionName of connections) {\n    try {\n        const dbClient = index_1.restified.getDatabaseClient(connectionName);\n        const health = await dbClient.healthCheck();\n        (0, chai_1.expect)(health.healthy).to.be.a('boolean');\n        (0, chai_1.expect)(health.latency).to.be.a('number');\n        if (health.healthy) {\n            (0, chai_1.expect)(health.latency).to.be.greaterThan(0);\n            console.log(`${connectionName} health check: ${health.latency}ms`);\n        }\n        else {\n            console.log(`${connectionName} health check failed: ${health.error}`);\n        }\n    }\n    catch (error) {\n        console.log(`${connectionName} connection not available`);\n    }\n}",
                  "err": {},
                  "uuid": "3de48351-00d6-4a55-90c5-8a1f655fc156",
                  "parentUUID": "566dfcee-c38c-4319-9d42-379d7e37be35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de48351-00d6-4a55-90c5-8a1f655fc156"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "43d82409-fa84-4c24-9e6e-a06d872f5953",
              "title": "Test Data Management",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\database-testing.ts",
              "file": "\\examples\\advanced\\database-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should seed and cleanup test data",
                  "fullTitle": "Database Integration Testing Test Data Management should seed and cleanup test data",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const dbClient = index_1.restified.getDatabaseClient('postgres');\n    // Seed test data\n    const testData = [\n        { name: 'Test User 1', email: 'test1@example.com', active: true },\n        { name: 'Test User 2', email: 'test2@example.com', active: true },\n        { name: 'Test User 3', email: 'test3@example.com', active: false }\n    ];\n    await dbClient.seedTestData('test_users', testData);\n    // Validate data was seeded\n    const count = await dbClient.validateCount('test_users', 3, { active: true });\n    (0, chai_1.expect)(count).to.be.true;\n    // Cleanup test data\n    await dbClient.cleanupTestData('test_users', { email: { $like: '%@example.com' } });\n    console.log('Test data seeding and cleanup completed');\n}\ncatch (error) {\n    console.log('Test data management skipped - table not available');\n}",
                  "err": {},
                  "uuid": "83c03bd4-2fdf-4997-a841-cfff17e2c6d5",
                  "parentUUID": "43d82409-fa84-4c24-9e6e-a06d872f5953",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83c03bd4-2fdf-4997-a841-cfff17e2c6d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "744335ee-e015-4b8c-a4af-38954dfb5f78",
          "title": "Error Handling and Resilience Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\error-handling.ts",
          "file": "\\examples\\advanced\\error-handling.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Error Handling and Resilience Example\"",
              "fullTitle": "Error Handling and Resilience Example \"after all\" hook in \"Error Handling and Resilience Example\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await src_1.restified.cleanup();",
              "err": {},
              "uuid": "e13210df-d7a2-4b9c-a645-fec617f47618",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should handle 404 errors gracefully",
              "fullTitle": "Error Handling and Resilience Example should handle 404 errors gracefully",
              "timedOut": false,
              "duration": 469,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/posts/9999')\n    .execute();\nawait response\n    .statusCode(404)\n    .execute();",
              "err": {},
              "uuid": "de511530-0c54-4767-8b8e-50debadaa53e",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle network timeouts with retry",
              "fullTitle": "Error Handling and Resilience Example should handle network timeouts with retry",
              "timedOut": false,
              "duration": 1018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Configure client with short timeout for demonstration\nsrc_1.restified.createClient('timeout-test', {\n    baseURL: 'https://httpbin.org',\n    timeout: 1000 // Very short timeout\n});\ntry {\n    const response = await src_1.restified\n        .given()\n        .useClient('timeout-test')\n        .when()\n        .get('/delay/2') // This will likely timeout and retry\n        .execute();\n    await response\n        .statusCode(200)\n        .execute();\n}\ncatch (error) {\n    // Expected to fail due to timeout, but should show retry attempts\n    console.log('Request failed after retries as expected');\n}",
              "err": {},
              "uuid": "d83a504c-6ec9-4bc0-b3c7-0a6395d391e6",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate error response structure",
              "fullTitle": "Error Handling and Resilience Example should validate error response structure",
              "timedOut": false,
              "duration": 3550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://httpbin.org')\n    .when()\n    .get('/status/500')\n    .execute();\nawait response\n    .statusCode(500)\n    .execute();",
              "err": {},
              "uuid": "21be8b56-1019-4399-8858-98cbf3fe7a13",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle malformed JSON responses",
              "fullTitle": "Error Handling and Resilience Example should handle malformed JSON responses",
              "timedOut": false,
              "duration": 943,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Test against an endpoint that returns plain text instead of JSON\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://httpbin.org')\n    .when()\n    .get('/html')\n    .execute();\nawait response\n    .statusCode(200)\n    .header('content-type')\n    .custom((response) => {\n    return response.headers['content-type'].includes('text/html');\n}, 'Response should be HTML')\n    .execute();",
              "err": {
                "message": "Error: Assertions failed:\nExpected status code 200, got 502",
                "estack": "Error: Assertions failed:\nExpected status code 200, got 502\n    at ThenStep.execute (src\\core\\dsl\\then.core.ts:220:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (examples\\advanced\\error-handling.ts:72:5)",
                "diff": null
              },
              "uuid": "5f42b9bf-bab4-4437-bd6a-db6fc79e5c59",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test API rate limiting behavior",
              "fullTitle": "Error Handling and Resilience Example should test API rate limiting behavior",
              "timedOut": false,
              "duration": 658,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Make multiple rapid requests to test rate limiting\n// Note: This is just for demonstration - real rate limiting would need appropriate endpoint\nconst requests = [];\nfor (let i = 0; i < 3; i++) {\n    const request = src_1.restified\n        .given()\n        .baseURL('https://jsonplaceholder.typicode.com')\n        .when()\n        .get('/posts/1')\n        .execute();\n    requests.push(request);\n}\nconst responses = await Promise.all(requests);\n// Verify all requests succeeded (JSONPlaceholder doesn't have rate limiting)\nfor (const response of responses) {\n    await response\n        .statusCode(200)\n        .execute();\n}",
              "err": {},
              "uuid": "607ba44c-d385-45ce-b811-9c395f115dbf",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle authentication errors",
              "fullTitle": "Error Handling and Resilience Example should handle authentication errors",
              "timedOut": false,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://httpbin.org')\n    .bearerToken('invalid-token')\n    .when()\n    .get('/bearer')\n    .execute();\n// httpbin.org /bearer endpoint doesn't actually validate tokens\n// So this will pass, but in real scenarios you'd test for 401\nawait response\n    .statusCode(200)\n    .execute();",
              "err": {},
              "uuid": "c2032029-ea8d-4d7d-9e49-42d093c76126",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should test request payload validation errors",
              "fullTitle": "Error Handling and Resilience Example should test request payload validation errors",
              "timedOut": false,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .contentType('application/json')\n    .when()\n    .post('/posts', {\n    // Missing required fields to simulate validation error\n    invalidField: 'test'\n})\n    .execute();\n// JSONPlaceholder is lenient, but real APIs would return validation errors\nawait response\n    .statusCode(201) // JSONPlaceholder always returns 201 for POST\n    .execute();",
              "err": {},
              "uuid": "58e4fc6e-8a8d-41fa-85d3-da17e5feedbf",
              "parentUUID": "744335ee-e015-4b8c-a4af-38954dfb5f78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de511530-0c54-4767-8b8e-50debadaa53e",
            "d83a504c-6ec9-4bc0-b3c7-0a6395d391e6",
            "21be8b56-1019-4399-8858-98cbf3fe7a13",
            "607ba44c-d385-45ce-b811-9c395f115dbf",
            "c2032029-ea8d-4d7d-9e49-42d093c76126",
            "58e4fc6e-8a8d-41fa-85d3-da17e5feedbf"
          ],
          "failures": [
            "5f42b9bf-bab4-4437-bd6a-db6fc79e5c59"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8266,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "34fb9840-1e19-4028-a725-af4c869791a4",
          "title": "GraphQL API Testing",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\graphql-testing.ts",
          "file": "\\examples\\advanced\\graphql-testing.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"GraphQL API Testing\"",
              "fullTitle": "GraphQL API Testing \"before all\" hook in \"GraphQL API Testing\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create GraphQL client\nindex_1.restified.createGraphQLClient('github', {\n    endpoint: 'https://api.github.com/graphql',\n    headers: {\n        'Authorization': 'Bearer {{$env.GITHUB_TOKEN}}',\n        'User-Agent': 'RestifiedTS-GraphQL-Test'\n    },\n    timeout: 15000\n});\n// Set test variables\nindex_1.restified.setGlobalVariable('owner', 'facebook');\nindex_1.restified.setGlobalVariable('repo', 'react');",
              "err": {},
              "uuid": "2cbb3e9c-6ecc-411f-bb5a-67fcf6675635",
              "parentUUID": "34fb9840-1e19-4028-a725-af4c869791a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"GraphQL API Testing\"",
              "fullTitle": "GraphQL API Testing \"after all\" hook in \"GraphQL API Testing\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await index_1.restified.cleanup();",
              "err": {},
              "uuid": "d7439cba-f802-4062-9f31-1d5668c94454",
              "parentUUID": "34fb9840-1e19-4028-a725-af4c869791a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3aae09d5-df97-4f18-b25d-ada8f1c7e94f",
              "title": "GraphQL Queries",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\graphql-testing.ts",
              "file": "\\examples\\advanced\\graphql-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute basic repository query",
                  "fullTitle": "GraphQL API Testing GraphQL Queries should execute basic repository query",
                  "timedOut": false,
                  "duration": 3082,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst query = `\n        query GetRepository($owner: String!, $name: String!) {\n          repository(owner: $owner, name: $name) {\nname\ndescription\nstargazerCount\nforkCount\nlanguage {\n  name\n}\nowner {\n  login\n}\n          }\n        }\n      `;\nconst response = await client.query(query, {\n    owner: '{{owner}}',\n    name: '{{repo}}'\n});\n// Validate GraphQL response structure\n(0, chai_1.expect)(response.status).to.equal(200);\n(0, chai_1.expect)(response.data.data).to.exist;\n(0, chai_1.expect)(response.data.errors).to.not.exist;\nconst repository = response.data.data.repository;\n(0, chai_1.expect)(repository.name).to.equal('react');\n(0, chai_1.expect)(repository.owner.login).to.equal('facebook');\n(0, chai_1.expect)(repository.stargazerCount).to.be.a('number');\n(0, chai_1.expect)(repository.stargazerCount).to.be.greaterThan(100000);\n// Extract repository data\nindex_1.restified.setGlobalVariable('repoStars', repository.stargazerCount);\nindex_1.restified.setGlobalVariable('repoDescription', repository.description);",
                  "err": {
                    "message": "AxiosError: Request failed with status code 401",
                    "estack": "AxiosError: Request failed with status code 401\n    at settle (node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (node_modules\\axios\\lib\\adapters\\http.js:599:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async GraphQLClient.executeWithRetry (src\\core\\clients\\GraphQLClient.ts:119:24)\n    at async GraphQLClient.query (src\\core\\clients\\GraphQLClient.ts:77:12)\n    at async Context.<anonymous> (examples\\advanced\\graphql-testing.ts:54:24)",
                    "diff": null
                  },
                  "uuid": "89c1c45f-5b9c-49a9-aa30-ea487ff97aa1",
                  "parentUUID": "3aae09d5-df97-4f18-b25d-ada8f1c7e94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle GraphQL variables and fragments",
                  "fullTitle": "GraphQL API Testing GraphQL Queries should handle GraphQL variables and fragments",
                  "timedOut": false,
                  "duration": 2897,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst query = `\n        fragment RepositoryInfo on Repository {\n          name\n          description\n          stargazerCount\n          issues(states: OPEN) {\ntotalCount\n          }\n          pullRequests(states: OPEN) {\ntotalCount\n          }\n        }\n\n        query GetRepositoryDetails($owner: String!, $name: String!) {\n          repository(owner: $owner, name: $name) {\n...RepositoryInfo\nlanguages(first: 5) {\n  edges {\n    node {\n      name\n    }\n    size\n  }\n}\n          }\n        }\n      `;\nconst response = await client.query(query, {\n    owner: '{{owner}}',\n    name: '{{repo}}'\n});\n(0, chai_1.expect)(response.status).to.equal(200);\n(0, chai_1.expect)(response.data.data.repository.languages.edges).to.be.an('array');\n(0, chai_1.expect)(response.data.data.repository.issues.totalCount).to.be.a('number');\n(0, chai_1.expect)(response.data.data.repository.pullRequests.totalCount).to.be.a('number');",
                  "err": {
                    "message": "AxiosError: Request failed with status code 401",
                    "estack": "AxiosError: Request failed with status code 401\n    at settle (node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (node_modules\\axios\\lib\\adapters\\http.js:599:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async GraphQLClient.executeWithRetry (src\\core\\clients\\GraphQLClient.ts:119:24)\n    at async GraphQLClient.query (src\\core\\clients\\GraphQLClient.ts:77:12)\n    at async Context.<anonymous> (examples\\advanced\\graphql-testing.ts:106:24)",
                    "diff": null
                  },
                  "uuid": "db8a334f-fd15-438a-97cf-07550230f5a2",
                  "parentUUID": "3aae09d5-df97-4f18-b25d-ada8f1c7e94f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate GraphQL errors",
                  "fullTitle": "GraphQL API Testing GraphQL Queries should validate GraphQL errors",
                  "timedOut": false,
                  "duration": 2875,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\n// Invalid query - missing required field\nconst invalidQuery = `\n        query InvalidQuery {\n          repository {\nname\n          }\n        }\n      `;\nconst response = await client.query(invalidQuery);\n(0, chai_1.expect)(response.status).to.equal(200); // GraphQL returns 200 even for errors\n(0, chai_1.expect)(response.data.errors).to.exist;\n(0, chai_1.expect)(response.data.errors).to.be.an('array');\n(0, chai_1.expect)(response.data.errors[0].message).to.include('Field \\'repository\\' of type \\'Repository\\' must have a selection of subfields');",
                  "err": {
                    "message": "AxiosError: Request failed with status code 401",
                    "estack": "AxiosError: Request failed with status code 401\n    at settle (node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (node_modules\\axios\\lib\\adapters\\http.js:599:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async GraphQLClient.executeWithRetry (src\\core\\clients\\GraphQLClient.ts:119:24)\n    at async GraphQLClient.query (src\\core\\clients\\GraphQLClient.ts:77:12)\n    at async Context.<anonymous> (examples\\advanced\\graphql-testing.ts:129:24)",
                    "diff": null
                  },
                  "uuid": "18ee6cfb-5840-40cd-afd5-dc818a8b1511",
                  "parentUUID": "3aae09d5-df97-4f18-b25d-ada8f1c7e94f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "89c1c45f-5b9c-49a9-aa30-ea487ff97aa1",
                "db8a334f-fd15-438a-97cf-07550230f5a2",
                "18ee6cfb-5840-40cd-afd5-dc818a8b1511"
              ],
              "pending": [],
              "skipped": [],
              "duration": 8854,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "cdc6b713-befc-4c01-9ae1-7740e6b0673a",
              "title": "GraphQL Introspection",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\graphql-testing.ts",
              "file": "\\examples\\advanced\\graphql-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should introspect GraphQL schema",
                  "fullTitle": "GraphQL API Testing GraphQL Introspection should introspect GraphQL schema",
                  "timedOut": false,
                  "duration": 2927,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst response = await client.introspect();\n(0, chai_1.expect)(response.status).to.equal(200);\n(0, chai_1.expect)(response.data.data.__schema).to.exist;\n(0, chai_1.expect)(response.data.data.__schema.types).to.be.an('array');\n(0, chai_1.expect)(response.data.data.__schema.queryType.name).to.equal('Query');\n// Find Repository type\nconst repositoryType = response.data.data.__schema.types.find((type) => type.name === 'Repository');\n(0, chai_1.expect)(repositoryType).to.exist;\n(0, chai_1.expect)(repositoryType.fields).to.be.an('array');",
                  "err": {
                    "message": "AxiosError: Request failed with status code 401",
                    "estack": "AxiosError: Request failed with status code 401\n    at settle (node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (node_modules\\axios\\lib\\adapters\\http.js:599:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async GraphQLClient.executeWithRetry (src\\core\\clients\\GraphQLClient.ts:119:24)\n    at async GraphQLClient.query (src\\core\\clients\\GraphQLClient.ts:77:12)\n    at async Context.<anonymous> (examples\\advanced\\graphql-testing.ts:142:24)",
                    "diff": null
                  },
                  "uuid": "b155e1af-a367-4ddf-8f2f-4ca5fede3aa5",
                  "parentUUID": "cdc6b713-befc-4c01-9ae1-7740e6b0673a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b155e1af-a367-4ddf-8f2f-4ca5fede3aa5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2927,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "a7c7c243-7c4f-42b5-a0eb-fac1c47f00fd",
              "title": "GraphQL Query Validation",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\graphql-testing.ts",
              "file": "\\examples\\advanced\\graphql-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate query syntax",
                  "fullTitle": "GraphQL API Testing GraphQL Query Validation should validate query syntax",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst validQuery = `\n        query ValidQuery($owner: String!) {\n          repository(owner: $owner, name: \"react\") {\nname\n          }\n        }\n      `;\nconst validation = client.validateQuery(validQuery);\n(0, chai_1.expect)(validation.valid).to.be.true;\n(0, chai_1.expect)(validation.errors).to.be.empty;",
                  "err": {},
                  "uuid": "7d7127a8-1971-48c3-a56b-d032325871ea",
                  "parentUUID": "a7c7c243-7c4f-42b5-a0eb-fac1c47f00fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should detect invalid query syntax",
                  "fullTitle": "GraphQL API Testing GraphQL Query Validation should detect invalid query syntax",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst invalidQuery = `\n        query InvalidQuery {\n          repository(owner: $owner, name: \"react\" {\nname\n          }\n        }\n      `;\nconst validation = client.validateQuery(invalidQuery);\n(0, chai_1.expect)(validation.valid).to.be.false;\n(0, chai_1.expect)(validation.errors).to.not.be.empty;",
                  "err": {
                    "message": "AssertionError: expected true to be false",
                    "estack": "AssertionError: expected true to be false\n    at Context.<anonymous> (examples\\advanced\\graphql-testing.ts:187:37)\n    at processImmediate (node:internal/timers:485:21)",
                    "diff": "- true\n+ false\n"
                  },
                  "uuid": "4664b21a-1dbc-4b6a-b75c-a0483d30ffad",
                  "parentUUID": "a7c7c243-7c4f-42b5-a0eb-fac1c47f00fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d7127a8-1971-48c3-a56b-d032325871ea"
              ],
              "failures": [
                "4664b21a-1dbc-4b6a-b75c-a0483d30ffad"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "41c6bba7-743f-491d-80c8-8316f3d5b67b",
              "title": "Performance Testing",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\graphql-testing.ts",
              "file": "\\examples\\advanced\\graphql-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should measure GraphQL query performance",
                  "fullTitle": "GraphQL API Testing Performance Testing should measure GraphQL query performance",
                  "timedOut": false,
                  "duration": 2892,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getGraphQLClient('github');\nconst startTime = Date.now();\nconst query = `\n        query QuickQuery {\n          viewer {\nlogin\n          }\n        }\n      `;\nconst response = await client.query(query);\nconst endTime = Date.now();\nconst duration = endTime - startTime;\n(0, chai_1.expect)(response.status).to.equal(200);\n(0, chai_1.expect)(duration).to.be.lessThan(5000); // Should complete within 5 seconds\nconsole.log(`GraphQL query completed in ${duration}ms`);",
                  "err": {
                    "message": "AxiosError: Request failed with status code 401",
                    "estack": "AxiosError: Request failed with status code 401\n    at settle (node_modules\\axios\\lib\\core\\settle.js:19:12)\n    at IncomingMessage.handleStreamEnd (node_modules\\axios\\lib\\adapters\\http.js:599:11)\n    at IncomingMessage.emit (node:events:530:35)\n    at IncomingMessage.emit (node:domain:489:12)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at processTicksAndRejections (node:internal/process/task_queues:90:21)\n    at Axios.request (node_modules\\axios\\lib\\core\\Axios.js:45:41)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async GraphQLClient.executeWithRetry (src\\core\\clients\\GraphQLClient.ts:119:24)\n    at async GraphQLClient.query (src\\core\\clients\\GraphQLClient.ts:77:12)\n    at async Context.<anonymous> (examples\\advanced\\graphql-testing.ts:206:24)",
                    "diff": null
                  },
                  "uuid": "29b8e6d3-f63f-4dd6-bcbf-2bcba817e2b1",
                  "parentUUID": "41c6bba7-743f-491d-80c8-8316f3d5b67b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "29b8e6d3-f63f-4dd6-bcbf-2bcba817e2b1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 2892,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f77500e1-823c-4106-9084-322209769193",
          "title": "JSON Fixture Testing",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
          "file": "\\examples\\advanced\\json-fixture-testing.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"JSON Fixture Testing\"",
              "fullTitle": "JSON Fixture Testing \"before all\" hook in \"JSON Fixture Testing\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Setup test fixtures directory\nconst fixturesDir = path.join(__dirname, 'fixtures');\nif (!fs.existsSync(fixturesDir)) {\n    fs.mkdirSync(fixturesDir, { recursive: true });\n}\n// Create sample fixture files\nconst userFixture = {\n    id: \"{{userId}}\",\n    name: \"{{$faker.person.fullName}}\",\n    email: \"{{$faker.internet.email}}\",\n    age: \"{{$random.number(18,65)}}\",\n    address: {\n        street: \"{{$faker.address.streetAddress}}\",\n        city: \"{{$faker.address.city}}\",\n        country: \"{{country}}\",\n        coordinates: {\n            lat: \"{{$faker.address.latitude}}\",\n            lng: \"{{$faker.address.longitude}}\"\n        }\n    },\n    preferences: {\n        theme: \"{{userTheme}}\",\n        notifications: true,\n        language: \"{{$env.DEFAULT_LANGUAGE}}\",\n        metadata: {\n            createdAt: \"{{$date.now}}\",\n            version: \"{{$util.guid}}\",\n            source: \"restifiedts-test\"\n        }\n    },\n    tags: [\"{{tag1}}\", \"{{tag2}}\", \"premium\"]\n};\nconst orderFixture = {\n    orderId: \"{{$random.uuid}}\",\n    customerId: \"{{userId}}\",\n    items: [\n        {\n            productId: \"{{productId1}}\",\n            name: \"{{$faker.commerce.product}}\",\n            price: \"{{$random.number(10,1000)}}\",\n            quantity: \"{{quantity1}}\"\n        },\n        {\n            productId: \"{{productId2}}\",\n            name: \"{{$faker.commerce.product}}\",\n            price: \"{{$random.number(10,1000)}}\",\n            quantity: \"{{quantity2}}\"\n        }\n    ],\n    shipping: {\n        address: \"{{shippingAddress}}\",\n        method: \"{{shippingMethod}}\",\n        trackingId: \"{{$util.base64encode(track-{{$random.uuid}})}}\"\n    },\n    payment: {\n        method: \"credit_card\",\n        cardLast4: \"{{$random.number(1000,9999)}}\",\n        amount: \"{{totalAmount}}\",\n        currency: \"{{$env.DEFAULT_CURRENCY}}\",\n        transactionId: \"{{$util.guid}}\"\n    },\n    timestamps: {\n        created: \"{{$date.now}}\",\n        updated: \"{{$date.now}}\",\n        estimatedDelivery: \"{{deliveryDate}}\"\n    }\n};\n// Write fixtures to files\nfs.writeFileSync(path.join(fixturesDir, 'user.json'), JSON.stringify(userFixture, null, 2));\nfs.writeFileSync(path.join(fixturesDir, 'order.json'), JSON.stringify(orderFixture, null, 2));\n// Set up global variables\nindex_1.restified.setGlobalVariables({\n    userId: 'user-12345',\n    country: 'United States',\n    userTheme: 'dark',\n    tag1: 'vip',\n    tag2: 'beta-tester'\n});\n// Set up environment variables for testing\nprocess.env.DEFAULT_LANGUAGE = 'en-US';\nprocess.env.DEFAULT_CURRENCY = 'USD';",
              "err": {},
              "uuid": "dfad8731-d956-4c6f-92bd-cdf8cbed69cd",
              "parentUUID": "f77500e1-823c-4106-9084-322209769193",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"JSON Fixture Testing\"",
              "fullTitle": "JSON Fixture Testing \"after all\" hook in \"JSON Fixture Testing\"",
              "timedOut": false,
              "duration": 82,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await index_1.restified.cleanup();\n// Cleanup fixtures\nconst fixturesDir = path.join(__dirname, 'fixtures');\nif (fs.existsSync(fixturesDir)) {\n    fs.rmSync(fixturesDir, { recursive: true, force: true });\n}",
              "err": {},
              "uuid": "f00e9b9d-2d5e-472d-8fcb-fd351ccffe45",
              "parentUUID": "f77500e1-823c-4106-9084-322209769193",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c199c7d4-3c90-4a41-a6ec-4ad6b2c67ad4",
              "title": "Basic JSON Variable Resolution",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
              "file": "\\examples\\advanced\\json-fixture-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should resolve simple variables in JSON objects",
                  "fullTitle": "JSON Fixture Testing Basic JSON Variable Resolution should resolve simple variables in JSON objects",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    userId: '{{userId}}',\n    name: '{{userName}}',\n    active: true,\n    count: 42\n};\nindex_1.restified.setLocalVariable('userName', 'John Doe');\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(resolved.userId).to.equal('user-12345');\n(0, chai_1.expect)(resolved.name).to.equal('John Doe');\n(0, chai_1.expect)(resolved.active).to.be.true;\n(0, chai_1.expect)(resolved.count).to.equal(42);",
                  "err": {},
                  "uuid": "094d0d45-1ace-41a5-a48d-7ed87b3163d5",
                  "parentUUID": "c199c7d4-3c90-4a41-a6ec-4ad6b2c67ad4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve nested variables in complex objects",
                  "fullTitle": "JSON Fixture Testing Basic JSON Variable Resolution should resolve nested variables in complex objects",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    user: {\n        profile: {\n            id: '{{userId}}',\n            settings: {\n                theme: '{{userTheme}}',\n                lang: '{{$env.DEFAULT_LANGUAGE}}'\n            }\n        }\n    },\n    metadata: {\n        timestamp: '{{$date.timestamp}}',\n        uuid: '{{$random.uuid}}'\n    }\n};\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(resolved.user.profile.id).to.equal('user-12345');\n(0, chai_1.expect)(resolved.user.profile.settings.theme).to.equal('dark');\n(0, chai_1.expect)(resolved.user.profile.settings.lang).to.equal('en-US');\n(0, chai_1.expect)(resolved.metadata.timestamp).to.be.a('string');\n(0, chai_1.expect)(resolved.metadata.uuid).to.match(/^[0-9a-f-]+$/);",
                  "err": {},
                  "uuid": "bb34c77d-c91a-450a-9645-da0f3dc71271",
                  "parentUUID": "c199c7d4-3c90-4a41-a6ec-4ad6b2c67ad4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve variables in arrays",
                  "fullTitle": "JSON Fixture Testing Basic JSON Variable Resolution should resolve variables in arrays",
                  "timedOut": false,
                  "duration": 1603,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    users: ['{{userId}}', '{{$random.uuid}}'],\n    tags: ['{{tag1}}', '{{tag2}}', 'static-tag'],\n    coordinates: ['{{$faker.address.latitude}}', '{{$faker.address.longitude}}']\n};\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(resolved.users[0]).to.equal('user-12345');\n(0, chai_1.expect)(resolved.users[1]).to.match(/^[0-9a-f-]+$/);\n(0, chai_1.expect)(resolved.tags).to.deep.equal(['vip', 'beta-tester', 'static-tag']);\n(0, chai_1.expect)(resolved.coordinates).to.have.length(2);",
                  "err": {},
                  "uuid": "8a5a3734-0642-49f2-95df-36ba7aaaf1a9",
                  "parentUUID": "c199c7d4-3c90-4a41-a6ec-4ad6b2c67ad4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "094d0d45-1ace-41a5-a48d-7ed87b3163d5",
                "bb34c77d-c91a-450a-9645-da0f3dc71271",
                "8a5a3734-0642-49f2-95df-36ba7aaaf1a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1604,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "f55324a8-3d74-44ae-8041-fd62cd5ca427",
              "title": "Built-in Function Resolution",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
              "file": "\\examples\\advanced\\json-fixture-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should resolve faker functions",
                  "fullTitle": "JSON Fixture Testing Built-in Function Resolution should resolve faker functions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    name: '{{$faker.person.fullName}}',\n    email: '{{$faker.internet.email}}',\n    product: '{{$faker.commerce.product}}'\n};\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(resolved.name).to.be.a('string');\n(0, chai_1.expect)(resolved.email).to.include('@');\n(0, chai_1.expect)(resolved.product).to.be.a('string');",
                  "err": {},
                  "uuid": "97283e0e-1b17-42c5-a4ce-4521bae20652",
                  "parentUUID": "f55324a8-3d74-44ae-8041-fd62cd5ca427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve random utility functions",
                  "fullTitle": "JSON Fixture Testing Built-in Function Resolution should resolve random utility functions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    uuid: '{{$random.uuid}}',\n    number: '{{$random.number}}',\n    rangeNumber: '{{$random.number(1,10)}}',\n    string: '{{$random.string}}'\n};\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(resolved.uuid).to.match(/^[0-9a-f-]+$/);\n(0, chai_1.expect)(parseInt(resolved.number)).to.be.a('number');\n(0, chai_1.expect)(parseInt(resolved.rangeNumber)).to.be.within(1, 10);\n(0, chai_1.expect)(resolved.string).to.be.a('string');",
                  "err": {},
                  "uuid": "e513e806-60e9-4f69-b2c8-3037b1357740",
                  "parentUUID": "f55324a8-3d74-44ae-8041-fd62cd5ca427",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve date and utility functions",
                  "fullTitle": "JSON Fixture Testing Built-in Function Resolution should resolve date and utility functions",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const template = {\n    now: '{{$date.now}}',\n    timestamp: '{{$date.timestamp}}',\n    today: '{{$date.today}}',\n    guid: '{{$util.guid}}',\n    encoded: '{{$util.base64encode(test-data)}}'\n};\nconst resolved = index_1.restified.resolveVariables(template);\n(0, chai_1.expect)(new Date(resolved.now)).to.be.a('date');\n(0, chai_1.expect)(parseInt(resolved.timestamp)).to.be.a('number');\n(0, chai_1.expect)(resolved.today).to.match(/^\\d{4}-\\d{2}-\\d{2}$/);\n(0, chai_1.expect)(resolved.guid).to.match(/^[0-9a-f-]+$/);\n(0, chai_1.expect)(resolved.encoded).to.be.a('string');",
                  "err": {},
                  "uuid": "f39b860a-0fec-4ff5-809d-ba2b6bcc3160",
                  "parentUUID": "f55324a8-3d74-44ae-8041-fd62cd5ca427",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97283e0e-1b17-42c5-a4ce-4521bae20652",
                "e513e806-60e9-4f69-b2c8-3037b1357740",
                "f39b860a-0fec-4ff5-809d-ba2b6bcc3160"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "aebddbdb-bb48-483d-999e-15671ce7bbba",
              "title": "JSON Fixture Loading",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
              "file": "\\examples\\advanced\\json-fixture-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load and resolve user fixture",
                  "fullTitle": "JSON Fixture Testing JSON Fixture Loading should load and resolve user fixture",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fixturePath = path.join(__dirname, 'fixtures', 'user.json');\nconst userData = index_1.restified.loadJsonFixture(fixturePath);\n(0, chai_1.expect)(userData.id).to.equal('user-12345');\n(0, chai_1.expect)(userData.name).to.be.a('string');\n(0, chai_1.expect)(userData.email).to.include('@');\n(0, chai_1.expect)(parseInt(userData.age)).to.be.within(18, 65);\n(0, chai_1.expect)(userData.address.country).to.equal('United States');\n(0, chai_1.expect)(userData.preferences.theme).to.equal('dark');\n(0, chai_1.expect)(userData.preferences.language).to.equal('en-US');\n(0, chai_1.expect)(userData.tags).to.deep.equal(['vip', 'beta-tester', 'premium']);",
                  "err": {},
                  "uuid": "95bd14ca-c0ce-40ea-8d24-808c19f7c335",
                  "parentUUID": "aebddbdb-bb48-483d-999e-15671ce7bbba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should load and resolve order fixture with cross-references",
                  "fullTitle": "JSON Fixture Testing JSON Fixture Loading should load and resolve order fixture with cross-references",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Set local variables for order\nindex_1.restified.setLocalVariables({\n    productId1: 'prod-001',\n    productId2: 'prod-002',\n    quantity1: '2',\n    quantity2: '1',\n    shippingAddress: '123 Main St, City, State',\n    shippingMethod: 'express',\n    totalAmount: '149.99',\n    deliveryDate: '2024-01-15'\n});\nconst fixturePath = path.join(__dirname, 'fixtures', 'order.json');\nconst orderData = index_1.restified.loadJsonFixture(fixturePath);\n(0, chai_1.expect)(orderData.customerId).to.equal('user-12345'); // From global variable\n(0, chai_1.expect)(orderData.orderId).to.match(/^[0-9a-f-]+$/);\n(0, chai_1.expect)(orderData.items).to.have.length(2);\n(0, chai_1.expect)(orderData.items[0].productId).to.equal('prod-001');\n(0, chai_1.expect)(orderData.items[0].quantity).to.equal('2');\n(0, chai_1.expect)(orderData.shipping.address).to.equal('123 Main St, City, State');\n(0, chai_1.expect)(orderData.payment.currency).to.equal('USD');\n(0, chai_1.expect)(orderData.payment.amount).to.equal('149.99');",
                  "err": {},
                  "uuid": "883e9cde-f408-42f7-a668-2b9dc88fdbf5",
                  "parentUUID": "aebddbdb-bb48-483d-999e-15671ce7bbba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95bd14ca-c0ce-40ea-8d24-808c19f7c335",
                "883e9cde-f408-42f7-a668-2b9dc88fdbf5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "7dcbf2e9-d3b9-4194-9cd2-113e49111bca",
              "title": "JSON String Resolution",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
              "file": "\\examples\\advanced\\json-fixture-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should resolve variables in JSON strings",
                  "fullTitle": "JSON Fixture Testing JSON String Resolution should resolve variables in JSON strings",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const jsonString = `{\n        \"userId\": \"{{userId}}\",\n        \"profile\": {\n          \"name\": \"{{$faker.person.fullName}}\",\n          \"settings\": {\n\"theme\": \"{{userTheme}}\",\n\"notifications\": true\n          }\n        },\n        \"timestamp\": \"{{$date.now}}\"\n      }`;\nconst resolved = index_1.restified.resolveJsonString(jsonString);\n(0, chai_1.expect)(resolved.userId).to.equal('user-12345');\n(0, chai_1.expect)(resolved.profile.name).to.be.a('string');\n(0, chai_1.expect)(resolved.profile.settings.theme).to.equal('dark');\n(0, chai_1.expect)(resolved.profile.settings.notifications).to.be.true;\n(0, chai_1.expect)(new Date(resolved.timestamp)).to.be.a('date');",
                  "err": {},
                  "uuid": "5151857c-6778-4e48-a971-a7fa41537eb2",
                  "parentUUID": "7dcbf2e9-d3b9-4194-9cd2-113e49111bca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5151857c-6778-4e48-a971-a7fa41537eb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            },
            {
              "uuid": "685dc53e-25de-406b-8086-168bb3c7fd41",
              "title": "API Testing with Dynamic Fixtures",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\json-fixture-testing.ts",
              "file": "\\examples\\advanced\\json-fixture-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use resolved fixtures in API requests",
                  "fullTitle": "JSON Fixture Testing API Testing with Dynamic Fixtures should use resolved fixtures in API requests",
                  "timedOut": false,
                  "duration": 630,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Create dynamic user data\nconst userTemplate = {\n    name: '{{$faker.person.fullName}}',\n    email: '{{$faker.internet.email}}',\n    age: '{{$random.number(18,65)}}',\n    preferences: {\n        theme: '{{userTheme}}',\n        language: '{{$env.DEFAULT_LANGUAGE}}'\n    }\n};\nconst userData = index_1.restified.resolveVariables(userTemplate);\n// Use in API request\nconst response = await index_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .post('/users', userData)\n    .execute();\nawait response\n    .statusCode(201)\n    .execute();\n// Extract and validate\n(0, chai_1.expect)(userData.name).to.be.a('string');\n(0, chai_1.expect)(userData.email).to.include('@');\n(0, chai_1.expect)(userData.preferences.theme).to.equal('dark');\n(0, chai_1.expect)(userData.preferences.language).to.equal('en-US');",
                  "err": {},
                  "uuid": "1e86fd01-7e8e-4811-a7dd-539d87d4f523",
                  "parentUUID": "685dc53e-25de-406b-8086-168bb3c7fd41",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle complex nested fixture scenarios",
                  "fullTitle": "JSON Fixture Testing API Testing with Dynamic Fixtures should handle complex nested fixture scenarios",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Multi-level variable resolution\nindex_1.restified.setLocalVariable('baseUrl', 'https://api.example.com');\nindex_1.restified.setLocalVariable('version', 'v2');\nconst apiConfig = {\n    endpoints: {\n        users: '{{baseUrl}}/{{version}}/users',\n        orders: '{{baseUrl}}/{{version}}/orders/{{userId}}'\n    },\n    headers: {\n        'Authorization': 'Bearer {{authToken}}',\n        'User-Agent': 'RestifiedTS/{{$util.guid}}',\n        'X-Request-ID': '{{$random.uuid}}'\n    },\n    timeout: '{{requestTimeout}}'\n};\nindex_1.restified.setLocalVariables({\n    authToken: 'jwt-token-12345',\n    requestTimeout: '30000'\n});\nconst resolved = index_1.restified.resolveVariables(apiConfig);\n(0, chai_1.expect)(resolved.endpoints.users).to.equal('https://api.example.com/v2/users');\n(0, chai_1.expect)(resolved.endpoints.orders).to.equal('https://api.example.com/v2/orders/user-12345');\n(0, chai_1.expect)(resolved.headers.Authorization).to.equal('Bearer jwt-token-12345');\n(0, chai_1.expect)(resolved.headers['User-Agent']).to.include('RestifiedTS/');\n(0, chai_1.expect)(resolved.timeout).to.equal('30000');",
                  "err": {},
                  "uuid": "c63ae8c5-6198-49c6-a19b-7fc51c5f17f4",
                  "parentUUID": "685dc53e-25de-406b-8086-168bb3c7fd41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e86fd01-7e8e-4811-a7dd-539d87d4f523",
                "c63ae8c5-6198-49c6-a19b-7fc51c5f17f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 631,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
          "title": "Multi-Client Integration Tests",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\multi-client.ts",
          "file": "\\examples\\advanced\\multi-client.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should use pre-configured API client with global authentication",
              "fullTitle": "Multi-Client Integration Tests should use pre-configured API client with global authentication",
              "timedOut": false,
              "duration": 179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Multi-Client', 'API Client Test');\n// Use the pre-configured API client (no setup needed!)\n// Common headers are already included in the client configuration\nconst userResponse = await src_1.restified\n    .given()\n    .useClient('api')\n    .header('Authorization', `Bearer {{globalAuthToken}}`)\n    .when()\n    .get('/users/{{globalUserId}}')\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .jsonPath('$.id', src_1.restified.getVariable('globalUserId'))\n    .jsonPath('$.email', src_1.restified.getVariable('globalUserEmail'))\n    .extract('$.company.name', 'userCompany')\n    .execute();\nconsole.log('üè¢ User company:', src_1.restified.getVariable('userCompany'));",
              "err": {
                "message": "Error: Assertions failed:\nJSONPath '$.email' expected 'test@enterprise.com', got 'Sincere@april.biz'",
                "estack": "Error: Assertions failed:\nJSONPath '$.email' expected 'test@enterprise.com', got 'Sincere@april.biz'\n    at ThenStep.execute (src\\core\\dsl\\then.core.ts:220:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (examples\\advanced\\multi-client.ts:28:5)",
                "diff": null
              },
              "uuid": "0c6d4e41-91fe-457f-8474-d76fb5afb416",
              "parentUUID": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use testing utilities client with global config",
              "fullTitle": "Multi-Client Integration Tests should use testing utilities client with global config",
              "timedOut": false,
              "duration": 1352,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Multi-Client', 'Test Utils Client');\n// Use the pre-configured test utilities client\n// Common headers are already included in the client configuration\nconst validationResponse = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .header('X-Global-Auth-Token', '{{globalAuthToken}}')\n    .when()\n    .get('/headers')\n    .execute();\nawait validationResponse\n    .statusCode(200)\n    .jsonPath('$.headers.X-Test-Suite', src_1.restified.getVariable('testSuite'))\n    .jsonPath('$.headers.X-Environment', src_1.restified.getVariable('testEnvironment'))\n    .custom((response) => {\n    return response.data.headers['X-Global-Auth-Token'] === src_1.restified.getVariable('globalAuthToken');\n}, 'Should have correct global auth token in headers')\n    .execute();",
              "err": {
                "message": "Error: Assertions failed:\nJSONPath '$.headers.X-Test-Suite' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\n$.headers.X-Test-Suite\n-----------^\nJSONPath '$.headers.X-Environment' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\n$.headers.X-Environment\n-----------^",
                "estack": "Error: Assertions failed:\nJSONPath '$.headers.X-Test-Suite' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\n$.headers.X-Test-Suite\n-----------^\nJSONPath '$.headers.X-Environment' evaluation failed: Error: Lexical error on line 1. Unrecognized text.\n$.headers.X-Environment\n-----------^\n    at ThenStep.execute (src\\core\\dsl\\then.core.ts:220:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (examples\\advanced\\multi-client.ts:51:5)",
                "diff": null
              },
              "uuid": "652713cc-1a3f-466f-9caa-1a1ab0b9a9c7",
              "parentUUID": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate cross-service workflow using global data",
              "fullTitle": "Multi-Client Integration Tests should demonstrate cross-service workflow using global data",
              "timedOut": false,
              "duration": 3084,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (!test_utils_1.GlobalTestUtils.shouldRunIntegrationTests()) {\n    console.log('‚è≠Ô∏è  Skipping integration test');\n    return;\n}\ntest_utils_1.GlobalTestUtils.logTestProgress('Multi-Client', 'Cross-Service Workflow');\n// Step 1: Use API service to get additional user data\n// Common headers are already included in the client configuration\nconst userResponse = await src_1.restified\n    .given()\n    .useClient('api')\n    .when()\n    .get('/users/2')\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .extract('$.name', 'workflowUserName')\n    .extract('$.website', 'workflowWebsite')\n    .execute();\n// Step 2: Use extracted data with test utilities service\n// Common headers are already included in the client configuration\nconst workflowResponse = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .when()\n    .post('/post', {\n    message: `User {{workflowUserName}} from {{workflowWebsite}}`,\n    globalUser: '{{globalUserEmail}}',\n    environment: '{{testEnvironment}}',\n    timestamp: new Date().toISOString()\n})\n    .execute();\nawait workflowResponse\n    .statusCode(200)\n    .jsonPath('$.json.globalUser', src_1.restified.getVariable('globalUserEmail'))\n    .jsonPath('$.json.environment', src_1.restified.getVariable('testEnvironment'))\n    .execute();\nconsole.log('‚úÖ Cross-service workflow completed successfully');",
              "err": {},
              "uuid": "16a3b898-3953-46d0-a55c-b41983c7e8fd",
              "parentUUID": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle service errors with global error patterns",
              "fullTitle": "Multi-Client Integration Tests should handle service errors with global error patterns",
              "timedOut": false,
              "duration": 753,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Multi-Client', 'Error Handling');\n// Test API service 404 error\n// Common headers are already included in the client configuration\nconst apiErrorResponse = await src_1.restified\n    .given()\n    .useClient('api')\n    .when()\n    .get('/users/99999')\n    .execute();\nawait apiErrorResponse\n    .statusCode(404)\n    .execute();\n// Test utilities service 500 error\n// Common headers are already included in the client configuration\nconst utilsErrorResponse = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .when()\n    .get('/status/500')\n    .execute();\nawait utilsErrorResponse\n    .statusCode(500)\n    .execute();\nconsole.log('‚úÖ Error handling validated across all services');",
              "err": {},
              "uuid": "eb197de1-bc92-4ec9-9cdd-586a7c2256fa",
              "parentUUID": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate environment-aware testing",
              "fullTitle": "Multi-Client Integration Tests should demonstrate environment-aware testing",
              "timedOut": false,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Multi-Client', 'Environment Testing');\nconst environment = src_1.restified.getVariable('testEnvironment');\nconst apiVersion = src_1.restified.getVariable('apiVersion');\n// Test shows how same test adapts to different environments\nconst environmentResponse = await src_1.restified\n    .given()\n    .useClient('api')\n    .header('X-Environment', environment)\n    .header('X-API-Version', apiVersion)\n    .header('X-Global-User', '{{globalUserEmail}}')\n    .when()\n    .get('/posts/1')\n    .execute();\nawait environmentResponse\n    .statusCode(200)\n    .jsonPath('$.id', 1)\n    .custom((response) => {\n    const hasTitle = response.data.hasOwnProperty('title');\n    const hasBody = response.data.hasOwnProperty('body');\n    return hasTitle && hasBody;\n}, 'Response should have expected structure for all environments')\n    .execute();\nconsole.log(`‚úÖ Environment-specific test completed for: ${environment}`);",
              "err": {},
              "uuid": "6e094df0-d67b-44e4-b76b-5f1cc495a442",
              "parentUUID": "242b862e-e31e-4f3d-a0dc-af8a6d7e03c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16a3b898-3953-46d0-a55c-b41983c7e8fd",
            "eb197de1-bc92-4ec9-9cdd-586a7c2256fa",
            "6e094df0-d67b-44e4-b76b-5f1cc495a442"
          ],
          "failures": [
            "0c6d4e41-91fe-457f-8474-d76fb5afb416",
            "652713cc-1a3f-466f-9caa-1a1ab0b9a9c7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ef00da90-2d60-45ab-8632-aad25b69c875",
          "title": "Response Store Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\response-store.ts",
          "file": "\\examples\\advanced\\response-store.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should store and retrieve responses using global client",
              "fullTitle": "Response Store Example should store and retrieve responses using global client",
              "timedOut": false,
              "duration": 368,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Response Store', 'Store and Retrieve');\n// Use pre-configured API client from global setup\nconst userResponse = await src_1.restified\n    .given()\n    .useClient('api') // Global client\n    .when()\n    .get('/users/{{globalUserId}}') // Global user ID\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .execute();\n// Store the response with a custom key\nsrc_1.restified.storeResponse('user1-data');\n// Later, retrieve the stored response\nconst storedResponse = src_1.restified.getStoredResponse('user1-data');\n// Verify the stored response exists and has expected data\nif (storedResponse) {\n    console.log('Retrieved stored response for user:', storedResponse.data.name);\n    // You can perform additional assertions on stored responses\n    await src_1.restified\n        .given()\n        .baseURL('https://jsonplaceholder.typicode.com')\n        .when()\n        .get('/users/1')\n        .execute()\n        .then(response => response\n        .statusCode(200)\n        .custom((response) => {\n        return response.data.id === storedResponse.data.id;\n    }, 'Current response should match stored response ID')\n        .execute());\n}",
              "err": {},
              "uuid": "d2996447-92e8-4f03-8b2a-ff5cf4ee21bf",
              "parentUUID": "ef00da90-2d60-45ab-8632-aad25b69c875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle multiple stored responses",
              "fullTitle": "Response Store Example should handle multiple stored responses",
              "timedOut": false,
              "duration": 545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Store responses for multiple users\nconst users = [1, 2, 3];\nfor (const userId of users) {\n    const response = await src_1.restified\n        .given()\n        .baseURL('https://jsonplaceholder.typicode.com')\n        .when()\n        .get(`/users/${userId}`)\n        .execute();\n    await response.statusCode(200).execute();\n    // Store each response with a unique key\n    src_1.restified.storeResponse(`user-${userId}`);\n}\n// Retrieve and validate all stored responses\nfor (const userId of users) {\n    const storedResponse = src_1.restified.getStoredResponse(`user-${userId}`);\n    if (storedResponse) {\n        console.log(`User ${userId} stored data:`, {\n            id: storedResponse.data.id,\n            name: storedResponse.data.name,\n            email: storedResponse.data.email\n        });\n        // Validate stored response data\n        if (storedResponse.data.id !== userId) {\n            throw new Error(`Stored response ID mismatch for user ${userId}`);\n        }\n    }\n    else {\n        throw new Error(`No stored response found for user ${userId}`);\n    }\n}",
              "err": {},
              "uuid": "2ccae70a-2f45-4d08-9fac-bd916208dc3c",
              "parentUUID": "ef00da90-2d60-45ab-8632-aad25b69c875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should compare current response with stored response",
              "fullTitle": "Response Store Example should compare current response with stored response",
              "timedOut": false,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// First, get and store user data\nconst initialResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/users/1')\n    .execute();\nawait initialResponse.statusCode(200).execute();\nsrc_1.restified.storeResponse('initial-user-data');\n// Later, get the same data again\nconst currentResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/users/1')\n    .execute();\nawait currentResponse.statusCode(200).execute();\n// Compare with stored response\nconst storedResponse = src_1.restified.getStoredResponse('initial-user-data');\nif (storedResponse) {\n    await currentResponse\n        .custom((response) => {\n        return JSON.stringify(response.data) === JSON.stringify(storedResponse.data);\n    }, 'Current response should match stored response')\n        .execute();\n    console.log('‚úÖ Response comparison successful - data is consistent');\n}",
              "err": {},
              "uuid": "b1d5e2e0-23ec-4ec7-b0f7-5d7ab98e1720",
              "parentUUID": "ef00da90-2d60-45ab-8632-aad25b69c875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate response store with POST operations",
              "fullTitle": "Response Store Example should demonstrate response store with POST operations",
              "timedOut": false,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a new post\nconst createResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .contentType('application/json')\n    .when()\n    .post('/posts', {\n    title: 'Test Post for Response Store',\n    body: 'This post is used to demonstrate response store functionality',\n    userId: 1\n})\n    .execute();\nawait createResponse\n    .statusCode(201)\n    .extract('$.id', 'createdPostId')\n    .execute();\n// Store the creation response\nsrc_1.restified.storeResponse('post-creation');\n// Use stored response data in subsequent tests\nconst storedCreation = src_1.restified.getStoredResponse('post-creation');\nif (storedCreation) {\n    console.log('Created post stored with ID:', storedCreation.data.id);\n    console.log('Stored post title:', storedCreation.data.title);\n    // Verify the stored response contains expected data\n    if (!storedCreation.data.title.includes('Test Post')) {\n        throw new Error('Stored response does not contain expected title');\n    }\n    // Use stored response data for validation\n    const postId = storedCreation.data.id;\n    console.log(`Using stored post ID ${postId} for further operations`);\n}",
              "err": {},
              "uuid": "e5dd0d9a-3094-4d3f-a319-40904b9850b4",
              "parentUUID": "ef00da90-2d60-45ab-8632-aad25b69c875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle response store cleanup and management",
              "fullTitle": "Response Store Example should handle response store cleanup and management",
              "timedOut": false,
              "duration": 550,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Store multiple responses\nconst responses = [];\nfor (let i = 1; i <= 3; i++) {\n    const response = await src_1.restified\n        .given()\n        .baseURL('https://jsonplaceholder.typicode.com')\n        .when()\n        .get(`/posts/${i}`)\n        .execute();\n    await response.statusCode(200).execute();\n    src_1.restified.storeResponse(`post-${i}`);\n    responses.push(`post-${i}`);\n}\n// Verify all responses are stored\nfor (const key of responses) {\n    const stored = src_1.restified.getStoredResponse(key);\n    if (!stored) {\n        throw new Error(`Response ${key} was not properly stored`);\n    }\n}\nconsole.log('‚úÖ All responses properly stored and retrieved');\n// Response store will be automatically cleaned up in the after hook\n// when restified.cleanup() is called",
              "err": {},
              "uuid": "f8d90305-134a-4cb6-a242-0550166edd24",
              "parentUUID": "ef00da90-2d60-45ab-8632-aad25b69c875",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2996447-92e8-4f03-8b2a-ff5cf4ee21bf",
            "2ccae70a-2f45-4d08-9fac-bd916208dc3c",
            "b1d5e2e0-23ec-4ec7-b0f7-5d7ab98e1720",
            "e5dd0d9a-3094-4d3f-a319-40904b9850b4",
            "f8d90305-134a-4cb6-a242-0550166edd24"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "06d04a91-89ad-41ee-b87b-08f6435f9b45",
          "title": "Schema Validation Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\schema-validation.ts",
          "file": "\\examples\\advanced\\schema-validation.ts",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Schema Validation Example\"",
              "fullTitle": "Schema Validation Example \"after all\" hook in \"Schema Validation Example\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await src_1.restified.cleanup();",
              "err": {},
              "uuid": "4482ac86-d370-4809-93fa-89d95b92ad91",
              "parentUUID": "06d04a91-89ad-41ee-b87b-08f6435f9b45",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should validate user object against JSON schema using global client",
              "fullTitle": "Schema Validation Example should validate user object against JSON schema using global client",
              "timedOut": false,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Schema Validation', 'User Object Validation');\nconst response = await src_1.restified\n    .given()\n    .useClient('api') // Pre-configured global client\n    .when()\n    .get('/users/{{globalUserId}}') // Use global user ID\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonSchema(userSchema)\n    .jsonPath('$.name')\n    .jsonPath('$.email')\n    .execute();",
              "err": {},
              "uuid": "942d980c-b401-4b89-a944-f33a0896e602",
              "parentUUID": "06d04a91-89ad-41ee-b87b-08f6435f9b45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate array of posts against JSON schema",
              "fullTitle": "Schema Validation Example should validate array of posts against JSON schema",
              "timedOut": false,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Define JSON schema for array of posts\nconst postsArraySchema = {\n    type: 'array',\n    items: {\n        type: 'object',\n        required: ['id', 'title', 'body', 'userId'],\n        properties: {\n            id: { type: 'number' },\n            title: { type: 'string' },\n            body: { type: 'string' },\n            userId: { type: 'number' }\n        }\n    },\n    minItems: 1,\n    maxItems: 100\n};\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/posts')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonSchema(postsArraySchema)\n    .jsonPath('$[0].id')\n    .jsonPath('$[0].title')\n    .custom((response) => {\n    return Array.isArray(response.data) && response.data.length > 0;\n}, 'Response should be a non-empty array')\n    .execute();",
              "err": {},
              "uuid": "4c696de0-5b4f-43d6-b5d1-36162e5a4499",
              "parentUUID": "06d04a91-89ad-41ee-b87b-08f6435f9b45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle schema validation failure",
              "fullTitle": "Schema Validation Example should handle schema validation failure",
              "timedOut": false,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const strictUserSchema = {\n    type: 'object',\n    required: ['id', 'name', 'username', 'email', 'nonExistentField'],\n    properties: {\n        id: { type: 'number' },\n        name: { type: 'string' },\n        username: { type: 'string' },\n        email: { type: 'string', format: 'email' },\n        nonExistentField: { type: 'string' }\n    }\n};\ntry {\n    const response = await src_1.restified\n        .given()\n        .baseURL('https://jsonplaceholder.typicode.com')\n        .when()\n        .get('/users/1')\n        .execute();\n    await response\n        .statusCode(200)\n        .jsonSchema(strictUserSchema)\n        .execute();\n    throw new Error('Should have failed schema validation');\n}\ncatch (error) {\n    // Expected to fail due to missing required field\n    console.log('Schema validation correctly failed as expected');\n}",
              "err": {},
              "uuid": "1590fea6-f650-4bc8-8d0c-a89dd5ca6ef2",
              "parentUUID": "06d04a91-89ad-41ee-b87b-08f6435f9b45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "942d980c-b401-4b89-a944-f33a0896e602",
            "4c696de0-5b4f-43d6-b5d1-36162e5a4499",
            "1590fea6-f650-4bc8-8d0c-a89dd5ca6ef2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 638,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cb8912c9-02af-4e28-99d0-b243427ab61e",
          "title": "Variable Store Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\variable-store.ts",
          "file": "\\examples\\advanced\\variable-store.ts",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Variable Store Example\"",
              "fullTitle": "Variable Store Example \"before each\" hook in \"Variable Store Example\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Clear any existing local variables for clean tests\nsrc_1.restified.clearLocalVariables();",
              "err": {},
              "uuid": "149d1505-296c-4f5d-9760-dd0a5164e526",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Variable Store Example\"",
              "fullTitle": "Variable Store Example \"after all\" hook in \"Variable Store Example\"",
              "timedOut": false,
              "duration": 10,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await src_1.restified.cleanup();",
              "err": {},
              "uuid": "969ad3f7-63c5-4700-893f-06c25494f3ba",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should demonstrate global variable management",
              "fullTitle": "Variable Store Example should demonstrate global variable management",
              "timedOut": false,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set global variables\nsrc_1.restified.setGlobalVariable('expectedUserId', 1);\nsrc_1.restified.setGlobalVariable('testEnvironment', 'staging');\nsrc_1.restified.setGlobalVariable('requestSource', 'automated-test');\n// Set multiple global variables at once\nsrc_1.restified.setGlobalVariables({\n    'company': 'Restified Corp',\n    'version': '1.0.0',\n    'testSuite': 'variable-management'\n});\n// Make request and use global variables in headers/validation\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-Test-Environment', '{{testEnvironment}}')\n    .header('X-Company', '{{company}}')\n    .header('X-Request-Source', '{{requestSource}}')\n    .when()\n    .get('/users/{{expectedUserId}}')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.id', 1)\n    .execute();\n// Retrieve and verify global variables\nconsole.log('Global Variables Set:');\nconsole.log('- Expected User ID:', src_1.restified.getGlobalVariable('expectedUserId'));\nconsole.log('- Test Environment:', src_1.restified.getGlobalVariable('testEnvironment'));\nconsole.log('- Request Source:', src_1.restified.getGlobalVariable('requestSource'));\nconsole.log('- Company:', src_1.restified.getGlobalVariable('company'));\nconsole.log('- Version:', src_1.restified.getGlobalVariable('version'));\nconsole.log('- Test Suite:', src_1.restified.getGlobalVariable('testSuite'));\n// Get all global variables\nconst allGlobalVars = src_1.restified.getGlobalVariables();\nconsole.log('Total global variables:', Object.keys(allGlobalVars).length);",
              "err": {},
              "uuid": "fc62603f-afd7-4532-ad8f-0c9a857b3a73",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate local variable management",
              "fullTitle": "Variable Store Example should demonstrate local variable management",
              "timedOut": false,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set local variables (test-scoped)\nsrc_1.restified.setLocalVariable('testName', 'Variable Store Test');\nsrc_1.restified.setLocalVariable('requestId', Math.random().toString(36).substring(7));\nsrc_1.restified.setLocalVariable('expectedStatus', 200);\n// Set multiple local variables at once\nsrc_1.restified.setLocalVariables({\n    'currentTest': 'local-variables',\n    'timestamp': new Date().toISOString(),\n    'retryCount': 3\n});\n// Use local variables in requests\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-Request-Id', '{{requestId}}')\n    .header('X-Test-Name', '{{testName}}')\n    .when()\n    .get('/posts/1')\n    .execute();\nawait response\n    .statusCode(200)\n    .execute();\n// Retrieve local variables\nconsole.log('Local Variables:');\nconsole.log('- Test Name:', src_1.restified.getLocalVariable('testName'));\nconsole.log('- Request ID:', src_1.restified.getLocalVariable('requestId'));\nconsole.log('- Expected Status:', src_1.restified.getLocalVariable('expectedStatus'));\nconsole.log('- Current Test:', src_1.restified.getLocalVariable('currentTest'));\n// Get all local variables\nconst allLocalVars = src_1.restified.getLocalVariables();\nconsole.log('Total local variables:', Object.keys(allLocalVars).length);",
              "err": {},
              "uuid": "33eed66d-b6d3-48ad-8246-d263dfc8b353",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate extracted variable management",
              "fullTitle": "Variable Store Example should demonstrate extracted variable management",
              "timedOut": false,
              "duration": 353,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Make a request and extract multiple values\nconst userResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/users/1')\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .extract('$.id', 'userId')\n    .extract('$.name', 'userName')\n    .extract('$.email', 'userEmail')\n    .extract('$.address.city', 'userCity')\n    .extract('$.company.name', 'companyName')\n    .execute();\n// Use extracted variables in subsequent requests\nconst postsResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-User-Id', '{{userId}}')\n    .header('X-User-Name', '{{userName}}')\n    .when()\n    .get('/posts?userId={{userId}}')\n    .execute();\nawait postsResponse\n    .statusCode(200)\n    .custom((response) => {\n    const posts = response.data;\n    return Array.isArray(posts) && posts.length > 0;\n}, 'Should have posts for the user')\n    .custom((response) => {\n    const posts = response.data;\n    return posts.every(post => post.userId.toString() === src_1.restified.getVariable('userId').toString());\n}, 'All posts should belong to the extracted user ID')\n    .execute();\n// Display extracted variables\nconsole.log('Extracted Variables:');\nconsole.log('- User ID:', src_1.restified.getVariable('userId'));\nconsole.log('- User Name:', src_1.restified.getVariable('userName'));\nconsole.log('- User Email:', src_1.restified.getVariable('userEmail'));\nconsole.log('- User City:', src_1.restified.getVariable('userCity'));\nconsole.log('- Company Name:', src_1.restified.getVariable('companyName'));",
              "err": {},
              "uuid": "68dc7ed1-774e-41bd-910f-1f3426608c90",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate environment variable usage",
              "fullTitle": "Variable Store Example should demonstrate environment variable usage",
              "timedOut": false,
              "duration": 466,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Set environment variables (simulating external configuration)\nprocess.env.TEST_USER_ID = '2';\nprocess.env.TEST_ENVIRONMENT = 'production';\nprocess.env.API_VERSION = 'v1';\n// Use environment variables in headers and path parameters\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-Environment', '{{$env.TEST_ENVIRONMENT}}')\n    .header('X-API-Version', '{{$env.API_VERSION}}')\n    .when()\n    .get('/users/{{$env.TEST_USER_ID}}')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.id', 2)\n    .jsonPath('$.name')\n    .execute();\n// Environment variables are accessed through the special $env prefix\nconsole.log('Environment Variables Used:');\nconsole.log('- User ID:', process.env.TEST_USER_ID);\nconsole.log('- Environment:', process.env.TEST_ENVIRONMENT);\nconsole.log('- API Version:', process.env.API_VERSION);",
              "err": {
                "message": "Error: Assertions failed:\nExpected status code 200, got 404\nJSONPath '$.id' expected '2', got 'undefined'\nJSONPath '$.name' should match at least one element",
                "estack": "Error: Assertions failed:\nExpected status code 200, got 404\nJSONPath '$.id' expected '2', got 'undefined'\nJSONPath '$.name' should match at least one element\n    at ThenStep.execute (src\\core\\dsl\\then.core.ts:220:13)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (examples\\advanced\\variable-store.ts:165:5)",
                "diff": null
              },
              "uuid": "a4af21e0-50b3-436c-ba0f-f2a63f60eb73",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate variable priority and resolution",
              "fullTitle": "Variable Store Example should demonstrate variable priority and resolution",
              "timedOut": false,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set variables with same name at different levels to demonstrate priority\nconst testVar = 'priorityTest';\n// 1. Global variable (lowest priority)\nsrc_1.restified.setGlobalVariable(testVar, 'global-value');\n// 2. Local variable (higher priority)\nsrc_1.restified.setLocalVariable(testVar, 'local-value');\n// 3. Environment variable (can be accessed separately)\nprocess.env.PRIORITY_TEST = 'env-value';\n// Test variable resolution priority\nconsole.log('Variable Priority Resolution:');\nconsole.log('- Global value:', src_1.restified.getGlobalVariable(testVar));\nconsole.log('- Local value:', src_1.restified.getLocalVariable(testVar));\nconsole.log('- General getVariable() returns:', src_1.restified.getVariable(testVar));\n// Make a request to extract a value (highest priority)\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/users/1')\n    .execute();\nawait response\n    .statusCode(200)\n    .extract('$.name', testVar) // This will override local variable\n    .execute();\nconsole.log('After extraction:');\nconsole.log('- Extracted value:', src_1.restified.getVariable(testVar));\n// Demonstrate that local variable still exists but extracted takes priority\nconsole.log('- Local variable still exists:', src_1.restified.getLocalVariable(testVar));\n// Test using different variable names in templates\nconst testResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-Local-Var', '{{priorityTest}}') // Will resolve to extracted value\n    .header('X-Env-Var', '{{$env.PRIORITY_TEST}}') // Will resolve to env value\n    .when()\n    .get('/posts/1')\n    .execute();\nawait testResponse.statusCode(200).execute();",
              "err": {},
              "uuid": "8329cfc0-5b40-447d-8000-9c9ef85eff29",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate comprehensive variable operations",
              "fullTitle": "Variable Store Example should demonstrate comprehensive variable operations",
              "timedOut": false,
              "duration": 365,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set up a complex scenario with multiple variable types\nsrc_1.restified.setGlobalVariable('testSuite', 'comprehensive-variables');\nsrc_1.restified.setLocalVariables({\n    'testId': 'comp-test-001',\n    'targetUserId': 1,\n    'requestType': 'user-data-fetch'\n});\nprocess.env.MAX_RETRIES = '3';\nprocess.env.REQUEST_TIMEOUT = '5000';\n// Make request using all variable types\nconst userResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-Test-Id', '{{testId}}')\n    .header('X-Request-Type', '{{requestType}}')\n    .header('X-Test-Suite', '{{testSuite}}')\n    .header('X-Max-Retries', '{{$env.MAX_RETRIES}}')\n    .when()\n    .get('/users/{{targetUserId}}')\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .extract('$.name', 'extractedUserName')\n    .extract('$.company.name', 'extractedCompanyName')\n    .execute();\n// Now use extracted data in another request  \nconst postsResponse = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .header('X-User-Name', '{{extractedUserName}}')\n    .header('X-Company', '{{extractedCompanyName}}')\n    .header('X-Suite', '{{testSuite}}')\n    .when()\n    .get('/posts?userId={{targetUserId}}')\n    .execute();\nawait postsResponse\n    .statusCode(200)\n    .custom((response) => {\n    return Array.isArray(response.data) && response.data.length > 0;\n}, 'Should retrieve posts for the user')\n    .execute();\n// Display complete variable summary\nconsole.log('\\n=== Complete Variable Summary ===');\nconsole.log('Global Variables:', src_1.restified.getGlobalVariables());\nconsole.log('Local Variables:', src_1.restified.getLocalVariables());\nconsole.log('Extracted Variables: {');\nconsole.log('  extractedUserName:', src_1.restified.getVariable('extractedUserName'));\nconsole.log('  extractedCompanyName:', src_1.restified.getVariable('extractedCompanyName'));\nconsole.log('}');\nconsole.log('Environment Variables Used: {');\nconsole.log('  MAX_RETRIES:', process.env.MAX_RETRIES);\nconsole.log('  REQUEST_TIMEOUT:', process.env.REQUEST_TIMEOUT);\nconsole.log('}');",
              "err": {},
              "uuid": "8be8b95e-9a0f-470a-adee-e690d300f18e",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate variable clearing and cleanup",
              "fullTitle": "Variable Store Example should demonstrate variable clearing and cleanup",
              "timedOut": false,
              "duration": 173,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set up variables\nsrc_1.restified.setGlobalVariable('temp1', 'value1');\nsrc_1.restified.setLocalVariable('temp2', 'value2');\n// Extract some data\nconst response = await src_1.restified\n    .given()\n    .baseURL('https://jsonplaceholder.typicode.com')\n    .when()\n    .get('/users/1')\n    .execute();\nawait response\n    .statusCode(200)\n    .extract('$.id', 'temp3')\n    .execute();\n// Verify variables exist\nconsole.log('Before cleanup:');\nconsole.log('- Global temp1:', src_1.restified.getGlobalVariable('temp1'));\nconsole.log('- Local temp2:', src_1.restified.getLocalVariable('temp2'));\nconsole.log('- Extracted temp3:', src_1.restified.getVariable('temp3'));\n// Clear specific variable types\nsrc_1.restified.clearLocalVariables();\nconsole.log('\\nAfter clearing local variables:');\nconsole.log('- Global temp1:', src_1.restified.getGlobalVariable('temp1'));\nconsole.log('- Local temp2:', src_1.restified.getLocalVariable('temp2')); // Should be undefined\nconsole.log('- Extracted temp3:', src_1.restified.getVariable('temp3'));\n// Note: There's no clearVariables method, only clearLocalVariables\n// Global variables and extracted variables persist until cleanup\nconsole.log('\\nNote: Global and extracted variables persist until cleanup');\nconsole.log('- Global temp1 still exists:', src_1.restified.getGlobalVariable('temp1'));\nconsole.log('- Extracted temp3 still exists:', src_1.restified.getVariable('temp3'));",
              "err": {},
              "uuid": "d2cec30c-a4db-493b-8206-0e414027b698",
              "parentUUID": "cb8912c9-02af-4e28-99d0-b243427ab61e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc62603f-afd7-4532-ad8f-0c9a857b3a73",
            "33eed66d-b6d3-48ad-8246-d263dfc8b353",
            "68dc7ed1-774e-41bd-910f-1f3426608c90",
            "8329cfc0-5b40-447d-8000-9c9ef85eff29",
            "8be8b95e-9a0f-470a-adee-e690d300f18e",
            "d2cec30c-a4db-493b-8206-0e414027b698"
          ],
          "failures": [
            "a4af21e0-50b3-436c-ba0f-f2a63f60eb73"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2074,
          "root": false,
          "rootEmpty": false,
          "_timeout": 15000
        },
        {
          "uuid": "58f93021-5f6a-4a15-8b1a-b01d10dff5e8",
          "title": "WebSocket Real-time Testing",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
          "file": "\\examples\\advanced\\websocket-testing.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"WebSocket Real-time Testing\"",
              "fullTitle": "WebSocket Real-time Testing \"before all\" hook in \"WebSocket Real-time Testing\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create WebSocket client for echo service\nindex_1.restified.createWebSocketClient('echo', {\n    url: 'wss://echo.websocket.org',\n    timeout: 10000,\n    reconnectAttempts: 3,\n    reconnectDelay: 1000,\n    pingInterval: 30000\n});\n// Create WebSocket client for crypto data (if available)\nindex_1.restified.createWebSocketClient('crypto', {\n    url: 'wss://stream.binance.com:9443/ws/btcusdt@ticker',\n    timeout: 10000,\n    reconnectAttempts: 2\n});",
              "err": {},
              "uuid": "43421d74-8cd0-4faa-a181-b599d702af72",
              "parentUUID": "58f93021-5f6a-4a15-8b1a-b01d10dff5e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"WebSocket Real-time Testing\"",
              "fullTitle": "WebSocket Real-time Testing \"after all\" hook in \"WebSocket Real-time Testing\"",
              "timedOut": false,
              "duration": 418,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await index_1.restified.cleanup();",
              "err": {},
              "uuid": "e3185e2c-6c33-4c09-a933-0500348f0f3a",
              "parentUUID": "58f93021-5f6a-4a15-8b1a-b01d10dff5e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3e12e1d5-2913-4561-a03d-27546b03b572",
              "title": "WebSocket Connection Management",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should connect to WebSocket server",
                  "fullTitle": "WebSocket Real-time Testing WebSocket Connection Management should connect to WebSocket server",
                  "timedOut": false,
                  "duration": 598,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await index_1.restified.connectWebSocket('echo');\nconst client = index_1.restified.getWebSocketClient('echo');\n(0, chai_1.expect)(client.isConnected()).to.be.true;",
                  "err": {},
                  "uuid": "b78f3554-6454-4c95-b4d7-19e897b8a8c2",
                  "parentUUID": "3e12e1d5-2913-4561-a03d-27546b03b572",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle connection timeout",
                  "fullTitle": "WebSocket Real-time Testing WebSocket Connection Management should handle connection timeout",
                  "timedOut": false,
                  "duration": 263,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Create client with very short timeout\nindex_1.restified.createWebSocketClient('timeout-test', {\n    url: 'wss://invalid-websocket-server.example.com',\n    timeout: 1000\n});\ntry {\n    await index_1.restified.connectWebSocket('timeout-test');\n    chai_1.expect.fail('Should have thrown timeout error');\n}\ncatch (error) {\n    (0, chai_1.expect)(error.message).to.include('timeout');\n}",
                  "err": {
                    "message": "Error: getaddrinfo ENOTFOUND invalid-websocket-server.example.com",
                    "estack": "Error: getaddrinfo ENOTFOUND invalid-websocket-server.example.com\n    at GetAddrInfoReqWrap.onlookupall [as oncomplete] (node:dns:122:26)",
                    "diff": null
                  },
                  "uuid": "58f9d4bc-fbd9-4eb0-b761-f34d2ee79622",
                  "parentUUID": "3e12e1d5-2913-4561-a03d-27546b03b572",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b78f3554-6454-4c95-b4d7-19e897b8a8c2"
              ],
              "failures": [
                "58f9d4bc-fbd9-4eb0-b761-f34d2ee79622"
              ],
              "pending": [],
              "skipped": [],
              "duration": 861,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "562a48b1-2ab8-4cf1-8dbc-a22a239ae885",
              "title": "Message Communication",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send and receive text messages",
                  "fullTitle": "WebSocket Real-time Testing Message Communication should send and receive text messages",
                  "timedOut": false,
                  "duration": 213,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\n// Clear any existing messages\nclient.clearMessages();\nconst testMessage = 'Hello WebSocket from RestifiedTS!';\nawait client.send(testMessage);\n// Wait for echo response\nconst receivedMessage = await client.waitForMessage((msg) => msg.data === testMessage, 5000);\n(0, chai_1.expect)(receivedMessage.data).to.equal(testMessage);\n(0, chai_1.expect)(receivedMessage.timestamp).to.be.a('number');\n(0, chai_1.expect)(receivedMessage.id).to.be.a('string');",
                  "err": {},
                  "uuid": "d9eadb33-f6f6-4870-8596-c63b58012050",
                  "parentUUID": "562a48b1-2ab8-4cf1-8dbc-a22a239ae885",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send and receive JSON messages",
                  "fullTitle": "WebSocket Real-time Testing Message Communication should send and receive JSON messages",
                  "timedOut": false,
                  "duration": 233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nclient.clearMessages();\nconst jsonMessage = {\n    type: 'test',\n    data: {\n        userId: '{{$random.uuid}}',\n        timestamp: '{{$date.now}}',\n        message: 'JSON test from RestifiedTS'\n    }\n};\nawait client.sendJSON(jsonMessage);\n// Wait for JSON echo response\nconst receivedMessage = await client.waitForMessage((msg) => msg.data && msg.data.type === 'test', 5000);\n(0, chai_1.expect)(receivedMessage.data.type).to.equal('test');\n(0, chai_1.expect)(receivedMessage.data.data.message).to.equal('JSON test from RestifiedTS');\n(0, chai_1.expect)(receivedMessage.data.data.userId).to.match(/^[0-9a-f-]+$/);",
                  "err": {},
                  "uuid": "57a646a3-20e1-4312-83f3-d25b11a3ea84",
                  "parentUUID": "562a48b1-2ab8-4cf1-8dbc-a22a239ae885",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle message with variables",
                  "fullTitle": "WebSocket Real-time Testing Message Communication should handle message with variables",
                  "timedOut": false,
                  "duration": 5010,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nindex_1.restified.setGlobalVariable('userName', 'RestifiedTester');\nindex_1.restified.setGlobalVariable('sessionId', 'session-12345');\nclient.clearMessages();\nconst messageWithVars = {\n    user: '{{userName}}',\n    session: '{{sessionId}}',\n    action: 'ping',\n    timestamp: Date.now()\n};\nawait client.sendJSON(messageWithVars);\nconst receivedMessage = await client.waitForMessage((msg) => msg.data && msg.data.user === 'RestifiedTester', 5000);\n(0, chai_1.expect)(receivedMessage.data.user).to.equal('RestifiedTester');\n(0, chai_1.expect)(receivedMessage.data.session).to.equal('session-12345');\n(0, chai_1.expect)(receivedMessage.data.action).to.equal('ping');",
                  "err": {
                    "message": "Error: Timeout waiting for message after 5000ms",
                    "estack": "Error: Timeout waiting for message after 5000ms\n    at Timeout._onTimeout (src\\core\\clients\\WebSocketClient.ts:199:16)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)",
                    "diff": null
                  },
                  "uuid": "da145128-a425-4547-a307-f5135824381a",
                  "parentUUID": "562a48b1-2ab8-4cf1-8dbc-a22a239ae885",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9eadb33-f6f6-4870-8596-c63b58012050",
                "57a646a3-20e1-4312-83f3-d25b11a3ea84"
              ],
              "failures": [
                "da145128-a425-4547-a307-f5135824381a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 5456,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "69ae9284-1cb8-4cc0-81ab-ae9420adb112",
              "title": "Message Filtering and Querying",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should filter messages by criteria",
                  "fullTitle": "WebSocket Real-time Testing Message Filtering and Querying should filter messages by criteria",
                  "timedOut": false,
                  "duration": 1010,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nclient.clearMessages();\n// Send multiple messages\nawait client.sendJSON({ type: 'order', id: 1, status: 'pending' });\nawait client.sendJSON({ type: 'order', id: 2, status: 'completed' });\nawait client.sendJSON({ type: 'notification', message: 'System update' });\n// Wait a bit for all messages to be received\nawait new Promise(resolve => setTimeout(resolve, 1000));\nconst orderMessages = client.getMessagesWhere((msg) => msg.data && msg.data.type === 'order');\n(0, chai_1.expect)(orderMessages).to.have.length(2);\nconst completedOrders = client.getMessagesWhere((msg) => msg.data && msg.data.type === 'order' && msg.data.status === 'completed');\n(0, chai_1.expect)(completedOrders).to.have.length(1);\n(0, chai_1.expect)(completedOrders[0].data.id).to.equal(2);",
                  "err": {},
                  "uuid": "9f9d6c25-56d7-47d4-8262-ffb20850fc08",
                  "parentUUID": "69ae9284-1cb8-4cc0-81ab-ae9420adb112",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should wait for specific message patterns",
                  "fullTitle": "WebSocket Real-time Testing Message Filtering and Querying should wait for specific message patterns",
                  "timedOut": false,
                  "duration": 1255,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nclient.clearMessages();\n// Send message that will trigger wait condition\nsetTimeout(async () => {\n    await client.sendJSON({\n        type: 'response',\n        requestId: 'req-123',\n        result: 'success'\n    });\n}, 1000);\n// Wait for specific response\nconst response = await client.waitForMessage((msg) => msg.data &&\n    msg.data.type === 'response' &&\n    msg.data.requestId === 'req-123', 5000);\n(0, chai_1.expect)(response.data.result).to.equal('success');",
                  "err": {},
                  "uuid": "3e309cd1-d6a5-423e-b02c-ebaef60caaa7",
                  "parentUUID": "69ae9284-1cb8-4cc0-81ab-ae9420adb112",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f9d6c25-56d7-47d4-8262-ffb20850fc08",
                "3e309cd1-d6a5-423e-b02c-ebaef60caaa7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2265,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e3be2879-c00a-4525-a861-5510fb6ca072",
              "title": "Connection Health and Ping",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should measure ping latency",
                  "fullTitle": "WebSocket Real-time Testing Connection Health and Ping should measure ping latency",
                  "timedOut": false,
                  "duration": 237,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nif (client.isConnected()) {\n    const latency = await client.ping();\n    (0, chai_1.expect)(latency).to.be.a('number');\n    (0, chai_1.expect)(latency).to.be.greaterThan(0);\n    (0, chai_1.expect)(latency).to.be.lessThan(10000); // Less than 10 seconds\n    console.log(`WebSocket ping latency: ${latency}ms`);\n}",
                  "err": {},
                  "uuid": "e1a322a1-cab5-4106-88f2-42af2101a88d",
                  "parentUUID": "e3be2879-c00a-4525-a861-5510fb6ca072",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1a322a1-cab5-4106-88f2-42af2101a88d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 237,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "bd794797-c015-4d7b-9f68-73535d81d3f2",
              "title": "Real-time Data Stream Testing",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should receive crypto price updates",
                  "fullTitle": "WebSocket Real-time Testing Real-time Data Stream Testing should receive crypto price updates",
                  "timedOut": false,
                  "duration": 1672,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await index_1.restified.connectWebSocket('crypto');\n    const client = index_1.restified.getWebSocketClient('crypto');\n    client.clearMessages();\n    // Wait for price update message\n    const priceUpdate = await client.waitForMessage((msg) => msg.data && typeof msg.data.c !== 'undefined', // 'c' is close price\n    10000);\n    (0, chai_1.expect)(priceUpdate.data).to.have.property('s'); // symbol\n    (0, chai_1.expect)(priceUpdate.data).to.have.property('c'); // close price\n    (0, chai_1.expect)(priceUpdate.data.s).to.equal('BTCUSDT');\n    (0, chai_1.expect)(parseFloat(priceUpdate.data.c)).to.be.greaterThan(0);\n    console.log(`Received BTC price: $${priceUpdate.data.c}`);\n}\ncatch (error) {\n    console.log('Crypto stream test skipped - service unavailable');\n    this.skip();\n}",
                  "err": {},
                  "uuid": "e835d128-017a-4ef5-b069-f27b1fce664d",
                  "parentUUID": "bd794797-c015-4d7b-9f68-73535d81d3f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle multiple concurrent connections",
                  "fullTitle": "WebSocket Real-time Testing Real-time Data Stream Testing should handle multiple concurrent connections",
                  "timedOut": false,
                  "duration": 567,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Create multiple echo connections\nindex_1.restified.createWebSocketClient('echo2', {\n    url: 'wss://echo.websocket.org',\n    timeout: 10000\n});\nawait index_1.restified.connectWebSocket('echo2');\nconst client1 = index_1.restified.getWebSocketClient('echo');\nconst client2 = index_1.restified.getWebSocketClient('echo2');\n(0, chai_1.expect)(client1.isConnected()).to.be.true;\n(0, chai_1.expect)(client2.isConnected()).to.be.true;\n// Send different messages on each connection\nclient1.clearMessages();\nclient2.clearMessages();\nawait client1.send('Message from connection 1');\nawait client2.send('Message from connection 2');\n// Verify each connection received its own message\nconst msg1 = await client1.waitForMessage((msg) => msg.data === 'Message from connection 1', 3000);\nconst msg2 = await client2.waitForMessage((msg) => msg.data === 'Message from connection 2', 3000);\n(0, chai_1.expect)(msg1.data).to.equal('Message from connection 1');\n(0, chai_1.expect)(msg2.data).to.equal('Message from connection 2');",
                  "err": {},
                  "uuid": "b9ca53e1-067c-409e-9d2e-2c3c0c25b6c3",
                  "parentUUID": "bd794797-c015-4d7b-9f68-73535d81d3f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e835d128-017a-4ef5-b069-f27b1fce664d",
                "b9ca53e1-067c-409e-9d2e-2c3c0c25b6c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2239,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "54d41fd1-749a-4d9a-a1a3-d62be582f23e",
              "title": "Error Handling and Reconnection",
              "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\advanced\\websocket-testing.ts",
              "file": "\\examples\\advanced\\websocket-testing.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle disconnection gracefully",
                  "fullTitle": "WebSocket Real-time Testing Error Handling and Reconnection should handle disconnection gracefully",
                  "timedOut": false,
                  "duration": 242,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const client = index_1.restified.getWebSocketClient('echo');\nif (client.isConnected()) {\n    await client.disconnect();\n    (0, chai_1.expect)(client.isConnected()).to.be.false;\n    // Test result should show disconnection\n    const testResult = client.getTestResult();\n    (0, chai_1.expect)(testResult.connected).to.be.false;\n    (0, chai_1.expect)(testResult.disconnectionTime).to.be.a('number');\n    (0, chai_1.expect)(testResult.messages).to.be.an('array');\n}",
                  "err": {},
                  "uuid": "e2a9e9d1-205d-41b7-81c3-1ba5bf949c1f",
                  "parentUUID": "54d41fd1-749a-4d9a-a1a3-d62be582f23e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2a9e9d1-205d-41b7-81c3-1ba5bf949c1f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 242,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "ac4add9f-f341-482e-a4d9-82ee71528805",
          "title": "Bearer Token Authentication Example",
          "fullFile": "C:\\RajKumar\\Otalio\\Otalio\\Apps\\RestifiedApp\\Restified\\examples\\authentication\\bearer-auth.ts",
          "file": "\\examples\\authentication\\bearer-auth.ts",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "fullTitle": "Bearer Token Authentication Example \"before all\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "ff6cf743-40dd-41b2-b157-7d04d00d5737",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "fullTitle": "Bearer Token Authentication Example \"before each\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "47eb2e63-8128-47b7-a95a-d35cc0d17a00",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "fullTitle": "Bearer Token Authentication Example \"after all\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "68778dda-78c8-4b77-947c-46aab392f1fa",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "fullTitle": "Bearer Token Authentication Example \"after each\" hook: Bearer Token in \"Bearer Token Authentication Example\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Simple GET', 'Global Setup');\n(0, chai_1.expect)(true).to.be.true; // Ensure global setup is complete",
              "err": {},
              "uuid": "0c9be6fc-b13b-44f7-bb71-2b70e316489f",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should use global authentication token with testUtils client",
              "fullTitle": "Bearer Token Authentication Example should use global authentication token with testUtils client",
              "timedOut": false,
              "duration": 1739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Bearer Auth', 'Global Token Usage');\n// Use the global auth token that was obtained during global setup\n// Common headers are already included in the client configuration\nconst response = await src_1.restified\n    .given()\n    .useClient('testUtils') // Pre-configured client\n    .bearerToken('{{globalAuthToken}}') // Global auth token\n    .when()\n    .get('/bearer')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.authenticated', true)\n    .jsonPath('$.token', src_1.restified.getVariable('globalAuthToken'))\n    .execute();\nconsole.log('‚úÖ Authentication successful with global token');",
              "err": {},
              "uuid": "099d3972-5b5f-4377-a6f8-efa66e6c9bd6",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should demonstrate environment-based authentication",
              "fullTitle": "Bearer Token Authentication Example should demonstrate environment-based authentication",
              "timedOut": false,
              "duration": 1030,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Bearer Auth', 'Environment Auth');\n// Use environment variable that was set up during global setup\n// Common headers are already included in the client configuration\nconst response = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .bearerToken('{{$env.EXAMPLE_API_KEY}}') // From global setup\n    .when()\n    .get('/bearer')\n    .execute();\nawait response\n    .statusCode(200)\n    .jsonPath('$.authenticated', true)\n    .jsonPath('$.token', process.env.EXAMPLE_API_KEY)\n    .execute();\nconsole.log('‚úÖ Environment-based authentication successful');",
              "err": {},
              "uuid": "4f06850f-4537-4df5-8cc4-7f165bd15066",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show authenticated API workflow",
              "fullTitle": "Bearer Token Authentication Example should show authenticated API workflow",
              "timedOut": false,
              "duration": 950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Bearer Auth', 'API Workflow');\n// Step 1: Use authenticated API client for business operation\n// Common headers are already included in the client configuration\nconst userResponse = await src_1.restified\n    .given()\n    .useClient('api') // Pre-configured with global auth\n    .header('Authorization', `Bearer {{globalAuthToken}}`)\n    .when()\n    .get('/users/{{globalUserId}}')\n    .execute();\nawait userResponse\n    .statusCode(200)\n    .jsonPath('$.id', src_1.restified.getVariable('globalUserId'))\n    .extract('$.phone', 'userPhone')\n    .execute();\n// Step 2: Validate auth token with test utilities\nconst validateResponse = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .header('X-User-Phone', '{{userPhone}}')\n    .header('X-Global-User', '{{globalUserEmail}}')\n    .bearerToken('{{globalAuthToken}}')\n    .when()\n    .get('/bearer')\n    .execute();\nawait validateResponse\n    .statusCode(200)\n    .jsonPath('$.authenticated', true)\n    .custom((response) => {\n    return response.data.token === src_1.restified.getVariable('globalAuthToken');\n}, 'Token should match global auth token')\n    .execute();\nconsole.log('‚úÖ Full authenticated workflow completed');",
              "err": {},
              "uuid": "5bd0ce32-f634-4c57-945e-5abb9969347f",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle authentication errors with global patterns",
              "fullTitle": "Bearer Token Authentication Example should handle authentication errors with global patterns",
              "timedOut": false,
              "duration": 269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "test_utils_1.GlobalTestUtils.logTestProgress('Bearer Auth', 'Error Handling');\n// Test authentication failure using invalid token\n// Common headers are already included in the client configuration\nconst response = await src_1.restified\n    .given()\n    .useClient('testUtils')\n    .bearerToken('invalid-global-token')\n    .when()\n    .get('/bearer')\n    .execute();\nawait response\n    .statusCode(200) // HTTPBin accepts any token for demo\n    .jsonPath('$.authenticated', true)\n    .jsonPath('$.token', 'invalid-global-token')\n    .execute();\nconsole.log('‚úÖ Authentication error handling verified');",
              "err": {},
              "uuid": "b2af7529-e94d-4c06-9169-265196ef25fd",
              "parentUUID": "ac4add9f-f341-482e-a4d9-82ee71528805",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "099d3972-5b5f-4377-a6f8-efa66e6c9bd6",
            "4f06850f-4537-4df5-8cc4-7f165bd15066",
            "5bd0ce32-f634-4c57-945e-5abb9969347f",
            "b2af7529-e94d-4c06-9169-265196ef25fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3988,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "[object Object]": true
      },
      "version": "6.2.0"
    }
  }
}