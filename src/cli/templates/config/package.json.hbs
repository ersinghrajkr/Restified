{
  "name": "{{packageName}}",
  "version": "1.0.0",
  "description": "{{projectName}} API test suite generated by RestifiedTS",
  "private": true,
  "scripts": {
    "// Core Testing": "",
    "test": "mocha -r ts-node/register -r tsconfig-paths/register 'setup/global-setup.ts' 'tests/**/*.ts' --reporter restifiedts/dist/reporting/restified-html-reporter.js",
    "test:spec": "mocha -r ts-node/register -r tsconfig-paths/register 'setup/global-setup.ts' 'tests/**/*.ts' --reporter spec",
    "test:console": "mocha -r ts-node/register -r tsconfig-paths/register 'setup/global-setup.ts' 'tests/**/*.ts'",
    "test:watch": "npm run test:console -- --watch",
    "test:coverage": "nyc npm run test:console",
    
    "// HTML Reports": "",
    "test:html": "npm run test",
    "test:mochawesome": "npm run test:console -- --reporter mochawesome --reporter-options reportDir=reports,reportFilename=mochawesome-report,html=true,json=true,overwrite=true,charts=true,code=true",
    
    "// Utilities": "",
    "reports:clean": "rimraf reports mochawesome-report test-reports allure-results output test-output restified-reports",
    "reports:open": "start reports/restified-html-report.html || open reports/restified-html-report.html",
    "reports:mochawesome": "start reports/mochawesome-report.html || open reports/mochawesome-report.html"{{#each testTypes}},
    "test:{{this}}": "npm run test:console -- --grep \"{{this}}\""{{/each}}{{#if hasTestType 'database'}},
    "db:install": "echo 'ðŸ“¦ Run the following commands to install database packages you need:' && echo 'PostgreSQL: npm install pg @types/pg' && echo 'MySQL: npm install mysql2' && echo 'MongoDB: npm install mongodb' && echo 'SQLite: npm install sqlite3' && echo 'Redis: npm install redis' && echo 'SQL Server: npm install mssql'",
    "db:install:all": "npm install pg @types/pg mysql2 mongodb sqlite3 redis mssql",
    "db:install:postgresql": "npm install pg @types/pg",
    "db:install:mysql": "npm install mysql2", 
    "db:install:mongodb": "npm install mongodb",
    "db:install:sqlite": "npm install sqlite3",
    "db:install:redis": "npm install redis",
    "db:install:mssql": "npm install mssql"{{/if}}{{#if hasTestType 'performance'}},
    "test:performance:k6": "k6 run performance-tests.js",
    "test:performance:artillery": "artillery run performance-tests.yml"{{/if}}{{#if hasTestType 'security'}},
    "test:security:zap": "echo 'Make sure OWASP ZAP is running on http://localhost:8080' && npm run test:console -- --grep security"{{/if}}
  },
  "devDependencies": {
{{#each devDependencies}}
    "{{@key}}": "{{this}}"{{#unless @last}},{{/unless}}
{{/each}}
  },
  "dependencies": {
{{#each dependencies}}
    "{{@key}}": "{{this}}"{{#unless @last}},{{/unless}}
{{/each}}
  },
  "engines": {
    "node": ">=16.0.0"
  }{{#if hasTestType 'database'}},
  "peerDependencies": {
    "pg": "^8.8.0",
    "mongodb": "^6.0.0", 
    "mysql2": "^3.6.0",
    "sqlite3": "^5.1.0",
    "redis": "^4.6.0",
    "mssql": "^10.0.0"
  },
  "peerDependenciesMeta": {
    "pg": {
      "optional": true
    },
    "mongodb": {
      "optional": true
    },
    "mysql2": {
      "optional": true
    },
    "sqlite3": {
      "optional": true
    },
    "redis": {
      "optional": true
    },
    "mssql": {
      "optional": true
    }
  }{{/if}}
}